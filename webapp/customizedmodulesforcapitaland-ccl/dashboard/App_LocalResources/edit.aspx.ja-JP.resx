<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DashboardQueryResource1.Caption" xml:space="preserve">
		<value>ダッシュ-ボード SQL</value>
	</data>
  <data name="DashboardQueryResource1.ErrorMessage" xml:space="preserve">
		<value />
	</data>
  <data name="DashboardQueryResource1.ToolTip" xml:space="preserve">
		<value>SQLクエリーで実装されたダッシュ-ボードです。注意: プレビュータブ でダッシュ-ボード をプレビューすることができます。</value>
		<comment>'Query' refers to a database query, not a question.</comment>
	</data>
  <data name="DashboardRolesResource1.Caption" xml:space="preserve">
		<value>役割</value>
	</data>
  <data name="DashboardRolesResource1.ErrorMessage" xml:space="preserve">
		<value />
	</data>
  <data name="DashboardRolesResource1.ToolTip" xml:space="preserve">
		<value>このダッシュ-ボードにアクセスできる役割を示します。</value>
		<comment>'Access' refers to 'access control'. Some roles are only given 'access' to view certain dashboards.</comment>
	</data>
  <data name="DashboardTypeResource1.Caption" xml:space="preserve">
		<value>ダッシュ-ボードタイプ</value>
	</data>
  <data name="DashboardTypeResource1.ErrorMessage" xml:space="preserve">
		<value />
	</data>
  <data name="DashboardTypeResource1.ToolTip" xml:space="preserve">
		<value>ダッシュ-ボードのタイプ</value>
	</data>
  <data name="DropDownQueryResource1.Caption" xml:space="preserve">
		<value>ドロップダウン SQL</value>
	</data>
  <data name="DropDownQueryResource1.ErrorMessage" xml:space="preserve">
		<value />
	</data>
  <data name="DropDownQueryResource1.ToolTip" xml:space="preserve">
		<value>SQLクエリーでドロップダウンリストを実装します。</value>
	</data>
  <data name="DropDownTextFieldResource1.Caption" xml:space="preserve">
		<value>テキストカラム</value>
		<comment>'Column' refers to a column in a database table.</comment>
	</data>
  <data name="DropDownTextFieldResource1.ErrorMessage" xml:space="preserve">
		<value />
	</data>
  <data name="DropDownTextFieldResource1.ToolTip" xml:space="preserve">
		<value>ユーザーにクエリーの結果のカラムが表示します。</value>
	</data>
  <data name="DropDownValueFieldResource1.Caption" xml:space="preserve">
		<value>値カラム</value>
	</data>
  <data name="DropDownValueFieldResource1.ErrorMessage" xml:space="preserve">
		<value />
	</data>
  <data name="DropDownValueFieldResource1.ToolTip" xml:space="preserve">
		<value>クエリーの結果のカラムがダッシュ-ボードクエリーに用います。</value>
	</data>
  <data name="HeaderTextResource1.Caption" xml:space="preserve">
		<value>ヘッダーテキスト</value>
	</data>
  <data name="HeaderTextResource1.ErrorMessage" xml:space="preserve">
		<value />
	</data>
  <data name="HeaderTextResource1.ToolTip" xml:space="preserve">
		<value>ユーザーにダッシュ-ボード のタイトルを表示します。</value>
	</data>
  <data name="IsAutoCalibrateResource1.Caption" xml:space="preserve">
		<value>自動調整</value>
		<comment>'Auto-calibrate' indicates automatic adjustment of a chart's y-axis in order to contain all values in the chart. </comment>
	</data>
  <data name="IsAutoCalibrateResource1.ErrorMessage" xml:space="preserve">
		<value />
	</data>
  <data name="IsAutoCalibrateResource1.Text" xml:space="preserve">
		<value>はい、目盛を自動調整して下さい。</value>
	</data>
  <data name="IsAutoCalibrateResource1.ToolTip" xml:space="preserve">
		<value>ゲージ目盛が値の結果によって自動調整されるべきかまたは手動指定かを示されます。</value>
	</data>
  <data name="IsDropDownAvailableResource1.Caption" xml:space="preserve">
		<value>ドロップダウン リストを表示</value>
	</data>
  <data name="IsDropDownAvailableResource1.ErrorMessage" xml:space="preserve">
		<value />
	</data>
  <data name="IsDropDownAvailableResource1.Text" xml:space="preserve">
		<value>はい、ドロップダウン リストを表示</value>
	</data>
  <data name="IsDropDownAvailableResource1.ToolTip" xml:space="preserve">
		<value>ユーザーがクエリーをフィルタするためドロップダウン リストが表示されるべきかを示されます。</value>
	</data>
  <data name="IsPopulatedByQueryResource1.Caption" xml:space="preserve">
		<value>クエリーで実装?</value>
	</data>
  <data name="IsPopulatedByQueryResource1.ErrorMessage" xml:space="preserve">
		<value />
	</data>
  <data name="IsPopulatedByQueryResource1.Text" xml:space="preserve">
		<value>はい、クエリーの結果でこのリストが実装されます。</value>
	</data>
  <data name="IsPopulatedByQueryResource1.ToolTip" xml:space="preserve">
		<value>ダッシュ-ボードがクエリーで実装されるべきかまたはコンマに分けられ価リストで実装されるべきかを示されます。</value>
	</data>
  <data name="ListItemResource1.Text" xml:space="preserve">
		<value>グリッド</value>
	</data>
  <data name="ListItemResource1.Value" xml:space="preserve">
		<value>0</value>
	</data>
  <data name="ListItemResource2.Text" xml:space="preserve">
		<value>パイ</value>
	</data>
  <data name="ListItemResource2.Value" xml:space="preserve">
		<value>1</value>
	</data>
  <data name="ListItemResource3.Text" xml:space="preserve">
		<value>ゲージ</value>
	</data>
  <data name="ListItemResource3.Value" xml:space="preserve">
		<value>2</value>
	</data>
  <data name="ListItemResource4.Text" xml:space="preserve">
		<value>棒</value>
	</data>
  <data name="ListItemResource4.Value" xml:space="preserve">
		<value>3</value>
	</data>
  <data name="ListItemResource5.Text" xml:space="preserve">
		<value>ライン</value>
	</data>
  <data name="ListItemResource5.Value" xml:space="preserve">
		<value>5</value>
	</data>
  <data name="ListItemResource6.Text" xml:space="preserve">
		<value>スタック棒</value>
	</data>
  <data name="ListItemResource6.Value" xml:space="preserve">
		<value>4</value>
	</data>
  <data name="ListItemResource7.Text" xml:space="preserve">
		<value>スタックライン</value>
	</data>
  <data name="ListItemResource7.Value" xml:space="preserve">
		<value>6</value>
	</data>
  <data name="ListItemResource8.Text" xml:space="preserve">
		<value>スタック地域</value>
	</data>
  <data name="ListItemResource8.Value" xml:space="preserve">
		<value>7</value>
	</data>
  <data name="ListItemResource9.Text" xml:space="preserve">
		<value>散布</value>
	</data>
  <data name="ListItemResource9.Value" xml:space="preserve">
		<value>8</value>
	</data>
  <data name="PageResource1.Title" xml:space="preserve">
		<value>Anacle.EAM</value>
	</data>
  <data name="panelDropDownResource1.GroupingText" xml:space="preserve">
		<value />
	</data>
  <data name="panelDropDownResource1.ToolTip" xml:space="preserve">
		<value />
	</data>
  <data name="panelManualScaleResource1.GroupingText" xml:space="preserve">
		<value />
	</data>
  <data name="panelManualScaleResource1.ToolTip" xml:space="preserve">
		<value />
	</data>
  <data name="panelNotPopulatedByQueryResource1.GroupingText" xml:space="preserve">
		<value />
	</data>
  <data name="panelNotPopulatedByQueryResource1.ToolTip" xml:space="preserve">
		<value />
	</data>
  <data name="panelPopulatedByQueryResource1.GroupingText" xml:space="preserve">
		<value />
	</data>
  <data name="panelPopulatedByQueryResource1.ToolTip" xml:space="preserve">
		<value />
	</data>
  <data name="panelScaleResource1.GroupingText" xml:space="preserve">
		<value />
	</data>
  <data name="panelScaleResource1.ToolTip" xml:space="preserve">
		<value />
	</data>
  <data name="sep1Resource1.Caption" xml:space="preserve">
		<value>ゲージ目盛</value>
	</data>
  <data name="sep1Resource1.ToolTip" xml:space="preserve">
		<value />
	</data>
  <data name="tabObjectResource1.GroupingText" xml:space="preserve">
		<value />
	</data>
  <data name="tabObjectResource1.ToolTip" xml:space="preserve">
		<value />
	</data>
  <data name="tabPreviewResource1.Caption" xml:space="preserve">
		<value>プレビュー</value>
	</data>
  <data name="tabPreviewResource1.ToolTip" xml:space="preserve">
		<value />
	</data>
  <data name="TextListResource1.Caption" xml:space="preserve">
		<value>テキストリスト</value>
	</data>
  <data name="TextListResource1.ErrorMessage" xml:space="preserve">
		<value />
	</data>
  <data name="TextListResource1.ToolTip" xml:space="preserve">
		<value>ユーザーが選択にコンマに分けられテキストリストが表示されます。</value>
	</data>
  <data name="uitabview1Resource1.Caption" xml:space="preserve">
		<value>詳細</value>
	</data>
  <data name="uitabview1Resource1.ToolTip" xml:space="preserve">
		<value />
	</data>
  <data name="uitabview2Resource1.Caption" xml:space="preserve">
		<value>添付書類</value>
	</data>
  <data name="uitabview2Resource1.ToolTip" xml:space="preserve">
		<value />
	</data>
  <data name="uitabview3Resource1.Caption" xml:space="preserve">
		<value>メモ</value>
	</data>
  <data name="uitabview3Resource1.ToolTip" xml:space="preserve">
		<value />
	</data>
  <data name="UITabView4Resource1.Caption" xml:space="preserve">
		<value>データ</value>
	</data>
  <data name="UITabView4Resource1.ToolTip" xml:space="preserve">
		<value />
	</data>
  <data name="UITabView5Resource1.Caption" xml:space="preserve">
		<value>アクセス</value>
	</data>
  <data name="UITabView5Resource1.ToolTip" xml:space="preserve">
		<value />
	</data>
  <data name="ValueListResource1.Caption" xml:space="preserve">
		<value>値リスト</value>
	</data>
  <data name="ValueListResource1.ErrorMessage" xml:space="preserve">
		<value />
	</data>
  <data name="ValueListResource1.ToolTip" xml:space="preserve">
		<value>コンマ区きりのテキスト値リストがテキストリストに相当します。</value>
	</data>
  <data name="XAxisColumnNameResource1.Caption" xml:space="preserve">
		<value>X-軸 カラムテキスト</value>
	</data>
  <data name="XAxisColumnNameResource1.ErrorMessage" xml:space="preserve">
		<value />
	</data>
  <data name="XAxisColumnNameResource1.ToolTip" xml:space="preserve">
		<value>クエリー結果カラムがX-軸 カラムのラベルに用います。</value>
	</data>
  <data name="XAxisNameResource1.Caption" xml:space="preserve">
		<value>X-軸 カラムテキスト</value>
	</data>
  <data name="XAxisNameResource1.ErrorMessage" xml:space="preserve">
		<value />
	</data>
  <data name="XAxisNameResource1.ToolTip" xml:space="preserve">
		<value>X-軸に表示されるべきタイトルです。例えば '月', '地域', 'サービスタイプ', 等.</value>
	</data>
  <data name="YAxisColumnNameResource1.Caption" xml:space="preserve">
		<value>結果カラム</value>
	</data>
  <data name="YAxisColumnNameResource1.ErrorMessage" xml:space="preserve">
		<value />
	</data>
  <data name="YAxisColumnNameResource1.ToolTip" xml:space="preserve">
		<value>値としてクエリーの結果カラムが使われます。</value>
	</data>
  <data name="YAxisIntervalResource1.Caption" xml:space="preserve">
		<value>目盛間隔</value>
	</data>
  <data name="YAxisIntervalResource1.ErrorMessage" xml:space="preserve">
		<value />
	</data>
  <data name="YAxisIntervalResource1.ToolTip" xml:space="preserve">
		<value>最小と最大の間の間隔です。この間隔が ざっと最小と最大の間を10で割るに一致します。例えば,もし最小と最大がそれぞれ0 と 100であり、,間隔が10となります。</value>
	</data>
  <data name="YAxisMaximumResource1.Caption" xml:space="preserve">
		<value>最大目盛</value>
	</data>
  <data name="YAxisMaximumResource1.ErrorMessage" xml:space="preserve">
		<value />
	</data>
  <data name="YAxisMaximumResource1.ToolTip" xml:space="preserve">
		<value>目盛の最大値です。何か値が最大値が以上のとき最大値を少し超えで表示されます。</value>
	</data>
  <data name="YAxisMinimumResource1.Caption" xml:space="preserve">
		<value>最小目盛</value>
	</data>
  <data name="YAxisMinimumResource1.ErrorMessage" xml:space="preserve">
		<value />
	</data>
  <data name="YAxisMinimumResource1.ToolTip" xml:space="preserve">
		<value>目盛の最小値です。何か値が最大値が以上のとき最大値を少し超えで表示されます。.</value>
	</data>
  <data name="YAxisNameResource1.Caption" xml:space="preserve">
		<value>結果テキスト</value>
	</data>
  <data name="YAxisNameResource1.ErrorMessage" xml:space="preserve">
		<value />
	</data>
  <data name="YAxisNameResource1.ToolTip" xml:space="preserve">
		<value>Y-軸に表示されるべきタイトルです。例えば 'コスト ($)', パワー (kwh)', '時間数', 等.</value>
	</data>
</root>