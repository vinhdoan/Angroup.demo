<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnDownloadResource1.Text" xml:space="preserve">
    <value>下载EXCEL模板</value>
  </data>
  <data name="btnUploadCancelResource1.Text" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="btnUploadConfirmResource1.ConfirmText" xml:space="preserve">
    <value>全部现有的预算期初金额都会被EXCEL电子表格的期初金额取代。您确定继续吗？</value>
  </data>
  <data name="btnUploadConfirmResource1.Text" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="btnUploadResource1.Text" xml:space="preserve">
    <value>上传EXCEL数据</value>
  </data>
  <data name="buttonOpenNewBudgetPeriodResource1.ConfirmText" xml:space="preserve">
    <value>您确定要新开预算期吗？请确保在新开预算期前，把现有的预算期先存档。</value>
  </data>
  <data name="buttonOpenNewBudgetPeriodResource1.Text" xml:space="preserve">
    <value>新开预算期</value>
  </data>
  <data name="buttonShowBudgetViewResource1.Text" xml:space="preserve">
    <value>显示预算列表</value>
  </data>
  <data name="checkIsActiveResource1.Caption" xml:space="preserve">
    <value>是有效？</value>
  </data>
  <data name="dateClosingDateResource1.Caption" xml:space="preserve">
    <value>结帐日期</value>
  </data>
  <data name="dateEndDateResource1.Caption" xml:space="preserve">
    <value>结束日期</value>
  </data>
  <data name="dateStartDateResource1.Caption" xml:space="preserve">
    <value>开始日期</value>
  </data>
  <data name="dropBudgetResource1.Caption" xml:space="preserve">
    <value>预算</value>
  </data>
  <data name="gridBudgetPeriodOpeningBalancesResource1.Caption" xml:space="preserve">
    <value>期初余额</value>
  </data>
  <data name="hintClosingDateResource1.Text" xml:space="preserve">
    <value>开销日期超出结帐日期，所以开销无法在这预算期入账。</value>
  </data>
  <data name="hintNumberOfMonthsPerIntervalResource1.Text" xml:space="preserve">
    <value>每一个预算期（通常是年预算）能分配成较小的财政期（通常是月计）。在年预算的例子里，通常每分隔只有一个月。 &lt;br /&gt;&lt;br /&gt;
请注意：分隔的总数量 (预算期除于每分隔的月数)&lt;b&gt;不能&lt;/b&gt;超过36个。</value>
  </data>
  <data name="InputFileResource1.Caption" xml:space="preserve">
    <value>预算调整</value>
  </data>
  <data name="labelBudgetTotalResource1.Caption" xml:space="preserve">
    <value>预算总数</value>
  </data>
  <data name="linkDistributeResource1.Text" xml:space="preserve">
    <value>分发</value>
  </data>
  <data name="PageResource1.Title" xml:space="preserve">
    <value>安科.EAM</value>
  </data>
  <data name="tabAttachmentsResource1.Caption" xml:space="preserve">
    <value>附件</value>
  </data>
  <data name="tabBudgetAmountsResource1.Caption" xml:space="preserve">
    <value>余额</value>
  </data>
  <data name="tabDetailsResource1.Caption" xml:space="preserve">
    <value>详情</value>
  </data>
  <data name="tabMemoResource1.Caption" xml:space="preserve">
    <value>备注</value>
  </data>
  <data name="textLowBudgetThresholdResource1.Caption" xml:space="preserve">
    <value>下限 (%)</value>
  </data>
  <data name="textNumberOfMonthsPerIntervalResource1.Caption" xml:space="preserve">
    <value>每分隔的月数</value>
  </data>
  <data name="textTotalOpeningBalanceResource1.Caption" xml:space="preserve">
    <value>总数</value>
  </data>
  <data name="treeAccountResource1.Caption" xml:space="preserve">
    <value>增加帐号</value>
  </data>
  <data name="UIGridViewBoundColumnResource1.HeaderText" xml:space="preserve">
    <value>帐号</value>
  </data>
  <data name="UIGridViewButtonColumnResource1.ConfirmText" xml:space="preserve">
    <value>确定去除？</value>
  </data>
  <data name="UIGridViewCommandResource1.CommandText" xml:space="preserve">
    <value>去除</value>
  </data>
  <data name="UIGridViewCommandResource1.ConfirmText" xml:space="preserve">
    <value>确定去除？</value>
  </data>
  <data name="UIGridViewTemplateColumnResource1.HeaderText" xml:space="preserve">
    <value>是有效？</value>
  </data>
  <data name="UIGridViewTemplateColumnResource38.HeaderText" xml:space="preserve">
    <value>总数</value>
  </data>
  <data name="UIGridViewTemplateColumnResource40.HeaderText" xml:space="preserve">
    <value>下限 (%)</value>
  </data>
  <data name="objectBaseResource1.ObjectNameCaption" xml:space="preserve">
    <value>预算期间名称</value>
  </data>
  <data name="panelResource1.Caption" xml:space="preserve">
    <value>预算期间</value>
  </data>
</root>