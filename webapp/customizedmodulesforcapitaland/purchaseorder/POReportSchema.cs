//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Buildfolio.BWFM.Web.wj.generatepo {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class POReportSchema : DataSet {
        
        private PODetailsReportDataTable tablePODetailsReport;
        
        private POItemsReportDataTable tablePOItemsReport;
        
        private POMgmtCompanyDataTable tablePOMgmtCompany;
        
        public POReportSchema() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected POReportSchema(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["PODetailsReport"] != null)) {
                    this.Tables.Add(new PODetailsReportDataTable(ds.Tables["PODetailsReport"]));
                }
                if ((ds.Tables["POItemsReport"] != null)) {
                    this.Tables.Add(new POItemsReportDataTable(ds.Tables["POItemsReport"]));
                }
                if ((ds.Tables["POMgmtCompany"] != null)) {
                    this.Tables.Add(new POMgmtCompanyDataTable(ds.Tables["POMgmtCompany"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PODetailsReportDataTable PODetailsReport {
            get {
                return this.tablePODetailsReport;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public POItemsReportDataTable POItemsReport {
            get {
                return this.tablePOItemsReport;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public POMgmtCompanyDataTable POMgmtCompany {
            get {
                return this.tablePOMgmtCompany;
            }
        }
        
        public override DataSet Clone() {
            POReportSchema cln = ((POReportSchema)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["PODetailsReport"] != null)) {
                this.Tables.Add(new PODetailsReportDataTable(ds.Tables["PODetailsReport"]));
            }
            if ((ds.Tables["POItemsReport"] != null)) {
                this.Tables.Add(new POItemsReportDataTable(ds.Tables["POItemsReport"]));
            }
            if ((ds.Tables["POMgmtCompany"] != null)) {
                this.Tables.Add(new POMgmtCompanyDataTable(ds.Tables["POMgmtCompany"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablePODetailsReport = ((PODetailsReportDataTable)(this.Tables["PODetailsReport"]));
            if ((this.tablePODetailsReport != null)) {
                this.tablePODetailsReport.InitVars();
            }
            this.tablePOItemsReport = ((POItemsReportDataTable)(this.Tables["POItemsReport"]));
            if ((this.tablePOItemsReport != null)) {
                this.tablePOItemsReport.InitVars();
            }
            this.tablePOMgmtCompany = ((POMgmtCompanyDataTable)(this.Tables["POMgmtCompany"]));
            if ((this.tablePOMgmtCompany != null)) {
                this.tablePOMgmtCompany.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "POReportSchema";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/POReportSchema.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablePODetailsReport = new PODetailsReportDataTable();
            this.Tables.Add(this.tablePODetailsReport);
            this.tablePOItemsReport = new POItemsReportDataTable();
            this.Tables.Add(this.tablePOItemsReport);
            this.tablePOMgmtCompany = new POMgmtCompanyDataTable();
            this.Tables.Add(this.tablePOMgmtCompany);
        }
        
        private bool ShouldSerializePODetailsReport() {
            return false;
        }
        
        private bool ShouldSerializePOItemsReport() {
            return false;
        }
        
        private bool ShouldSerializePOMgmtCompany() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void PODetailsReportRowChangeEventHandler(object sender, PODetailsReportRowChangeEvent e);
        
        public delegate void POItemsReportRowChangeEventHandler(object sender, POItemsReportRowChangeEvent e);
        
        public delegate void POMgmtCompanyRowChangeEventHandler(object sender, POMgmtCompanyRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PODetailsReportDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnCompanyName;
            
            private DataColumn columnCompanyAddress;
            
            private DataColumn columnCompanyCountry;
            
            private DataColumn columnCompanyPostalCode;
            
            private DataColumn columnCompanyTelNo;
            
            private DataColumn columnCompanyFaxNo;
            
            private DataColumn columnCompanyRegNo;
            
            private DataColumn columnCompanyID;
            
            private DataColumn columnPoDeliverName;
            
            private DataColumn columnPoDeliverAddress;
            
            private DataColumn columnPoDeliverCountry;
            
            private DataColumn columnPoDeliverPostalCode;
            
            private DataColumn columnPoDeliverTelNo;
            
            private DataColumn columnPoDeliverFaxNo;
            
            private DataColumn columnPoDeliverContactName;
            
            private DataColumn columnPoVendorName;
            
            private DataColumn columnPoVendorAddress;
            
            private DataColumn columnPoVendorCountry;
            
            private DataColumn columnPoVendorPostalCode;
            
            private DataColumn columnPoVendorTelNo;
            
            private DataColumn columnPoVendorFaxNo;
            
            private DataColumn columnPoVendorContactName;
            
            private DataColumn columnPoBillName;
            
            private DataColumn columnPoBillAddress;
            
            private DataColumn columnPoBillCountry;
            
            private DataColumn columnPoBillPostalCode;
            
            private DataColumn columnPoNumber;
            
            private DataColumn columnPoDeliveryDate;
            
            private DataColumn columnPoPaymentTerms;
            
            private DataColumn columnPoId;
            
            private DataColumn columnPoSubject;
            
            private DataColumn columnPoVendorIsGSTRegistered;
            
            private DataColumn columnWJNo;
            
            private DataColumn columnBudgetCategoryName;
            
            private DataColumn columnBudgetSubCategoryName;
            
            private DataColumn columnPoDate;
            
            private DataColumn columnPoQuotationNumber;
            
            internal PODetailsReportDataTable() : 
                    base("PODetailsReport") {
                this.InitClass();
            }
            
            internal PODetailsReportDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            internal DataColumn CompanyAddressColumn {
                get {
                    return this.columnCompanyAddress;
                }
            }
            
            internal DataColumn CompanyCountryColumn {
                get {
                    return this.columnCompanyCountry;
                }
            }
            
            internal DataColumn CompanyPostalCodeColumn {
                get {
                    return this.columnCompanyPostalCode;
                }
            }
            
            internal DataColumn CompanyTelNoColumn {
                get {
                    return this.columnCompanyTelNo;
                }
            }
            
            internal DataColumn CompanyFaxNoColumn {
                get {
                    return this.columnCompanyFaxNo;
                }
            }
            
            internal DataColumn CompanyRegNoColumn {
                get {
                    return this.columnCompanyRegNo;
                }
            }
            
            internal DataColumn CompanyIDColumn {
                get {
                    return this.columnCompanyID;
                }
            }
            
            internal DataColumn PoDeliverNameColumn {
                get {
                    return this.columnPoDeliverName;
                }
            }
            
            internal DataColumn PoDeliverAddressColumn {
                get {
                    return this.columnPoDeliverAddress;
                }
            }
            
            internal DataColumn PoDeliverCountryColumn {
                get {
                    return this.columnPoDeliverCountry;
                }
            }
            
            internal DataColumn PoDeliverPostalCodeColumn {
                get {
                    return this.columnPoDeliverPostalCode;
                }
            }
            
            internal DataColumn PoDeliverTelNoColumn {
                get {
                    return this.columnPoDeliverTelNo;
                }
            }
            
            internal DataColumn PoDeliverFaxNoColumn {
                get {
                    return this.columnPoDeliverFaxNo;
                }
            }
            
            internal DataColumn PoDeliverContactNameColumn {
                get {
                    return this.columnPoDeliverContactName;
                }
            }
            
            internal DataColumn PoVendorNameColumn {
                get {
                    return this.columnPoVendorName;
                }
            }
            
            internal DataColumn PoVendorAddressColumn {
                get {
                    return this.columnPoVendorAddress;
                }
            }
            
            internal DataColumn PoVendorCountryColumn {
                get {
                    return this.columnPoVendorCountry;
                }
            }
            
            internal DataColumn PoVendorPostalCodeColumn {
                get {
                    return this.columnPoVendorPostalCode;
                }
            }
            
            internal DataColumn PoVendorTelNoColumn {
                get {
                    return this.columnPoVendorTelNo;
                }
            }
            
            internal DataColumn PoVendorFaxNoColumn {
                get {
                    return this.columnPoVendorFaxNo;
                }
            }
            
            internal DataColumn PoVendorContactNameColumn {
                get {
                    return this.columnPoVendorContactName;
                }
            }
            
            internal DataColumn PoBillNameColumn {
                get {
                    return this.columnPoBillName;
                }
            }
            
            internal DataColumn PoBillAddressColumn {
                get {
                    return this.columnPoBillAddress;
                }
            }
            
            internal DataColumn PoBillCountryColumn {
                get {
                    return this.columnPoBillCountry;
                }
            }
            
            internal DataColumn PoBillPostalCodeColumn {
                get {
                    return this.columnPoBillPostalCode;
                }
            }
            
            internal DataColumn PoNumberColumn {
                get {
                    return this.columnPoNumber;
                }
            }
            
            internal DataColumn PoDeliveryDateColumn {
                get {
                    return this.columnPoDeliveryDate;
                }
            }
            
            internal DataColumn PoPaymentTermsColumn {
                get {
                    return this.columnPoPaymentTerms;
                }
            }
            
            internal DataColumn PoIdColumn {
                get {
                    return this.columnPoId;
                }
            }
            
            internal DataColumn PoSubjectColumn {
                get {
                    return this.columnPoSubject;
                }
            }
            
            internal DataColumn PoVendorIsGSTRegisteredColumn {
                get {
                    return this.columnPoVendorIsGSTRegistered;
                }
            }
            
            internal DataColumn WJNoColumn {
                get {
                    return this.columnWJNo;
                }
            }
            
            internal DataColumn BudgetCategoryNameColumn {
                get {
                    return this.columnBudgetCategoryName;
                }
            }
            
            internal DataColumn BudgetSubCategoryNameColumn {
                get {
                    return this.columnBudgetSubCategoryName;
                }
            }
            
            internal DataColumn PoDateColumn {
                get {
                    return this.columnPoDate;
                }
            }
            
            internal DataColumn PoQuotationNumberColumn {
                get {
                    return this.columnPoQuotationNumber;
                }
            }
            
            public PODetailsReportRow this[int index] {
                get {
                    return ((PODetailsReportRow)(this.Rows[index]));
                }
            }
            
            public event PODetailsReportRowChangeEventHandler PODetailsReportRowChanged;
            
            public event PODetailsReportRowChangeEventHandler PODetailsReportRowChanging;
            
            public event PODetailsReportRowChangeEventHandler PODetailsReportRowDeleted;
            
            public event PODetailsReportRowChangeEventHandler PODetailsReportRowDeleting;
            
            public void AddPODetailsReportRow(PODetailsReportRow row) {
                this.Rows.Add(row);
            }
            
            public PODetailsReportRow AddPODetailsReportRow(
                        string CompanyName, 
                        string CompanyAddress, 
                        string CompanyCountry, 
                        string CompanyPostalCode, 
                        string CompanyTelNo, 
                        string CompanyFaxNo, 
                        string CompanyRegNo, 
                        int CompanyID, 
                        string PoDeliverName, 
                        string PoDeliverAddress, 
                        string PoDeliverCountry, 
                        string PoDeliverPostalCode, 
                        string PoDeliverTelNo, 
                        string PoDeliverFaxNo, 
                        string PoDeliverContactName, 
                        string PoVendorName, 
                        string PoVendorAddress, 
                        string PoVendorCountry, 
                        string PoVendorPostalCode, 
                        string PoVendorTelNo, 
                        string PoVendorFaxNo, 
                        string PoVendorContactName, 
                        string PoBillName, 
                        string PoBillAddress, 
                        string PoBillCountry, 
                        string PoBillPostalCode, 
                        string PoNumber, 
                        System.DateTime PoDeliveryDate, 
                        string PoPaymentTerms, 
                        int PoId, 
                        string PoSubject, 
                        int PoVendorIsGSTRegistered, 
                        string WJNo, 
                        string BudgetCategoryName, 
                        string BudgetSubCategoryName, 
                        System.DateTime PoDate, 
                        string PoQuotationNumber) {
                PODetailsReportRow rowPODetailsReportRow = ((PODetailsReportRow)(this.NewRow()));
                rowPODetailsReportRow.ItemArray = new object[] {
                        CompanyName,
                        CompanyAddress,
                        CompanyCountry,
                        CompanyPostalCode,
                        CompanyTelNo,
                        CompanyFaxNo,
                        CompanyRegNo,
                        CompanyID,
                        PoDeliverName,
                        PoDeliverAddress,
                        PoDeliverCountry,
                        PoDeliverPostalCode,
                        PoDeliverTelNo,
                        PoDeliverFaxNo,
                        PoDeliverContactName,
                        PoVendorName,
                        PoVendorAddress,
                        PoVendorCountry,
                        PoVendorPostalCode,
                        PoVendorTelNo,
                        PoVendorFaxNo,
                        PoVendorContactName,
                        PoBillName,
                        PoBillAddress,
                        PoBillCountry,
                        PoBillPostalCode,
                        PoNumber,
                        PoDeliveryDate,
                        PoPaymentTerms,
                        PoId,
                        PoSubject,
                        PoVendorIsGSTRegistered,
                        WJNo,
                        BudgetCategoryName,
                        BudgetSubCategoryName,
                        PoDate,
                        PoQuotationNumber};
                this.Rows.Add(rowPODetailsReportRow);
                return rowPODetailsReportRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                PODetailsReportDataTable cln = ((PODetailsReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new PODetailsReportDataTable();
            }
            
            internal void InitVars() {
                this.columnCompanyName = this.Columns["CompanyName"];
                this.columnCompanyAddress = this.Columns["CompanyAddress"];
                this.columnCompanyCountry = this.Columns["CompanyCountry"];
                this.columnCompanyPostalCode = this.Columns["CompanyPostalCode"];
                this.columnCompanyTelNo = this.Columns["CompanyTelNo"];
                this.columnCompanyFaxNo = this.Columns["CompanyFaxNo"];
                this.columnCompanyRegNo = this.Columns["CompanyRegNo"];
                this.columnCompanyID = this.Columns["CompanyID"];
                this.columnPoDeliverName = this.Columns["PoDeliverName"];
                this.columnPoDeliverAddress = this.Columns["PoDeliverAddress"];
                this.columnPoDeliverCountry = this.Columns["PoDeliverCountry"];
                this.columnPoDeliverPostalCode = this.Columns["PoDeliverPostalCode"];
                this.columnPoDeliverTelNo = this.Columns["PoDeliverTelNo"];
                this.columnPoDeliverFaxNo = this.Columns["PoDeliverFaxNo"];
                this.columnPoDeliverContactName = this.Columns["PoDeliverContactName"];
                this.columnPoVendorName = this.Columns["PoVendorName"];
                this.columnPoVendorAddress = this.Columns["PoVendorAddress"];
                this.columnPoVendorCountry = this.Columns["PoVendorCountry"];
                this.columnPoVendorPostalCode = this.Columns["PoVendorPostalCode"];
                this.columnPoVendorTelNo = this.Columns["PoVendorTelNo"];
                this.columnPoVendorFaxNo = this.Columns["PoVendorFaxNo"];
                this.columnPoVendorContactName = this.Columns["PoVendorContactName"];
                this.columnPoBillName = this.Columns["PoBillName"];
                this.columnPoBillAddress = this.Columns["PoBillAddress"];
                this.columnPoBillCountry = this.Columns["PoBillCountry"];
                this.columnPoBillPostalCode = this.Columns["PoBillPostalCode"];
                this.columnPoNumber = this.Columns["PoNumber"];
                this.columnPoDeliveryDate = this.Columns["PoDeliveryDate"];
                this.columnPoPaymentTerms = this.Columns["PoPaymentTerms"];
                this.columnPoId = this.Columns["PoId"];
                this.columnPoSubject = this.Columns["PoSubject"];
                this.columnPoVendorIsGSTRegistered = this.Columns["PoVendorIsGSTRegistered"];
                this.columnWJNo = this.Columns["WJNo"];
                this.columnBudgetCategoryName = this.Columns["BudgetCategoryName"];
                this.columnBudgetSubCategoryName = this.Columns["BudgetSubCategoryName"];
                this.columnPoDate = this.Columns["PoDate"];
                this.columnPoQuotationNumber = this.Columns["PoQuotationNumber"];
            }
            
            private void InitClass() {
                this.columnCompanyName = new DataColumn("CompanyName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCompanyName);
                this.columnCompanyAddress = new DataColumn("CompanyAddress", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCompanyAddress);
                this.columnCompanyCountry = new DataColumn("CompanyCountry", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCompanyCountry);
                this.columnCompanyPostalCode = new DataColumn("CompanyPostalCode", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCompanyPostalCode);
                this.columnCompanyTelNo = new DataColumn("CompanyTelNo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCompanyTelNo);
                this.columnCompanyFaxNo = new DataColumn("CompanyFaxNo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCompanyFaxNo);
                this.columnCompanyRegNo = new DataColumn("CompanyRegNo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCompanyRegNo);
                this.columnCompanyID = new DataColumn("CompanyID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCompanyID);
                this.columnPoDeliverName = new DataColumn("PoDeliverName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoDeliverName);
                this.columnPoDeliverAddress = new DataColumn("PoDeliverAddress", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoDeliverAddress);
                this.columnPoDeliverCountry = new DataColumn("PoDeliverCountry", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoDeliverCountry);
                this.columnPoDeliverPostalCode = new DataColumn("PoDeliverPostalCode", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoDeliverPostalCode);
                this.columnPoDeliverTelNo = new DataColumn("PoDeliverTelNo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoDeliverTelNo);
                this.columnPoDeliverFaxNo = new DataColumn("PoDeliverFaxNo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoDeliverFaxNo);
                this.columnPoDeliverContactName = new DataColumn("PoDeliverContactName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoDeliverContactName);
                this.columnPoVendorName = new DataColumn("PoVendorName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoVendorName);
                this.columnPoVendorAddress = new DataColumn("PoVendorAddress", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoVendorAddress);
                this.columnPoVendorCountry = new DataColumn("PoVendorCountry", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoVendorCountry);
                this.columnPoVendorPostalCode = new DataColumn("PoVendorPostalCode", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoVendorPostalCode);
                this.columnPoVendorTelNo = new DataColumn("PoVendorTelNo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoVendorTelNo);
                this.columnPoVendorFaxNo = new DataColumn("PoVendorFaxNo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoVendorFaxNo);
                this.columnPoVendorContactName = new DataColumn("PoVendorContactName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoVendorContactName);
                this.columnPoBillName = new DataColumn("PoBillName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoBillName);
                this.columnPoBillAddress = new DataColumn("PoBillAddress", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoBillAddress);
                this.columnPoBillCountry = new DataColumn("PoBillCountry", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoBillCountry);
                this.columnPoBillPostalCode = new DataColumn("PoBillPostalCode", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoBillPostalCode);
                this.columnPoNumber = new DataColumn("PoNumber", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoNumber);
                this.columnPoDeliveryDate = new DataColumn("PoDeliveryDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoDeliveryDate);
                this.columnPoPaymentTerms = new DataColumn("PoPaymentTerms", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoPaymentTerms);
                this.columnPoId = new DataColumn("PoId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoId);
                this.columnPoSubject = new DataColumn("PoSubject", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoSubject);
                this.columnPoVendorIsGSTRegistered = new DataColumn("PoVendorIsGSTRegistered", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoVendorIsGSTRegistered);
                this.columnWJNo = new DataColumn("WJNo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWJNo);
                this.columnBudgetCategoryName = new DataColumn("BudgetCategoryName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBudgetCategoryName);
                this.columnBudgetSubCategoryName = new DataColumn("BudgetSubCategoryName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBudgetSubCategoryName);
                this.columnPoDate = new DataColumn("PoDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoDate);
                this.columnPoQuotationNumber = new DataColumn("PoQuotationNumber", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoQuotationNumber);
                this.columnCompanyCountry.AllowDBNull = false;
                this.columnCompanyFaxNo.AllowDBNull = false;
            }
            
            public PODetailsReportRow NewPODetailsReportRow() {
                return ((PODetailsReportRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new PODetailsReportRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(PODetailsReportRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PODetailsReportRowChanged != null)) {
                    this.PODetailsReportRowChanged(this, new PODetailsReportRowChangeEvent(((PODetailsReportRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PODetailsReportRowChanging != null)) {
                    this.PODetailsReportRowChanging(this, new PODetailsReportRowChangeEvent(((PODetailsReportRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PODetailsReportRowDeleted != null)) {
                    this.PODetailsReportRowDeleted(this, new PODetailsReportRowChangeEvent(((PODetailsReportRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PODetailsReportRowDeleting != null)) {
                    this.PODetailsReportRowDeleting(this, new PODetailsReportRowChangeEvent(((PODetailsReportRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePODetailsReportRow(PODetailsReportRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PODetailsReportRow : DataRow {
            
            private PODetailsReportDataTable tablePODetailsReport;
            
            internal PODetailsReportRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePODetailsReport = ((PODetailsReportDataTable)(this.Table));
            }
            
            public string CompanyName {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.CompanyNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.CompanyNameColumn] = value;
                }
            }
            
            public string CompanyAddress {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.CompanyAddressColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.CompanyAddressColumn] = value;
                }
            }
            
            public string CompanyCountry {
                get {
                    return ((string)(this[this.tablePODetailsReport.CompanyCountryColumn]));
                }
                set {
                    this[this.tablePODetailsReport.CompanyCountryColumn] = value;
                }
            }
            
            public string CompanyPostalCode {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.CompanyPostalCodeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.CompanyPostalCodeColumn] = value;
                }
            }
            
            public string CompanyTelNo {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.CompanyTelNoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.CompanyTelNoColumn] = value;
                }
            }
            
            public string CompanyFaxNo {
                get {
                    return ((string)(this[this.tablePODetailsReport.CompanyFaxNoColumn]));
                }
                set {
                    this[this.tablePODetailsReport.CompanyFaxNoColumn] = value;
                }
            }
            
            public string CompanyRegNo {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.CompanyRegNoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.CompanyRegNoColumn] = value;
                }
            }
            
            public int CompanyID {
                get {
                    try {
                        return ((int)(this[this.tablePODetailsReport.CompanyIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.CompanyIDColumn] = value;
                }
            }
            
            public string PoDeliverName {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.PoDeliverNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoDeliverNameColumn] = value;
                }
            }
            
            public string PoDeliverAddress {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.PoDeliverAddressColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoDeliverAddressColumn] = value;
                }
            }
            
            public string PoDeliverCountry {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.PoDeliverCountryColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoDeliverCountryColumn] = value;
                }
            }
            
            public string PoDeliverPostalCode {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.PoDeliverPostalCodeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoDeliverPostalCodeColumn] = value;
                }
            }
            
            public string PoDeliverTelNo {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.PoDeliverTelNoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoDeliverTelNoColumn] = value;
                }
            }
            
            public string PoDeliverFaxNo {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.PoDeliverFaxNoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoDeliverFaxNoColumn] = value;
                }
            }
            
            public string PoDeliverContactName {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.PoDeliverContactNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoDeliverContactNameColumn] = value;
                }
            }
            
            public string PoVendorName {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.PoVendorNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoVendorNameColumn] = value;
                }
            }
            
            public string PoVendorAddress {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.PoVendorAddressColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoVendorAddressColumn] = value;
                }
            }
            
            public string PoVendorCountry {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.PoVendorCountryColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoVendorCountryColumn] = value;
                }
            }
            
            public string PoVendorPostalCode {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.PoVendorPostalCodeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoVendorPostalCodeColumn] = value;
                }
            }
            
            public string PoVendorTelNo {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.PoVendorTelNoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoVendorTelNoColumn] = value;
                }
            }
            
            public string PoVendorFaxNo {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.PoVendorFaxNoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoVendorFaxNoColumn] = value;
                }
            }
            
            public string PoVendorContactName {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.PoVendorContactNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoVendorContactNameColumn] = value;
                }
            }
            
            public string PoBillName {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.PoBillNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoBillNameColumn] = value;
                }
            }
            
            public string PoBillAddress {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.PoBillAddressColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoBillAddressColumn] = value;
                }
            }
            
            public string PoBillCountry {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.PoBillCountryColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoBillCountryColumn] = value;
                }
            }
            
            public string PoBillPostalCode {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.PoBillPostalCodeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoBillPostalCodeColumn] = value;
                }
            }
            
            public string PoNumber {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.PoNumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoNumberColumn] = value;
                }
            }
            
            public System.DateTime PoDeliveryDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablePODetailsReport.PoDeliveryDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoDeliveryDateColumn] = value;
                }
            }
            
            public string PoPaymentTerms {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.PoPaymentTermsColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoPaymentTermsColumn] = value;
                }
            }
            
            public int PoId {
                get {
                    try {
                        return ((int)(this[this.tablePODetailsReport.PoIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoIdColumn] = value;
                }
            }
            
            public string PoSubject {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.PoSubjectColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoSubjectColumn] = value;
                }
            }
            
            public int PoVendorIsGSTRegistered {
                get {
                    try {
                        return ((int)(this[this.tablePODetailsReport.PoVendorIsGSTRegisteredColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoVendorIsGSTRegisteredColumn] = value;
                }
            }
            
            public string WJNo {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.WJNoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.WJNoColumn] = value;
                }
            }
            
            public string BudgetCategoryName {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.BudgetCategoryNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.BudgetCategoryNameColumn] = value;
                }
            }
            
            public string BudgetSubCategoryName {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.BudgetSubCategoryNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.BudgetSubCategoryNameColumn] = value;
                }
            }
            
            public System.DateTime PoDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablePODetailsReport.PoDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoDateColumn] = value;
                }
            }
            
            public string PoQuotationNumber {
                get {
                    try {
                        return ((string)(this[this.tablePODetailsReport.PoQuotationNumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePODetailsReport.PoQuotationNumberColumn] = value;
                }
            }
            
            public bool IsCompanyNameNull() {
                return this.IsNull(this.tablePODetailsReport.CompanyNameColumn);
            }
            
            public void SetCompanyNameNull() {
                this[this.tablePODetailsReport.CompanyNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsCompanyAddressNull() {
                return this.IsNull(this.tablePODetailsReport.CompanyAddressColumn);
            }
            
            public void SetCompanyAddressNull() {
                this[this.tablePODetailsReport.CompanyAddressColumn] = System.Convert.DBNull;
            }
            
            public bool IsCompanyPostalCodeNull() {
                return this.IsNull(this.tablePODetailsReport.CompanyPostalCodeColumn);
            }
            
            public void SetCompanyPostalCodeNull() {
                this[this.tablePODetailsReport.CompanyPostalCodeColumn] = System.Convert.DBNull;
            }
            
            public bool IsCompanyTelNoNull() {
                return this.IsNull(this.tablePODetailsReport.CompanyTelNoColumn);
            }
            
            public void SetCompanyTelNoNull() {
                this[this.tablePODetailsReport.CompanyTelNoColumn] = System.Convert.DBNull;
            }
            
            public bool IsCompanyRegNoNull() {
                return this.IsNull(this.tablePODetailsReport.CompanyRegNoColumn);
            }
            
            public void SetCompanyRegNoNull() {
                this[this.tablePODetailsReport.CompanyRegNoColumn] = System.Convert.DBNull;
            }
            
            public bool IsCompanyIDNull() {
                return this.IsNull(this.tablePODetailsReport.CompanyIDColumn);
            }
            
            public void SetCompanyIDNull() {
                this[this.tablePODetailsReport.CompanyIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoDeliverNameNull() {
                return this.IsNull(this.tablePODetailsReport.PoDeliverNameColumn);
            }
            
            public void SetPoDeliverNameNull() {
                this[this.tablePODetailsReport.PoDeliverNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoDeliverAddressNull() {
                return this.IsNull(this.tablePODetailsReport.PoDeliverAddressColumn);
            }
            
            public void SetPoDeliverAddressNull() {
                this[this.tablePODetailsReport.PoDeliverAddressColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoDeliverCountryNull() {
                return this.IsNull(this.tablePODetailsReport.PoDeliverCountryColumn);
            }
            
            public void SetPoDeliverCountryNull() {
                this[this.tablePODetailsReport.PoDeliverCountryColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoDeliverPostalCodeNull() {
                return this.IsNull(this.tablePODetailsReport.PoDeliverPostalCodeColumn);
            }
            
            public void SetPoDeliverPostalCodeNull() {
                this[this.tablePODetailsReport.PoDeliverPostalCodeColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoDeliverTelNoNull() {
                return this.IsNull(this.tablePODetailsReport.PoDeliverTelNoColumn);
            }
            
            public void SetPoDeliverTelNoNull() {
                this[this.tablePODetailsReport.PoDeliverTelNoColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoDeliverFaxNoNull() {
                return this.IsNull(this.tablePODetailsReport.PoDeliverFaxNoColumn);
            }
            
            public void SetPoDeliverFaxNoNull() {
                this[this.tablePODetailsReport.PoDeliverFaxNoColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoDeliverContactNameNull() {
                return this.IsNull(this.tablePODetailsReport.PoDeliverContactNameColumn);
            }
            
            public void SetPoDeliverContactNameNull() {
                this[this.tablePODetailsReport.PoDeliverContactNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoVendorNameNull() {
                return this.IsNull(this.tablePODetailsReport.PoVendorNameColumn);
            }
            
            public void SetPoVendorNameNull() {
                this[this.tablePODetailsReport.PoVendorNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoVendorAddressNull() {
                return this.IsNull(this.tablePODetailsReport.PoVendorAddressColumn);
            }
            
            public void SetPoVendorAddressNull() {
                this[this.tablePODetailsReport.PoVendorAddressColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoVendorCountryNull() {
                return this.IsNull(this.tablePODetailsReport.PoVendorCountryColumn);
            }
            
            public void SetPoVendorCountryNull() {
                this[this.tablePODetailsReport.PoVendorCountryColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoVendorPostalCodeNull() {
                return this.IsNull(this.tablePODetailsReport.PoVendorPostalCodeColumn);
            }
            
            public void SetPoVendorPostalCodeNull() {
                this[this.tablePODetailsReport.PoVendorPostalCodeColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoVendorTelNoNull() {
                return this.IsNull(this.tablePODetailsReport.PoVendorTelNoColumn);
            }
            
            public void SetPoVendorTelNoNull() {
                this[this.tablePODetailsReport.PoVendorTelNoColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoVendorFaxNoNull() {
                return this.IsNull(this.tablePODetailsReport.PoVendorFaxNoColumn);
            }
            
            public void SetPoVendorFaxNoNull() {
                this[this.tablePODetailsReport.PoVendorFaxNoColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoVendorContactNameNull() {
                return this.IsNull(this.tablePODetailsReport.PoVendorContactNameColumn);
            }
            
            public void SetPoVendorContactNameNull() {
                this[this.tablePODetailsReport.PoVendorContactNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoBillNameNull() {
                return this.IsNull(this.tablePODetailsReport.PoBillNameColumn);
            }
            
            public void SetPoBillNameNull() {
                this[this.tablePODetailsReport.PoBillNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoBillAddressNull() {
                return this.IsNull(this.tablePODetailsReport.PoBillAddressColumn);
            }
            
            public void SetPoBillAddressNull() {
                this[this.tablePODetailsReport.PoBillAddressColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoBillCountryNull() {
                return this.IsNull(this.tablePODetailsReport.PoBillCountryColumn);
            }
            
            public void SetPoBillCountryNull() {
                this[this.tablePODetailsReport.PoBillCountryColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoBillPostalCodeNull() {
                return this.IsNull(this.tablePODetailsReport.PoBillPostalCodeColumn);
            }
            
            public void SetPoBillPostalCodeNull() {
                this[this.tablePODetailsReport.PoBillPostalCodeColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoNumberNull() {
                return this.IsNull(this.tablePODetailsReport.PoNumberColumn);
            }
            
            public void SetPoNumberNull() {
                this[this.tablePODetailsReport.PoNumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoDeliveryDateNull() {
                return this.IsNull(this.tablePODetailsReport.PoDeliveryDateColumn);
            }
            
            public void SetPoDeliveryDateNull() {
                this[this.tablePODetailsReport.PoDeliveryDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoPaymentTermsNull() {
                return this.IsNull(this.tablePODetailsReport.PoPaymentTermsColumn);
            }
            
            public void SetPoPaymentTermsNull() {
                this[this.tablePODetailsReport.PoPaymentTermsColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoIdNull() {
                return this.IsNull(this.tablePODetailsReport.PoIdColumn);
            }
            
            public void SetPoIdNull() {
                this[this.tablePODetailsReport.PoIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoSubjectNull() {
                return this.IsNull(this.tablePODetailsReport.PoSubjectColumn);
            }
            
            public void SetPoSubjectNull() {
                this[this.tablePODetailsReport.PoSubjectColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoVendorIsGSTRegisteredNull() {
                return this.IsNull(this.tablePODetailsReport.PoVendorIsGSTRegisteredColumn);
            }
            
            public void SetPoVendorIsGSTRegisteredNull() {
                this[this.tablePODetailsReport.PoVendorIsGSTRegisteredColumn] = System.Convert.DBNull;
            }
            
            public bool IsWJNoNull() {
                return this.IsNull(this.tablePODetailsReport.WJNoColumn);
            }
            
            public void SetWJNoNull() {
                this[this.tablePODetailsReport.WJNoColumn] = System.Convert.DBNull;
            }
            
            public bool IsBudgetCategoryNameNull() {
                return this.IsNull(this.tablePODetailsReport.BudgetCategoryNameColumn);
            }
            
            public void SetBudgetCategoryNameNull() {
                this[this.tablePODetailsReport.BudgetCategoryNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsBudgetSubCategoryNameNull() {
                return this.IsNull(this.tablePODetailsReport.BudgetSubCategoryNameColumn);
            }
            
            public void SetBudgetSubCategoryNameNull() {
                this[this.tablePODetailsReport.BudgetSubCategoryNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoDateNull() {
                return this.IsNull(this.tablePODetailsReport.PoDateColumn);
            }
            
            public void SetPoDateNull() {
                this[this.tablePODetailsReport.PoDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoQuotationNumberNull() {
                return this.IsNull(this.tablePODetailsReport.PoQuotationNumberColumn);
            }
            
            public void SetPoQuotationNumberNull() {
                this[this.tablePODetailsReport.PoQuotationNumberColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PODetailsReportRowChangeEvent : EventArgs {
            
            private PODetailsReportRow eventRow;
            
            private DataRowAction eventAction;
            
            public PODetailsReportRowChangeEvent(PODetailsReportRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public PODetailsReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class POItemsReportDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnItemDescription;
            
            private DataColumn columnItemQuantity;
            
            private DataColumn columnItemUnitPrice;
            
            private DataColumn columnPoId;
            
            internal POItemsReportDataTable() : 
                    base("POItemsReport") {
                this.InitClass();
            }
            
            internal POItemsReportDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn ItemDescriptionColumn {
                get {
                    return this.columnItemDescription;
                }
            }
            
            internal DataColumn ItemQuantityColumn {
                get {
                    return this.columnItemQuantity;
                }
            }
            
            internal DataColumn ItemUnitPriceColumn {
                get {
                    return this.columnItemUnitPrice;
                }
            }
            
            internal DataColumn PoIdColumn {
                get {
                    return this.columnPoId;
                }
            }
            
            public POItemsReportRow this[int index] {
                get {
                    return ((POItemsReportRow)(this.Rows[index]));
                }
            }
            
            public event POItemsReportRowChangeEventHandler POItemsReportRowChanged;
            
            public event POItemsReportRowChangeEventHandler POItemsReportRowChanging;
            
            public event POItemsReportRowChangeEventHandler POItemsReportRowDeleted;
            
            public event POItemsReportRowChangeEventHandler POItemsReportRowDeleting;
            
            public void AddPOItemsReportRow(POItemsReportRow row) {
                this.Rows.Add(row);
            }
            
            public POItemsReportRow AddPOItemsReportRow(string ItemDescription, System.Decimal ItemQuantity, System.Decimal ItemUnitPrice, int PoId) {
                POItemsReportRow rowPOItemsReportRow = ((POItemsReportRow)(this.NewRow()));
                rowPOItemsReportRow.ItemArray = new object[] {
                        ItemDescription,
                        ItemQuantity,
                        ItemUnitPrice,
                        PoId};
                this.Rows.Add(rowPOItemsReportRow);
                return rowPOItemsReportRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                POItemsReportDataTable cln = ((POItemsReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new POItemsReportDataTable();
            }
            
            internal void InitVars() {
                this.columnItemDescription = this.Columns["ItemDescription"];
                this.columnItemQuantity = this.Columns["ItemQuantity"];
                this.columnItemUnitPrice = this.Columns["ItemUnitPrice"];
                this.columnPoId = this.Columns["PoId"];
            }
            
            private void InitClass() {
                this.columnItemDescription = new DataColumn("ItemDescription", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnItemDescription);
                this.columnItemQuantity = new DataColumn("ItemQuantity", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnItemQuantity);
                this.columnItemUnitPrice = new DataColumn("ItemUnitPrice", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnItemUnitPrice);
                this.columnPoId = new DataColumn("PoId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPoId);
            }
            
            public POItemsReportRow NewPOItemsReportRow() {
                return ((POItemsReportRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new POItemsReportRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(POItemsReportRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.POItemsReportRowChanged != null)) {
                    this.POItemsReportRowChanged(this, new POItemsReportRowChangeEvent(((POItemsReportRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.POItemsReportRowChanging != null)) {
                    this.POItemsReportRowChanging(this, new POItemsReportRowChangeEvent(((POItemsReportRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.POItemsReportRowDeleted != null)) {
                    this.POItemsReportRowDeleted(this, new POItemsReportRowChangeEvent(((POItemsReportRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.POItemsReportRowDeleting != null)) {
                    this.POItemsReportRowDeleting(this, new POItemsReportRowChangeEvent(((POItemsReportRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePOItemsReportRow(POItemsReportRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class POItemsReportRow : DataRow {
            
            private POItemsReportDataTable tablePOItemsReport;
            
            internal POItemsReportRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePOItemsReport = ((POItemsReportDataTable)(this.Table));
            }
            
            public string ItemDescription {
                get {
                    try {
                        return ((string)(this[this.tablePOItemsReport.ItemDescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemsReport.ItemDescriptionColumn] = value;
                }
            }
            
            public System.Decimal ItemQuantity {
                get {
                    try {
                        return ((System.Decimal)(this[this.tablePOItemsReport.ItemQuantityColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemsReport.ItemQuantityColumn] = value;
                }
            }
            
            public System.Decimal ItemUnitPrice {
                get {
                    try {
                        return ((System.Decimal)(this[this.tablePOItemsReport.ItemUnitPriceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemsReport.ItemUnitPriceColumn] = value;
                }
            }
            
            public int PoId {
                get {
                    try {
                        return ((int)(this[this.tablePOItemsReport.PoIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOItemsReport.PoIdColumn] = value;
                }
            }
            
            public bool IsItemDescriptionNull() {
                return this.IsNull(this.tablePOItemsReport.ItemDescriptionColumn);
            }
            
            public void SetItemDescriptionNull() {
                this[this.tablePOItemsReport.ItemDescriptionColumn] = System.Convert.DBNull;
            }
            
            public bool IsItemQuantityNull() {
                return this.IsNull(this.tablePOItemsReport.ItemQuantityColumn);
            }
            
            public void SetItemQuantityNull() {
                this[this.tablePOItemsReport.ItemQuantityColumn] = System.Convert.DBNull;
            }
            
            public bool IsItemUnitPriceNull() {
                return this.IsNull(this.tablePOItemsReport.ItemUnitPriceColumn);
            }
            
            public void SetItemUnitPriceNull() {
                this[this.tablePOItemsReport.ItemUnitPriceColumn] = System.Convert.DBNull;
            }
            
            public bool IsPoIdNull() {
                return this.IsNull(this.tablePOItemsReport.PoIdColumn);
            }
            
            public void SetPoIdNull() {
                this[this.tablePOItemsReport.PoIdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class POItemsReportRowChangeEvent : EventArgs {
            
            private POItemsReportRow eventRow;
            
            private DataRowAction eventAction;
            
            public POItemsReportRowChangeEvent(POItemsReportRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public POItemsReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class POMgmtCompanyDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnCompanyID;
            
            private DataColumn columnLogo;
            
            internal POMgmtCompanyDataTable() : 
                    base("POMgmtCompany") {
                this.InitClass();
            }
            
            internal POMgmtCompanyDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn CompanyIDColumn {
                get {
                    return this.columnCompanyID;
                }
            }
            
            internal DataColumn LogoColumn {
                get {
                    return this.columnLogo;
                }
            }
            
            public POMgmtCompanyRow this[int index] {
                get {
                    return ((POMgmtCompanyRow)(this.Rows[index]));
                }
            }
            
            public event POMgmtCompanyRowChangeEventHandler POMgmtCompanyRowChanged;
            
            public event POMgmtCompanyRowChangeEventHandler POMgmtCompanyRowChanging;
            
            public event POMgmtCompanyRowChangeEventHandler POMgmtCompanyRowDeleted;
            
            public event POMgmtCompanyRowChangeEventHandler POMgmtCompanyRowDeleting;
            
            public void AddPOMgmtCompanyRow(POMgmtCompanyRow row) {
                this.Rows.Add(row);
            }
            
            public POMgmtCompanyRow AddPOMgmtCompanyRow(int CompanyID, System.Byte[] Logo) {
                POMgmtCompanyRow rowPOMgmtCompanyRow = ((POMgmtCompanyRow)(this.NewRow()));
                rowPOMgmtCompanyRow.ItemArray = new object[] {
                        CompanyID,
                        Logo};
                this.Rows.Add(rowPOMgmtCompanyRow);
                return rowPOMgmtCompanyRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                POMgmtCompanyDataTable cln = ((POMgmtCompanyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new POMgmtCompanyDataTable();
            }
            
            internal void InitVars() {
                this.columnCompanyID = this.Columns["CompanyID"];
                this.columnLogo = this.Columns["Logo"];
            }
            
            private void InitClass() {
                this.columnCompanyID = new DataColumn("CompanyID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCompanyID);
                this.columnLogo = new DataColumn("Logo", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLogo);
            }
            
            public POMgmtCompanyRow NewPOMgmtCompanyRow() {
                return ((POMgmtCompanyRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new POMgmtCompanyRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(POMgmtCompanyRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.POMgmtCompanyRowChanged != null)) {
                    this.POMgmtCompanyRowChanged(this, new POMgmtCompanyRowChangeEvent(((POMgmtCompanyRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.POMgmtCompanyRowChanging != null)) {
                    this.POMgmtCompanyRowChanging(this, new POMgmtCompanyRowChangeEvent(((POMgmtCompanyRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.POMgmtCompanyRowDeleted != null)) {
                    this.POMgmtCompanyRowDeleted(this, new POMgmtCompanyRowChangeEvent(((POMgmtCompanyRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.POMgmtCompanyRowDeleting != null)) {
                    this.POMgmtCompanyRowDeleting(this, new POMgmtCompanyRowChangeEvent(((POMgmtCompanyRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePOMgmtCompanyRow(POMgmtCompanyRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class POMgmtCompanyRow : DataRow {
            
            private POMgmtCompanyDataTable tablePOMgmtCompany;
            
            internal POMgmtCompanyRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePOMgmtCompany = ((POMgmtCompanyDataTable)(this.Table));
            }
            
            public int CompanyID {
                get {
                    try {
                        return ((int)(this[this.tablePOMgmtCompany.CompanyIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOMgmtCompany.CompanyIDColumn] = value;
                }
            }
            
            public System.Byte[] Logo {
                get {
                    try {
                        return ((System.Byte[])(this[this.tablePOMgmtCompany.LogoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOMgmtCompany.LogoColumn] = value;
                }
            }
            
            public bool IsCompanyIDNull() {
                return this.IsNull(this.tablePOMgmtCompany.CompanyIDColumn);
            }
            
            public void SetCompanyIDNull() {
                this[this.tablePOMgmtCompany.CompanyIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsLogoNull() {
                return this.IsNull(this.tablePOMgmtCompany.LogoColumn);
            }
            
            public void SetLogoNull() {
                this[this.tablePOMgmtCompany.LogoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class POMgmtCompanyRowChangeEvent : EventArgs {
            
            private POMgmtCompanyRow eventRow;
            
            private DataRowAction eventAction;
            
            public POMgmtCompanyRowChangeEvent(POMgmtCompanyRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public POMgmtCompanyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
