<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="ActualEndDateTimeResource1.Caption" xml:space="preserve">
    <value>実質終了</value>
  </data>
	<data name="ActualEndDateTimeResource1.ToolTip" xml:space="preserve">
    <value>作業実質完成日/時間</value>
  </data>
	<data name="ActualStartDateTimeResource1.Caption" xml:space="preserve">
    <value>実質スタート</value>
  </data>
	<data name="ActualStartDateTimeResource1.ToolTip" xml:space="preserve">
    <value>作業実質スタート日/時間</value>
  </data>
	<data name="buttonShowChartResource1.Text" xml:space="preserve">
    <value>ガントチャート表示</value>
  </data>
	<data name="CallerCellPhoneResource1.Caption" xml:space="preserve">
    <value>携帯電話</value>
  </data>
	<data name="CallerEmailResource1.Caption" xml:space="preserve">
    <value>Eメール</value>
  </data>
	<data name="CallerFaxResource1.Caption" xml:space="preserve">
    <value>ファックス</value>
  </data>
	<data name="CallerNameResource1.Caption" xml:space="preserve">
    <value>名前</value>
  </data>
	<data name="CallerNameResource1.ToolTip" xml:space="preserve">
    <value>発信者の名前が照会されます。</value>
  </data>
	<data name="CallerPhoneResource1.Caption" xml:space="preserve">
    <value>電話</value>
  </data>
	<data name="CallerTypeIDResource1.Caption" xml:space="preserve">
    <value>発信者タイプ</value>
  </data>
	<data name="CallerTypeIDResource1.ToolTip" xml:space="preserve">
    <value>発信者タイプ</value>
  </data>
	<data name="CauseOfProblemIDResource1.Caption" xml:space="preserve">
    <value>問題の原因</value>
  </data>
	<data name="ContractNameResource1.Caption" xml:space="preserve">
    <value>契約者</value>
  </data>
	<data name="ContractNameResource1.ToolTip" xml:space="preserve">
    <value>作業に契約名が適用されます。</value>
  </data>
	<data name="ObjectNumberResource1.Caption" xml:space="preserve">
    <value>作業番号</value>
  </data>
	<data name="panelResource1.Caption" xml:space="preserve">
    <value>作業</value>
  </data>
	<data name="ResolutionDescriptionResource1.Caption" xml:space="preserve">
    <value>解答記述</value>
  </data>
	<data name="ResolutionDescriptionResource1.ToolTip" xml:space="preserve">
    <value>問題の解答詳細</value>
  </data>
	<data name="ResolutionIDResource1.Caption" xml:space="preserve">
    <value> 解答</value>
  </data>
	<data name="ScheduledEndDateTimeResource1.Caption" xml:space="preserve">
    <value>スケジュール終了</value>
  </data>
	<data name="ScheduledEndDateTimeResource1.ToolTip" xml:space="preserve">
    <value>作業の計画完成日/時間</value>
  </data>
	<data name="ScheduledStartDateTimeResource1.Caption" xml:space="preserve">
    <value>スケジュールスタート</value>
  </data>
	<data name="ScheduledStartDateTimeResource1.ToolTip" xml:space="preserve">
    <value>作業の計画完スタート/時間</value>
  </data>
	<data name="Separator1Resource1.Caption" xml:space="preserve">
    <value>問題</value>
  </data>
	<data name="Separator2Resource1.Caption" xml:space="preserve">
    <value> 解答</value>
  </data>
	<data name="Separator4Resource1.Caption" xml:space="preserve">
    <value>契約/ベンダー</value>
  </data>
	<data name="TypeOfProblemIDResource1.Caption" xml:space="preserve">
    <value>問題タイプ</value>
  </data>
	<data name="TypeOfServiceIDResource1.Caption" xml:space="preserve">
    <value>サービスタイプ</value>
  </data>
	<data name="TypeOfWorkIDResource1.Caption" xml:space="preserve">
    <value>作業タイプ</value>
  </data>
	<data name="UIGridViewColumnResource3.ConfirmText" xml:space="preserve">
    <value>この項目を削除しても宜しいですか?</value>
  </data>
	<data name="UIGridViewColumnResource4.HeaderText" xml:space="preserve">
    <value>作業番号</value>
  </data>
	<data name="UIGridViewColumnResource5.HeaderText" xml:space="preserve">
    <value>作業記述</value>
  </data>
	<data name="UIGridViewColumnResource6.HeaderText" xml:space="preserve">
    <value>作業タイプ</value>
  </data>
	<data name="UIGridViewColumnResource7.HeaderText" xml:space="preserve">
    <value>サービスタイプ</value>
  </data>
	<data name="UIGridViewColumnResource8.HeaderText" xml:space="preserve">
    <value>ステータス</value>
  </data>
	<data name="UIGridViewCommandResource1.CommandText" xml:space="preserve">
    <value>選択削除</value>
  </data>
	<data name="UIGridViewCommandResource1.ConfirmText" xml:space="preserve">
    <value>選択項目を削除しても宜しいですか?</value>
  </data>
	<data name="UISeparator1Resource1" xml:space="preserve">
    <value>詳細</value>
  </data>
	<data name="uitabview3Resource1.Caption" xml:space="preserve">
    <value>検索</value>
  </data>
	<data name="uitabview4Resource1.Caption" xml:space="preserve">
    <value>結果</value>
  </data>
	<data name="VendorNameResource1.Caption" xml:space="preserve">
    <value>ベンダー名</value>
  </data>
	<data name="VendorNameResource1.ToolTip" xml:space="preserve">
    <value>このベンダーがこの作業に責任を負われます。</value>
  </data>
	<data name="WorkDescriptionResource1.Caption" xml:space="preserve">
    <value>作業記述</value>
  </data>
</root>