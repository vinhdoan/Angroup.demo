<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="buttonPreviewResource1.Text" xml:space="preserve">
    <value>预览</value>
  </data>
	<data name="DisplayOrderResource1.Caption" xml:space="preserve">
    <value>显示顺序</value>
  </data>
	<data name="DisplayOrderResource1.ToolTip" xml:space="preserve">
    <value>在搜索领域的显示顺序。下首先出现。</value>
  </data>
	<data name="field_CheckBoxCaptionResource1.Caption" xml:space="preserve">
    <value>复选框标题</value>
  </data>
	<data name="field_CheckBoxCaptionResource1.ToolTip" xml:space="preserve">
    <value>该复选框的标题</value>
  </data>
	<data name="field_CodeTypeIDResource1.Caption" xml:space="preserve">
    <value>代码类型</value>
  </data>
	<data name="field_CodeTypeIDResource1.ToolTip" xml:space="preserve">
    <value>指定代码的类型，其代码清单作填充此栏位。</value>
  </data>
	<data name="field_ControlCaptionResource1.Caption" xml:space="preserve">
    <value>列标题</value>
  </data>
	<data name="field_ControlCaptionResource1.ToolTip" xml:space="preserve">
    <value>将显示在编辑网页的栏位标题</value>
  </data>
	<data name="field_ControlSpanResource1.Caption" xml:space="preserve">
    <value>控制跨度</value>
  </data>
	<data name="field_ControlSpanResource1.ToolTip" xml:space="preserve">
    <value>设置显示的领域，要不占据半行，要不占据整行</value>
  </data>
	<data name="field_ControlTypeResource1.Caption" xml:space="preserve">
    <value>控制类型</value>
  </data>
	<data name="field_ControlTypeResource1.ToolTip" xml:space="preserve">
    <value>设置为用户输入值的控制类型</value>
  </data>
	<data name="field_DataTypeResource1.Caption" xml:space="preserve">
    <value>数据类型</value>
  </data>
	<data name="field_DataTypeResource1.ToolTip" xml:space="preserve">
    <value>搜索栏位的数据类型。</value>
  </data>
	<data name="field_isActiveResource1.Caption" xml:space="preserve">
    <value>活跃</value>
  </data>
	<data name="field_isActiveResource1.ToolTip" xml:space="preserve">
    <value>注明栏位是否可由用户编辑</value>
  </data>
	<data name="field_IsPopulatedByCodeResource1.Caption" xml:space="preserve">
    <value>由代码填充？</value>
  </data>
	<data name="field_IsPopulatedByCodeResource1.ToolTip" xml:space="preserve">
    <value>注明是否用代码列表填充下拉列表</value>
  </data>
	<data name="field_MaxLengthResource1.Caption" xml:space="preserve">
    <value>最大长度</value>
  </data>
	<data name="field_MaxLengthResource1.ToolTip" xml:space="preserve">
    <value>指定的字符的最大输入数量</value>
  </data>
	<data name="field_MultiLineTextBoxResource1.Caption" xml:space="preserve">
    <value>多行</value>
  </data>
	<data name="field_MultiLineTextBoxResource1.Text" xml:space="preserve">
    <value>是的，这是一个多行文本框。</value>
  </data>
	<data name="field_TextListResource1.Caption" xml:space="preserve">
    <value>文本列表</value>
  </data>
	<data name="field_TextListResource1.ToolTip" xml:space="preserve">
    <value>一个供用户选择的逗号间隔文本列表</value>
  </data>
	<data name="field_ToolTipResource1.Caption" xml:space="preserve">
    <value>工具提示</value>
  </data>
	<data name="field_ToolTipResource1.ToolTip" xml:space="preserve">
    <value>当用户将鼠标放在信息图标时，更多控制相关的描述将被显示。</value>
  </data>
	<data name="field_ValidateRangeFieldResource1.Caption" xml:space="preserve">
    <value>范围</value>
  </data>
	<data name="field_ValidateRangeFieldResource1.Text" xml:space="preserve">
    <value>是的，这栏位数值必须在一个固定范围</value>
  </data>
	<data name="field_ValidateRangeFieldResource1.ToolTip" xml:space="preserve">
    <value>注明栏位值是否必须在特定的范围</value>
  </data>
	<data name="field_ValidateRangeMaxResource1.Caption" xml:space="preserve">
    <value>最大范围</value>
  </data>
	<data name="field_ValidateRangeMaxResource1.ToolTip" xml:space="preserve">
    <value>该范围可接受的最大值。可接受的格式取决于该控件的数据类型。对于日期范围，使用格式为YYYY / mm / dd的。对于日期时间范围，使用格式为yyyy / mm / dd：mm：ss的</value>
  </data>
	<data name="field_ValidateRangeMinResource1.Caption" xml:space="preserve">
    <value>最小范围</value>
  </data>
	<data name="field_ValidateRangeMinResource1.ToolTip" xml:space="preserve">
    <value>该范围可接受的最小值。可接受的格式取决于该控件的数据类型。对于日期范围，使用格式为YYYY / mm / dd的。对于日期时间范围，使用格式为yyyy / mm / dd：mm：ss的</value>
  </data>
	<data name="field_ValidateRequiredFieldResource1.Caption" xml:space="preserve">
    <value>必需的</value>
  </data>
	<data name="field_ValidateRequiredFieldResource1.Text" xml:space="preserve">
    <value>是的，这是必填栏位</value>
  </data>
	<data name="field_ValidateRequiredFieldResource1.ToolTip" xml:space="preserve">
    <value>注明栏位是否必填。</value>
  </data>
	<data name="field_ValueListResource1.Caption" xml:space="preserve">
    <value>值列表</value>
  </data>
	<data name="field_ValueListResource1.ToolTip" xml:space="preserve">
    <value>逗号分隔的值列表，对应于文本列表。</value>
  </data>
	<data name="gridFieldsResource1.Caption" xml:space="preserve">
    <value>栏位</value>
  </data>
	<data name="ListItemResource1.Text" xml:space="preserve">
    <value>是的，这栏位仍然活跃。</value>
  </data>
	<data name="ListItemResource1.Value" xml:space="preserve">
    <value>1</value>
  </data>
	<data name="ListItemResource11.Text" xml:space="preserve">
    <value>是的，用具有以下代码类型的代码填充此下拉列表</value>
  </data>
	<data name="ListItemResource11.Value" xml:space="preserve">
    <value>1</value>
  </data>
	<data name="ListItemResource12.Text" xml:space="preserve">
    <value>不，用以下列表填充下拉列表</value>
  </data>
	<data name="ListItemResource12.Value" xml:space="preserve">
    <value>0</value>
  </data>
	<data name="ListItemResource2.Text" xml:space="preserve">
    <value>不，这栏位已不再活跃，用户不应该被允许输入任何值</value>
  </data>
	<data name="ListItemResource2.Value" xml:space="preserve">
    <value>0</value>
  </data>
	<data name="sep1Resource1.Caption" xml:space="preserve">
    <value>验证</value>
  </data>
	<data name="UIGridViewColumnResource2.ConfirmText" xml:space="preserve">
    <value>您确定要删除此项目吗？</value>
  </data>
	<data name="UIGridViewColumnResource4.HeaderText" xml:space="preserve">
    <value>控制标题</value>
  </data>
	<data name="UIGridViewColumnResource5.HeaderText" xml:space="preserve">
    <value>控制类型</value>
  </data>
	<data name="UIGridViewColumnResource6.HeaderText" xml:space="preserve">
    <value>控制跨度</value>
  </data>
	<data name="UIGridViewColumnResource7.HeaderText" xml:space="preserve">
    <value>数据类型</value>
  </data>
	<data name="UIGridViewCommandResource1.CommandText" xml:space="preserve">
    <value>删除所选</value>
  </data>
	<data name="UIGridViewCommandResource1.ConfirmText" xml:space="preserve">
    <value>您确定要删除所选项目？</value>
  </data>
	<data name="UIGridViewCommandResource2.CommandText" xml:space="preserve">
    <value>添加</value>
  </data>
</root>