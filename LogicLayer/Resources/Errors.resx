<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BudgetReallocation_budgetFromLess" xml:space="preserve">
    <value>Unable to submit for
 approval because you are reallocating budget to {0}
but reallocating any budget not from {0}.</value>
  </data>
  <data name="BudgetReallocation_budgetFromNotMatchTo" xml:space="preserve">
    <value>Unable to submit for
 approval because the reallocating budget {0} has error in amount
</value>
  </data>
  <data name="BudgetReallocation_budgetToLess" xml:space="preserve">
    <value>Unable to submit for approval because you are 
reallocating budget from {0}  
but reallocating any budget not to {0}.</value>
  </data>
  <data name="BudgetReallocation_InsufficientAmount" xml:space="preserve">
    <value>There is insufficient amount in the source budget for adjustment of the following accounts: {0}</value>
  </data>
  <data name="MessageTemplate_MessageTemplateCannotBeFound" xml:space="preserve">
    <value>The message cannot be sent because the message template with the code '{0}' cannot be found.</value>
  </data>
  <data name="PurchaseBudget_UnableToTransferAmountFromTransactionLog" xml:space="preserve">
    <value>Unable to transfer amount of ({0:#,##0.00}) from the previous purchase document.</value>
  </data>
  <data name="Workflow_ApprovalProcessDetailNotSpecified" xml:space="preserve">
    <value>Unable to assign task to approvers because the Approval Process Detail is not specified, or has been deleted. This can happen if you configured the workflow to execute the SetStateAndAssignApprovers activity, but did not specify SubmitForApproval in the previous EventDriven activity.</value>
  </data>
  <data name="Workflow_ListInvalid" xml:space="preserve">
    <value>Unable to assign users to the workflow task because the list returns by the workflow contains objects that are not of the OUser type.</value>
  </data>
  <data name="Workflow_NoWorkflowInstanceID" xml:space="preserve">
    <value>Unable to trigger workflow event because the Activity for this PersistentObject '{0}' (ObjectID={1}) because there is no workflow instance ID. Did you forget to create this object with the IWorkflowEnabled interface?</value>
  </data>
  <data name="Workflow_UnableToAssignApprovers" xml:space="preserve">
    <value>The workflow engine is unable to assign any approvers to the workflow task. This may be because the positions, approval hierarchies and approval processes have not been correctly configured.</value>
  </data>
  <data name="Workflow_UnableToAssignUsersOrPositions" xml:space="preserve">
    <value>The workflow engine is unable to assign any users or positions to the workflow task.</value>
  </data>
  <data name="Workflow_UnauthorizedApproverException" xml:space="preserve">
    <value>The workflow engine is unable to allow you to approve this task. This happens because the mode of forwarding for the approval process is "All" and because you are not an authorized user set up in the approval hierarchy.</value>
  </data>
  <data name="Workflow_WorkflowNotCreated" xml:space="preserve">
    <value>Unable to trigger workflow event because the Activity for this PersistentObject '{0}' (ObjectID={1}) has not been created. Did you forget to create this object with the IWorkflowEnabled interface?</value>
  </data>
  <data name="BudgetAdjustment_InsufficientAmount" xml:space="preserve">
    <value>There is insufficient amount in the budget for adjustment of the following accounts: {0}</value>
  </data>
  <data name="Work_ItemAlreadyCheckOut" xml:space="preserve">
    <value>Unable to check out item {0} because it is already checked out. Please uncheck the item.</value>
  </data>
  <data name="CRVSerialNumberConfirmUsageUnsuccessful" xml:space="preserve">
    <value>CRV serial number confirm usage unsuccessful. Please Use another CRV serial number.</value>
  </data>
  <data name="RequestForQuotation_UpdateCRVTenderVendorAwardStatusFail" xml:space="preserve">
    <value>Update CRV Tender Vendor Award Status Fail</value>
  </data>
  <data name="CRVTenderService_ConnectionFail" xml:space="preserve">
    <value>CRV tender service connection fail.</value>
  </data>
  <data name="CRVTenderService_SystemCodeNotFound" xml:space="preserve">
    <value>System Code not found for selected location.</value>
  </data>
</root>