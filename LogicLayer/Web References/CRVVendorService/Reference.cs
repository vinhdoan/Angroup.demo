//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4984
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4984.
// 
#pragma warning disable 1591

namespace LogicLayer.CRVVendorService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="VendorServiceSoap", Namespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx")]
    public partial class VendorService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SubscribeVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnSubscribeVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsVendorSubscribedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutdatedAndNewVendorListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmVendorRetrievedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTradeTypeCodesByVendorTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorClassificationCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorTypeCodesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public VendorService() {
            this.Url = global::LogicLayer.Properties.Settings.Default.LogicLayer_CRVservice_VendorService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SubscribeVendorCompletedEventHandler SubscribeVendorCompleted;
        
        /// <remarks/>
        public event UnSubscribeVendorCompletedEventHandler UnSubscribeVendorCompleted;
        
        /// <remarks/>
        public event IsVendorSubscribedCompletedEventHandler IsVendorSubscribedCompleted;
        
        /// <remarks/>
        public event GetOutdatedAndNewVendorListCompletedEventHandler GetOutdatedAndNewVendorListCompleted;
        
        /// <remarks/>
        public event SearchVendorCompletedEventHandler SearchVendorCompleted;
        
        /// <remarks/>
        public event GetVendorCompletedEventHandler GetVendorCompleted;
        
        /// <remarks/>
        public event ConfirmVendorRetrievedCompletedEventHandler ConfirmVendorRetrievedCompleted;
        
        /// <remarks/>
        public event GetTradeTypeCodesByVendorTypeCompletedEventHandler GetTradeTypeCodesByVendorTypeCompleted;
        
        /// <remarks/>
        public event GetVendorClassificationCodesCompletedEventHandler GetVendorClassificationCodesCompleted;
        
        /// <remarks/>
        public event GetVendorTypeCodesCompletedEventHandler GetVendorTypeCodesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://crv.dc.capitaland.com/crvservice/VendorService.asmx/SubscribeVendor", RequestNamespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx", ResponseNamespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SubscribeVendor(string systemcode, string CRVVendorID) {
            object[] results = this.Invoke("SubscribeVendor", new object[] {
                        systemcode,
                        CRVVendorID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SubscribeVendorAsync(string systemcode, string CRVVendorID) {
            this.SubscribeVendorAsync(systemcode, CRVVendorID, null);
        }
        
        /// <remarks/>
        public void SubscribeVendorAsync(string systemcode, string CRVVendorID, object userState) {
            if ((this.SubscribeVendorOperationCompleted == null)) {
                this.SubscribeVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubscribeVendorOperationCompleted);
            }
            this.InvokeAsync("SubscribeVendor", new object[] {
                        systemcode,
                        CRVVendorID}, this.SubscribeVendorOperationCompleted, userState);
        }
        
        private void OnSubscribeVendorOperationCompleted(object arg) {
            if ((this.SubscribeVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubscribeVendorCompleted(this, new SubscribeVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://crv.dc.capitaland.com/crvservice/VendorService.asmx/UnSubscribeVendor", RequestNamespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx", ResponseNamespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UnSubscribeVendor(string systemcode, string CRVVendorID) {
            object[] results = this.Invoke("UnSubscribeVendor", new object[] {
                        systemcode,
                        CRVVendorID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UnSubscribeVendorAsync(string systemcode, string CRVVendorID) {
            this.UnSubscribeVendorAsync(systemcode, CRVVendorID, null);
        }
        
        /// <remarks/>
        public void UnSubscribeVendorAsync(string systemcode, string CRVVendorID, object userState) {
            if ((this.UnSubscribeVendorOperationCompleted == null)) {
                this.UnSubscribeVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnSubscribeVendorOperationCompleted);
            }
            this.InvokeAsync("UnSubscribeVendor", new object[] {
                        systemcode,
                        CRVVendorID}, this.UnSubscribeVendorOperationCompleted, userState);
        }
        
        private void OnUnSubscribeVendorOperationCompleted(object arg) {
            if ((this.UnSubscribeVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnSubscribeVendorCompleted(this, new UnSubscribeVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://crv.dc.capitaland.com/crvservice/VendorService.asmx/IsVendorSubscribed", RequestNamespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx", ResponseNamespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsVendorSubscribed(string systemcode, string CRVVendorID) {
            object[] results = this.Invoke("IsVendorSubscribed", new object[] {
                        systemcode,
                        CRVVendorID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsVendorSubscribedAsync(string systemcode, string CRVVendorID) {
            this.IsVendorSubscribedAsync(systemcode, CRVVendorID, null);
        }
        
        /// <remarks/>
        public void IsVendorSubscribedAsync(string systemcode, string CRVVendorID, object userState) {
            if ((this.IsVendorSubscribedOperationCompleted == null)) {
                this.IsVendorSubscribedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsVendorSubscribedOperationCompleted);
            }
            this.InvokeAsync("IsVendorSubscribed", new object[] {
                        systemcode,
                        CRVVendorID}, this.IsVendorSubscribedOperationCompleted, userState);
        }
        
        private void OnIsVendorSubscribedOperationCompleted(object arg) {
            if ((this.IsVendorSubscribedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsVendorSubscribedCompleted(this, new IsVendorSubscribedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://crv.dc.capitaland.com/crvservice/VendorService.asmx/GetOutdatedAndNewVendo" +
            "rList", RequestNamespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx", ResponseNamespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetOutdatedAndNewVendorList(string systemcode) {
            object[] results = this.Invoke("GetOutdatedAndNewVendorList", new object[] {
                        systemcode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOutdatedAndNewVendorListAsync(string systemcode) {
            this.GetOutdatedAndNewVendorListAsync(systemcode, null);
        }
        
        /// <remarks/>
        public void GetOutdatedAndNewVendorListAsync(string systemcode, object userState) {
            if ((this.GetOutdatedAndNewVendorListOperationCompleted == null)) {
                this.GetOutdatedAndNewVendorListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutdatedAndNewVendorListOperationCompleted);
            }
            this.InvokeAsync("GetOutdatedAndNewVendorList", new object[] {
                        systemcode}, this.GetOutdatedAndNewVendorListOperationCompleted, userState);
        }
        
        private void OnGetOutdatedAndNewVendorListOperationCompleted(object arg) {
            if ((this.GetOutdatedAndNewVendorListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutdatedAndNewVendorListCompleted(this, new GetOutdatedAndNewVendorListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://crv.dc.capitaland.com/crvservice/VendorService.asmx/SearchVendor", RequestNamespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx", ResponseNamespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] SearchVendor(string systemcode, string BRN, string vendorname) {
            object[] results = this.Invoke("SearchVendor", new object[] {
                        systemcode,
                        BRN,
                        vendorname});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchVendorAsync(string systemcode, string BRN, string vendorname) {
            this.SearchVendorAsync(systemcode, BRN, vendorname, null);
        }
        
        /// <remarks/>
        public void SearchVendorAsync(string systemcode, string BRN, string vendorname, object userState) {
            if ((this.SearchVendorOperationCompleted == null)) {
                this.SearchVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchVendorOperationCompleted);
            }
            this.InvokeAsync("SearchVendor", new object[] {
                        systemcode,
                        BRN,
                        vendorname}, this.SearchVendorOperationCompleted, userState);
        }
        
        private void OnSearchVendorOperationCompleted(object arg) {
            if ((this.SearchVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchVendorCompleted(this, new SearchVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://crv.dc.capitaland.com/crvservice/VendorService.asmx/GetVendor", RequestNamespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx", ResponseNamespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Vendor GetVendor(string systemcode, string CRVVendorID) {
            object[] results = this.Invoke("GetVendor", new object[] {
                        systemcode,
                        CRVVendorID});
            return ((Vendor)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorAsync(string systemcode, string CRVVendorID) {
            this.GetVendorAsync(systemcode, CRVVendorID, null);
        }
        
        /// <remarks/>
        public void GetVendorAsync(string systemcode, string CRVVendorID, object userState) {
            if ((this.GetVendorOperationCompleted == null)) {
                this.GetVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorOperationCompleted);
            }
            this.InvokeAsync("GetVendor", new object[] {
                        systemcode,
                        CRVVendorID}, this.GetVendorOperationCompleted, userState);
        }
        
        private void OnGetVendorOperationCompleted(object arg) {
            if ((this.GetVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorCompleted(this, new GetVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://crv.dc.capitaland.com/crvservice/VendorService.asmx/ConfirmVendorRetrieved" +
            "", RequestNamespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx", ResponseNamespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConfirmVendorRetrieved(string systemcode, string CRVVendorID) {
            object[] results = this.Invoke("ConfirmVendorRetrieved", new object[] {
                        systemcode,
                        CRVVendorID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmVendorRetrievedAsync(string systemcode, string CRVVendorID) {
            this.ConfirmVendorRetrievedAsync(systemcode, CRVVendorID, null);
        }
        
        /// <remarks/>
        public void ConfirmVendorRetrievedAsync(string systemcode, string CRVVendorID, object userState) {
            if ((this.ConfirmVendorRetrievedOperationCompleted == null)) {
                this.ConfirmVendorRetrievedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmVendorRetrievedOperationCompleted);
            }
            this.InvokeAsync("ConfirmVendorRetrieved", new object[] {
                        systemcode,
                        CRVVendorID}, this.ConfirmVendorRetrievedOperationCompleted, userState);
        }
        
        private void OnConfirmVendorRetrievedOperationCompleted(object arg) {
            if ((this.ConfirmVendorRetrievedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmVendorRetrievedCompleted(this, new ConfirmVendorRetrievedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://crv.dc.capitaland.com/crvservice/VendorService.asmx/GetTradeTypeCodesByVen" +
            "dorType", RequestNamespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx", ResponseNamespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Code[] GetTradeTypeCodesByVendorType(string systemcode, string VendorTypeID) {
            object[] results = this.Invoke("GetTradeTypeCodesByVendorType", new object[] {
                        systemcode,
                        VendorTypeID});
            return ((Code[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTradeTypeCodesByVendorTypeAsync(string systemcode, string VendorTypeID) {
            this.GetTradeTypeCodesByVendorTypeAsync(systemcode, VendorTypeID, null);
        }
        
        /// <remarks/>
        public void GetTradeTypeCodesByVendorTypeAsync(string systemcode, string VendorTypeID, object userState) {
            if ((this.GetTradeTypeCodesByVendorTypeOperationCompleted == null)) {
                this.GetTradeTypeCodesByVendorTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTradeTypeCodesByVendorTypeOperationCompleted);
            }
            this.InvokeAsync("GetTradeTypeCodesByVendorType", new object[] {
                        systemcode,
                        VendorTypeID}, this.GetTradeTypeCodesByVendorTypeOperationCompleted, userState);
        }
        
        private void OnGetTradeTypeCodesByVendorTypeOperationCompleted(object arg) {
            if ((this.GetTradeTypeCodesByVendorTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTradeTypeCodesByVendorTypeCompleted(this, new GetTradeTypeCodesByVendorTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://crv.dc.capitaland.com/crvservice/VendorService.asmx/GetVendorClassificatio" +
            "nCodes", RequestNamespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx", ResponseNamespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Code[] GetVendorClassificationCodes(string systemcode) {
            object[] results = this.Invoke("GetVendorClassificationCodes", new object[] {
                        systemcode});
            return ((Code[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorClassificationCodesAsync(string systemcode) {
            this.GetVendorClassificationCodesAsync(systemcode, null);
        }
        
        /// <remarks/>
        public void GetVendorClassificationCodesAsync(string systemcode, object userState) {
            if ((this.GetVendorClassificationCodesOperationCompleted == null)) {
                this.GetVendorClassificationCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorClassificationCodesOperationCompleted);
            }
            this.InvokeAsync("GetVendorClassificationCodes", new object[] {
                        systemcode}, this.GetVendorClassificationCodesOperationCompleted, userState);
        }
        
        private void OnGetVendorClassificationCodesOperationCompleted(object arg) {
            if ((this.GetVendorClassificationCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorClassificationCodesCompleted(this, new GetVendorClassificationCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://crv.dc.capitaland.com/crvservice/VendorService.asmx/GetVendorTypeCodes", RequestNamespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx", ResponseNamespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Code[] GetVendorTypeCodes(string systemcode) {
            object[] results = this.Invoke("GetVendorTypeCodes", new object[] {
                        systemcode});
            return ((Code[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorTypeCodesAsync(string systemcode) {
            this.GetVendorTypeCodesAsync(systemcode, null);
        }
        
        /// <remarks/>
        public void GetVendorTypeCodesAsync(string systemcode, object userState) {
            if ((this.GetVendorTypeCodesOperationCompleted == null)) {
                this.GetVendorTypeCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorTypeCodesOperationCompleted);
            }
            this.InvokeAsync("GetVendorTypeCodes", new object[] {
                        systemcode}, this.GetVendorTypeCodesOperationCompleted, userState);
        }
        
        private void OnGetVendorTypeCodesOperationCompleted(object arg) {
            if ((this.GetVendorTypeCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorTypeCodesCompleted(this, new GetVendorTypeCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx")]
    public partial class Vendor {
        
        private string objectIDField;
        
        private string objectNumberField;
        
        private string companyRegistrationNumberField;
        
        private string sBUField;
        
        private string incCountryField;
        
        private string regAddressBlockHouseNoField;
        
        private string regAddressStreetNameField;
        
        private string regAddressUnitNoField;
        
        private string regAddressBuildingnameField;
        
        private string regCountryField;
        
        private string regAddressCityField;
        
        private string regAddressPostalCodeField;
        
        private string operatingAddressBlockHouseNoField;
        
        private string operatingAddressStreetNameField;
        
        private string operatingAddressUnitNoField;
        
        private string operatingAddressBuildingnameField;
        
        private string opsCountryField;
        
        private string operatingAddressCityField;
        
        private string operatingAddressPostalCodeField;
        
        private string statusField;
        
        private string modifiedDateTimeField;
        
        private VendorVersion vendorVersionField;
        
        /// <remarks/>
        public string ObjectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectNumber {
            get {
                return this.objectNumberField;
            }
            set {
                this.objectNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyRegistrationNumber {
            get {
                return this.companyRegistrationNumberField;
            }
            set {
                this.companyRegistrationNumberField = value;
            }
        }
        
        /// <remarks/>
        public string SBU {
            get {
                return this.sBUField;
            }
            set {
                this.sBUField = value;
            }
        }
        
        /// <remarks/>
        public string IncCountry {
            get {
                return this.incCountryField;
            }
            set {
                this.incCountryField = value;
            }
        }
        
        /// <remarks/>
        public string RegAddressBlockHouseNo {
            get {
                return this.regAddressBlockHouseNoField;
            }
            set {
                this.regAddressBlockHouseNoField = value;
            }
        }
        
        /// <remarks/>
        public string RegAddressStreetName {
            get {
                return this.regAddressStreetNameField;
            }
            set {
                this.regAddressStreetNameField = value;
            }
        }
        
        /// <remarks/>
        public string RegAddressUnitNo {
            get {
                return this.regAddressUnitNoField;
            }
            set {
                this.regAddressUnitNoField = value;
            }
        }
        
        /// <remarks/>
        public string RegAddressBuildingname {
            get {
                return this.regAddressBuildingnameField;
            }
            set {
                this.regAddressBuildingnameField = value;
            }
        }
        
        /// <remarks/>
        public string RegCountry {
            get {
                return this.regCountryField;
            }
            set {
                this.regCountryField = value;
            }
        }
        
        /// <remarks/>
        public string RegAddressCity {
            get {
                return this.regAddressCityField;
            }
            set {
                this.regAddressCityField = value;
            }
        }
        
        /// <remarks/>
        public string RegAddressPostalCode {
            get {
                return this.regAddressPostalCodeField;
            }
            set {
                this.regAddressPostalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OperatingAddressBlockHouseNo {
            get {
                return this.operatingAddressBlockHouseNoField;
            }
            set {
                this.operatingAddressBlockHouseNoField = value;
            }
        }
        
        /// <remarks/>
        public string OperatingAddressStreetName {
            get {
                return this.operatingAddressStreetNameField;
            }
            set {
                this.operatingAddressStreetNameField = value;
            }
        }
        
        /// <remarks/>
        public string OperatingAddressUnitNo {
            get {
                return this.operatingAddressUnitNoField;
            }
            set {
                this.operatingAddressUnitNoField = value;
            }
        }
        
        /// <remarks/>
        public string OperatingAddressBuildingname {
            get {
                return this.operatingAddressBuildingnameField;
            }
            set {
                this.operatingAddressBuildingnameField = value;
            }
        }
        
        /// <remarks/>
        public string OpsCountry {
            get {
                return this.opsCountryField;
            }
            set {
                this.opsCountryField = value;
            }
        }
        
        /// <remarks/>
        public string OperatingAddressCity {
            get {
                return this.operatingAddressCityField;
            }
            set {
                this.operatingAddressCityField = value;
            }
        }
        
        /// <remarks/>
        public string OperatingAddressPostalCode {
            get {
                return this.operatingAddressPostalCodeField;
            }
            set {
                this.operatingAddressPostalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string ModifiedDateTime {
            get {
                return this.modifiedDateTimeField;
            }
            set {
                this.modifiedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public VendorVersion VendorVersion {
            get {
                return this.vendorVersionField;
            }
            set {
                this.vendorVersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx")]
    public partial class VendorVersion {
        
        private string objectIDField;
        
        private string objectNameField;
        
        private string vendorLocalNameField;
        
        private string modifiedDateTimeField;
        
        private VendorTradeType[] vendorTradeTypesField;
        
        private VendorSpecification[] cRVVendorSpecsField;
        
        private VendorFinancialStatus[] vendorFinancialStatusesField;
        
        /// <remarks/>
        public string ObjectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectName {
            get {
                return this.objectNameField;
            }
            set {
                this.objectNameField = value;
            }
        }
        
        /// <remarks/>
        public string VendorLocalName {
            get {
                return this.vendorLocalNameField;
            }
            set {
                this.vendorLocalNameField = value;
            }
        }
        
        /// <remarks/>
        public string ModifiedDateTime {
            get {
                return this.modifiedDateTimeField;
            }
            set {
                this.modifiedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public VendorTradeType[] VendorTradeTypes {
            get {
                return this.vendorTradeTypesField;
            }
            set {
                this.vendorTradeTypesField = value;
            }
        }
        
        /// <remarks/>
        public VendorSpecification[] CRVVendorSpecs {
            get {
                return this.cRVVendorSpecsField;
            }
            set {
                this.cRVVendorSpecsField = value;
            }
        }
        
        /// <remarks/>
        public VendorFinancialStatus[] VendorFinancialStatuses {
            get {
                return this.vendorFinancialStatusesField;
            }
            set {
                this.vendorFinancialStatusesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx")]
    public partial class VendorTradeType {
        
        private string objectIDField;
        
        private string vendorTypeIDField;
        
        private string tradeTypeIDField;
        
        private string modifiedDateTimeField;
        
        /// <remarks/>
        public string ObjectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        public string VendorTypeID {
            get {
                return this.vendorTypeIDField;
            }
            set {
                this.vendorTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string TradeTypeID {
            get {
                return this.tradeTypeIDField;
            }
            set {
                this.tradeTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string ModifiedDateTime {
            get {
                return this.modifiedDateTimeField;
            }
            set {
                this.modifiedDateTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx")]
    public partial class Code {
        
        private string objectIDField;
        
        private string objectNameField;
        
        private string modifiedDateTimeField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string ObjectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectName {
            get {
                return this.objectNameField;
            }
            set {
                this.objectNameField = value;
            }
        }
        
        /// <remarks/>
        public string ModifiedDateTime {
            get {
                return this.modifiedDateTimeField;
            }
            set {
                this.modifiedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx")]
    public partial class VendorFinancialStatus {
        
        private string objectIDField;
        
        private System.Nullable<int> yearField;
        
        private string currencyField;
        
        private System.Nullable<decimal> authorisedCapitalField;
        
        private System.Nullable<decimal> paidUpCapitalField;
        
        private System.Nullable<decimal> latestShareholderFundField;
        
        private System.Nullable<decimal> currentAssetOverLiabilitiesField;
        
        private System.Nullable<decimal> turnOverField;
        
        private System.Nullable<decimal> netProfitOverLossAfterTaxField;
        
        private System.Nullable<decimal> debtRatioField;
        
        private System.Nullable<decimal> inventoryTurnoverField;
        
        private System.Nullable<decimal> interestCoverRatioField;
        
        private string modifiedDateTimeField;
        
        /// <remarks/>
        public string ObjectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Year {
            get {
                return this.yearField;
            }
            set {
                this.yearField = value;
            }
        }
        
        /// <remarks/>
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> AuthorisedCapital {
            get {
                return this.authorisedCapitalField;
            }
            set {
                this.authorisedCapitalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> PaidUpCapital {
            get {
                return this.paidUpCapitalField;
            }
            set {
                this.paidUpCapitalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> LatestShareholderFund {
            get {
                return this.latestShareholderFundField;
            }
            set {
                this.latestShareholderFundField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> CurrentAssetOverLiabilities {
            get {
                return this.currentAssetOverLiabilitiesField;
            }
            set {
                this.currentAssetOverLiabilitiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> TurnOver {
            get {
                return this.turnOverField;
            }
            set {
                this.turnOverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> NetProfitOverLossAfterTax {
            get {
                return this.netProfitOverLossAfterTaxField;
            }
            set {
                this.netProfitOverLossAfterTaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> DebtRatio {
            get {
                return this.debtRatioField;
            }
            set {
                this.debtRatioField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> InventoryTurnover {
            get {
                return this.inventoryTurnoverField;
            }
            set {
                this.inventoryTurnoverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> InterestCoverRatio {
            get {
                return this.interestCoverRatioField;
            }
            set {
                this.interestCoverRatioField = value;
            }
        }
        
        /// <remarks/>
        public string ModifiedDateTime {
            get {
                return this.modifiedDateTimeField;
            }
            set {
                this.modifiedDateTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://crv.dc.capitaland.com/crvservice/VendorService.asmx")]
    public partial class VendorSpecification {
        
        private string objectIDField;
        
        private string vendorTypeIDField;
        
        private string vendorClassIDField;
        
        private string modifiedDateTimeField;
        
        /// <remarks/>
        public string ObjectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        public string VendorTypeID {
            get {
                return this.vendorTypeIDField;
            }
            set {
                this.vendorTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string VendorClassID {
            get {
                return this.vendorClassIDField;
            }
            set {
                this.vendorClassIDField = value;
            }
        }
        
        /// <remarks/>
        public string ModifiedDateTime {
            get {
                return this.modifiedDateTimeField;
            }
            set {
                this.modifiedDateTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SubscribeVendorCompletedEventHandler(object sender, SubscribeVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubscribeVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubscribeVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UnSubscribeVendorCompletedEventHandler(object sender, UnSubscribeVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnSubscribeVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnSubscribeVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IsVendorSubscribedCompletedEventHandler(object sender, IsVendorSubscribedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsVendorSubscribedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsVendorSubscribedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetOutdatedAndNewVendorListCompletedEventHandler(object sender, GetOutdatedAndNewVendorListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutdatedAndNewVendorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutdatedAndNewVendorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SearchVendorCompletedEventHandler(object sender, SearchVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetVendorCompletedEventHandler(object sender, GetVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vendor Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vendor)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ConfirmVendorRetrievedCompletedEventHandler(object sender, ConfirmVendorRetrievedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmVendorRetrievedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmVendorRetrievedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetTradeTypeCodesByVendorTypeCompletedEventHandler(object sender, GetTradeTypeCodesByVendorTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTradeTypeCodesByVendorTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTradeTypeCodesByVendorTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Code[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Code[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetVendorClassificationCodesCompletedEventHandler(object sender, GetVendorClassificationCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorClassificationCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorClassificationCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Code[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Code[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetVendorTypeCodesCompletedEventHandler(object sender, GetVendorTypeCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorTypeCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorTypeCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Code[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Code[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591