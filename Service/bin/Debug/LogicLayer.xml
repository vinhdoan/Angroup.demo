<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LogicLayer</name>
    </assembly>
    <members>
        <member name="T:LogicLayer.TWorkChecklistItemResponse">
            <summary>
            Summary description for OChecklistResponseSet
            </summary>
        </member>
        <member name="F:LogicLayer.LogicLayerSchema`1.CurrentActivityID">
            <summary>
            Represents the column for the foreign key to the activity table.
            </summary>
        </member>
        <member name="M:LogicLayer.LogicLayerSchema`1.Create">
            <summary>
            Creates a new object of the type T. If the type T implements
            the interface IWorkflowEnabled, then the workflow version
            of the object is created.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.LogicLayerSchema`1.CreateObject">
            <summary>
            Creates a new object of the type T. If the type T implements
            the interface IWorkflowEnabled, then the workflow version
            of the object is created.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.LogicLayerSchema`1.Attachments">
            <summary>
            Represents a one-to-many join to the Attachment table.
            </summary>
        </member>
        <member name="P:LogicLayer.LogicLayerSchema`1.Memos">
            <summary>
            Represents a one-to-many join to the Memo table.
            </summary>
        </member>
        <member name="P:LogicLayer.LogicLayerSchema`1.Activities">
            <summary>
            Represents a one to many join to the Activity table.
            </summary>
        </member>
        <member name="P:LogicLayer.LogicLayerSchema`1.CurrentActivity">
            <summary>
            Represents a one-to-one join to the Activity table
            through the CurrentActivityID.
            </summary>
        </member>
        <member name="P:LogicLayer.LogicLayerSchema`1.CustomizedAttributeFields">
            <summary>
            Represents a one-to-many join to the CustomizedAttributeField table.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:LogicLayer.LogicLayerSchema`1.ActivityHistories" -->
        <member name="T:LogicLayer.OWorkChecklistItemResponse">
            <summary>
            Represents a possible response for a checklist item that 
            is attached to the work. Responses are answers to a question
            in the checklist, and examples are: 'Yes', 'No', 'Ok', 'Not Ok',
            etc.
            </summary>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.SendEmailToLowerLevelApprovers(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="messageTemplateCode"></param>
            <param name="triggeringEventName"></param>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.NotifyAssignedRecipient(LogicLayer.LogicLayerPersistentObjectBase,System.Collections.Generic.List{LogicLayer.OUser})">
            <summary>
            Sends an e-mail or SMS message to the
            specified recipients based on the specified 
            message template.
            <para></para>
            Also carbon-copies the notification to another
            set of users.
            <para></para>
            It achieves this by calling the 
            OMessageTemplate.GenerateAndSendMessage method.
            Application developers can all either method,
            but this method is exposed to the SendMessage 
            workflow activity.
            </summary>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.GetPreviousApproversByLevel(System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.ApproversList(System.Int32)">
            <summary>
            This method is to get the latest approvers that have approved the rfq for each level and before the current approval level
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.AssignedApproverNames(LogicLayer.OApprovalHierarchyLevel,System.Collections.Generic.List{LogicLayer.OApprovalProcess})">
            <summary>
            This method to get Appover Names whether approval hierarchy is by User or Position or Role
            This method is being used for the approvallist method above
            </summary>
            <param name="level"></param>
            <param name="listApprovals"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.GetAssignedApprovers(System.Collections.Generic.List{LogicLayer.OUser})">
            <summary>
            
            </summary>
            <param name="users"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.GenerateNextRunningNumber">
            <summary>
            Generates the next running number and sets it
            to the ObjectNumber of this persistent object.
            </summary>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.Deactivating">
            <summary>
            Overrides the deactivating method to deactivate
            the CurrentActivity when this object is deactivated.
            </summary>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.Activating">
            <summary>
            Overrides the activating method to activate the
            CurrentActivity object when this object is activated.
            </summary>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.TriggerWorkflowEvent(System.String)">
            <summary>
            Triggers an event that will be passed to the Workflow Engine
            to execute. It is the responsibility of the developer to 
            save any modified changes to this object BEFORE calling
            this method. 
            </summary>
            <remarks>
            The following is an example on how to call this method by passing
            in the object with the event declarations, and the event name to
            trigger.
            <example>
            <code>
               OWork work = TablesLogic.tWork.Load(workId);
               work.SupervisorID = userID;
               
               // The work must be saved before the TriggerWorkflowEvent
               // method is called.
               //
               work.Save();
               work.TriggerWorkflowEvent("SubmitForApproval");
            </code>
            </example>
            </remarks>
            <param name="transitEventName">The name of the event that has been
            declared in the WorkflowFramework.IAnacleEvents interface.</param>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.SaveAndTransit(System.String)">
            <summary>
            Saves the object and then transits the object.
            </summary>
            <param name="transitEventName"></param>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.ArchiveActivity(System.Int32)">
            <summary>
            Archives the current activity into the activity history.
            </summary>
            <param name="historyType"></param>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.AssignTask(System.String,System.String,System.Boolean,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.IEnumerable,System.String)">
            <summary>
            Assigns the task to a user, or a group of users based on their
            system role, or business role. After the assignment, this
            current activity is archived into the 
            ActivityHistory table for future reference.
            <para></para>
            This method is only called by the SetStateAndAssign custom activity
            in the workflow, but should not be called by the developer.
            </summary>
            <param name="activity"></param>
            <param name="stateName"></param>
            <param name="priority"></param>
            <param name="scheduledStartDateTime"></param>
            <param name="scheduledEndDateTime"></param>
            <param name="usersToAssignToThisTask"></param>
            <param name="roleCodes"></param>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.AssignTaskToApprovers(System.String,System.String,System.Boolean,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Assigns the task to approvers based on the approval
            hierarchy.
            <para></para>
            This method is only called by the SetStateAndAssignApprovers 
            custom activity in the workflow, but should not be called by 
            the developer.
            </summary>
            <param name="activity"></param>
            <param name="stateName"></param>
            <param name="priority"></param>
            <param name="scheduledStartDateTime"></param>
            <param name="scheduledEndDateTime"></param>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.GetNextNotificationDateTime(System.String,System.Nullable{System.Int32})">
            <summary>
            Get the next notification date based on a reference field on this object
            and the notification time in minutes.
            </summary>
            <param name="referenceField"></param>
            <param name="notificationTimeInMinutes"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.ApplyNotificationProcess">
            <summary>
            Searches for and applies the notification process to the
            task.
            </summary>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.RejectTask">
            <summary>
            Rejects this task.
            <para></para>
            This method is called only by the RejectTask activity
            in a workflow and should not be called directly by the
            developer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.ApproveTask">
            <summary>
            Approves this task.
            <para></para>
            This method is called only by the ApproveTask activity
            in a workflow and should not be called directly by the
            developer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.SendMessage(System.String,System.String,System.String)">
            <summary>
            Sends an e-mail or SMS message to the
            specified recipients based on the specified 
            message template.
            <para></para>
            It achieves this by calling the 
            OMessageTemplate.GenerateAndSendMessage method.
            Application developers can all either method,
            but this method is exposed to the SendMessage 
            workflow activity.
            </summary>
            <param name="messageTemplateCode"></param>
            <param name="emailRecipients"></param>
            <param name="smsRecipients"></param>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.SendMessageWithComposedEmailMessage(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="subjectMessageTemplate"></param>
            <param name="bodyMessageTemplate"></param>
            <param name="emailRecipients"></param>
            <param name="smsRecipients"></param>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.SendMessage(System.String,System.String,System.String,System.String)">
            <summary>
            Sends an e-mail or SMS message to the
            specified recipients based on the specified 
            message template.
            <para></para>
            It achieves this by calling the 
            OMessageTemplate.GenerateAndSendMessage method.
            Application developers can all either method,
            but this method is exposed to the SendMessage 
            workflow activity.
            </summary>
            <param name="messageTemplateCode"></param>
            <param name="emailRecipients"></param>
            <param name="smsRecipients"></param>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.SendMessage(System.String,LogicLayer.OUser[])">
            <summary>
            Sends an e-mail or SMS message to the
            specified recipients based on the specified 
            message template.
            <para></para>
            It achieves this by calling the SendMessage method.
            </summary>
            <param name="messageTemplateCode"></param>
            <param name="emailRecipients"></param>
            <param name="smsRecipients"></param>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.SendMessage(System.String,System.Collections.Generic.List{LogicLayer.OUser},System.Collections.Generic.List{LogicLayer.OUser})">
            <summary>
            Sends an e-mail or SMS message to the
            specified recipients based on the specified 
            message template.
            <para></para>
            It achieves this by calling the SendMessage method.
            </summary>
            <param name="messageTemplateCode"></param>
            <param name="emailRecipients"></param>
            <param name="smsRecipients"></param>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.NotifyAssignedRecipient(LogicLayer.LogicLayerPersistentObjectBase)">
            <summary>
            Sends an e-mail or SMS message to the
            specified recipients based on the specified 
            message template.
            <para></para>
            It achieves this by calling the 
            OMessageTemplate.GenerateAndSendMessage method.
            Application developers can all either method,
            but this method is exposed to the SendMessage 
            workflow activity.
            </summary>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.AssertObjectType(Anacle.DataFramework.PersistentObject)">
            <summary>
            Asserts if the persistent object passed in is derived from
            LogicLayerPersistentObject.
            </summary>
            <param name="persistentObject">The persistent object to test.</param>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObjectBase.IsFinalApprover">
            <summary>
            Check if the LogicLayerPersistentObject has reached the last level of approval.
            </summary>
            <param name="persistentObject"></param>
        </member>
        <member name="P:LogicLayer.LogicLayerPersistentObjectBase.CurrentLoggedOnUserName">
            <summary>
            Curent Logged-on user name.
            </summary>
        </member>
        <member name="P:LogicLayer.LogicLayerPersistentObjectBase.AssignedUserPositionsWithUserNames">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.LogicLayerPersistentObjectBase.AssignedUserNamesOrPositionUserNames">
            <summary>
            Assigned usernames or position with usernames.
            </summary>
        </member>
        <member name="P:LogicLayer.LogicLayerPersistentObjectBase.ApproverLists">
            <summary>
            Get ApprovalHierarchy for document template (WJPrintOut)
            </summary>
        </member>
        <member name="P:LogicLayer.LogicLayerPersistentObjectBase.CurrentActivityID">
            <summary>
            Gets a GUID representing the foreign key link to the Activity table.
            </summary>
        </member>
        <member name="P:LogicLayer.LogicLayerPersistentObjectBase.Attachments">
            <summary>
            Gets a list of file attachments attached to this PersistentObject.
            </summary>
        </member>
        <member name="P:LogicLayer.LogicLayerPersistentObjectBase.Memos">
            <summary>
            Gets a list of memo objects attached to this PersistentObject.
            </summary>
        </member>
        <member name="P:LogicLayer.LogicLayerPersistentObjectBase.Activities">
            <summary>
            Gets a list representing workflow activity history of this PersistentObject.
            </summary>
        </member>
        <member name="P:LogicLayer.LogicLayerPersistentObjectBase.CurrentActivity">
            <summary>
            Gets an OActivity object representing the current status of this PersistentObject.
            </summary>
        </member>
        <member name="P:LogicLayer.LogicLayerPersistentObjectBase.CustomizedAttributeFields">
            <summary>
            Gets a list representing all custommizable attribute fields.
            </summary>
        </member>
        <member name="P:LogicLayer.LogicLayerPersistentObjectBase.ActivityHistories">
            <sumary>
            Gets a list representing workflow activity histories of this PersistentObject
            </sumary>
        </member>
        <member name="P:LogicLayer.LogicLayerPersistentObjectBase.AssignedUserNames">
            <summary>
            Gets a comma-separated list of users who are assigned to this object.
            
            If this object does not have a workflow or state, this property returns
            a null string.
            </summary>
        </member>
        <member name="P:LogicLayer.LogicLayerPersistentObjectBase.AssignedUserPositions">
            <summary>
            Gets a comma-separated list of positions who are assigned to this object.
            
            If this object does not have a workflow or state, this property returns
            a null string.
            </summary>
        </member>
        <member name="P:LogicLayer.LogicLayerPersistentObjectBase.TaskLocations">
            <summary>
            Gets the OLocation tracked by this object. This
            is used by the workflow assignment to assign
            this object to one or more positions. 
            <para></para>
            Descendant classes should implement this if
            this object can be assigned to Positions. If no
            location is associated with this object, return
            null.
            </summary>
        </member>
        <member name="P:LogicLayer.LogicLayerPersistentObjectBase.TaskEquipments">
            <summary>
            Gets the OEquipment tracked by this object. This
            is used by the workflow assignment to assign
            this object to one or more positions. 
            <para></para>
            Descendant classes should implement this if
            this object can be assigned to Positions. If no
            location is associated with this object, return
            null.
            </summary>
        </member>
        <member name="P:LogicLayer.LogicLayerPersistentObjectBase.TaskTypeOfService">
            <summary>
            Gets the OCode (type of service) tracked by this object. 
            This is used by the workflow assignment to assign
            this object to one or more positions. 
            <para></para>
            Descendant classes should implement this if
            this object can be assigned to Positions. If no
            location is associated with this object, return
            null.
            </summary>
        </member>
        <member name="P:LogicLayer.LogicLayerPersistentObjectBase.TaskAmount">
            <summary>
            Gets the dollar amount of this task. This
            is used by the approval assignments to determine
            the users or positions to assign the object
            to. 
            <para></para>
            Descendant classes should implement this if
            this object undergoes approval, and the amount
            is require to determine the approvers for the
            object.
            </summary>
        </member>
        <member name="P:LogicLayer.LogicLayerPersistentObjectBase.DocumentTemplateDataSet">
            <summary>
            Gets the DataSet of this object.
            This is used for printing out and
            exporting to PDF via RDL form.
            </summary>
        </member>
        <member name="P:LogicLayer.LogicLayerPersistentObjectBase.EmailMessageAttachments">
            <summary>
            Get the Attachments attached to this task
            for purpose of sending email.
            </summary>
        </member>
        <member name="P:LogicLayer.LogicLayerPersistentObjectBase.TaskPriority">
            <summary>
            Gets the Importance of the task.
            </summary>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObject.AssignTask(System.String,System.String,System.Boolean,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.IEnumerable,System.String)">
            <summary>
            Assigns the task to a user, or a group of users based on their
            system role, or business role. After the assignment, this
            current activity is archived into the 
            ActivityHistory table for future reference.
            <para></para>
            This method is only called by the SetStateAndAssign custom activity
            in the workflow, but should not be called by the developer.
            </summary>
            <param name="activity"></param>
            <param name="stateName"></param>
            <param name="priority"></param>
            <param name="scheduledStartDateTime"></param>
            <param name="scheduledEndDateTime"></param>
            <param name="usersToAssignToThisTask"></param>
            <param name="roleCodes"></param>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObject.AssignTaskToApprovers(System.String,System.String,System.Boolean,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            This method overrides the default AssignTaskToApprovers method in LogicLayerPersistentObjectBase,
            and is here only for CapitaLand.
            </summary>
            <param name="activity"></param>
            <param name="stateName"></param>
            <param name="priority"></param>
            <param name="scheduledStartDateTime"></param>
            <param name="scheduledEndDateTime"></param>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObject.Round(System.Nullable{System.Decimal})">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.LogicLayerPersistentObject.Round(System.Decimal)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OWorkChecklistItemResponse.DisplayOrder">
            <summary>
            [Column] Gets or sets the order of display of 
            this response.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkChecklistItemResponse.WorkChecklistItemID">
            <summary>
            [Column] Gets or sets the foreign key to the ? table 
            that indicates
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkChecklistItemResponse.ScoreNumerator">
            <summary>
            [Column] Gets or sets the numerator of the score,
            the score that will be added to the total if
            the user selects this response.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkChecklistItemResponse.WorkChecklistItem">
            <summary>
            Gets or sets the OWorkChecklistItem object that represents
            the checklist item that this record is a response to.
            </summary>
        </member>
        <member name="T:LogicLayer.TServiceLevel">
            <summary>
            Summary description for OChecklist
            </summary>
        </member>
        <member name="T:LogicLayer.OServiceLevel">
            <summary>
            Represents a collection of limits applicable during the 
            execution of a work. These limits indicate the expected
            duration that a work is to be acknowledged by, responded 
            by arriving on site, and completed by.
            </summary>
        </member>
        <member name="M:LogicLayer.OServiceLevel.HasDuplicateServiceLevelDetail(LogicLayer.OServiceLevelDetail)">
            <summary>
            Check if a duplicate service level detail exists. A service
            level detail is duplicate if the following are the same:
            - Step Number
            - Type of Service
            - Priority
            Returns true if so, false otherwise.
            </summary>
            <param name="detail"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OServiceLevel.IsDuplicateLocation">
            <summary>
            Checks if there is a service level defined for the same location.
            Returns true if so, false otherwise.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OServiceLevel.LocationID">
            <summary>
            [Column] Gets or sets the foreign key to the Location table 
            that indicates the location (and those under) that this
            service level applies to.
            </summary>
        </member>
        <member name="P:LogicLayer.OServiceLevel.ServiceLevelDetails">
            <summary>
            Gets a one-to-many list of OServiceLevelDetail objects 
            that represents a list of limits categorized by the priority
            and types of service.
            </summary>
        </member>
        <member name="P:LogicLayer.OServiceLevel.Location">
            <summary>
            Gets or sets the OLocation object that represents
            the location (and those under) that this
            service level applies to.
            </summary>
        </member>
        <member name="T:LogicLayer.ORequestForQuotationVendorItem">
            <summary>
            Represents an object that contains the quoted price of a line
            item from a request for quotation item object.
            </summary>
            <summary>
            Represents an object that contains the quoted price of a line
            item from a request for quotation item object.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.RequestForQuotationVendorID">
            <summary>
            [Column] Gets or sets the foreign key to the RequestForQuotationVendor table 
            that indicates the quotation object that contains this item.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.RequestForQuotationItemID">
            <summary>
            [Column] Gets or sets the foreign key to the RequestForQuotationItem table 
            that indicates the line item in the request for quotation
            that this quote is for.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.ItemNumber">
            <summary>
            [Column] Gets or sets the item number of this purchase
            request item.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.ItemType">
            <summary>
            [Column] Gets or sets a value that indicates the type
            this item belongs to.
            <para></para>
            <list>
              <item>0 - Material</item>
              <item>1 - Services</item>
              <item>2 - Others</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.ItemDescription">
            <summary>
            [Column] Gets or sets the description of this item.
            This description is filled up with the material's (catalogue)
            or service's (fixed rate) name. If ItemType = 2, however,
            this description is entered by the user manually through
            the user interface.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.CatalogueID">
            <summary>
            [Column] Gets or sets the foreign key to the Catalogue table 
            that indicates the material item requested.
            This is applicable if ItemType = 0.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.FixedRateID">
            <summary>
            [Column] Gets or sets the foreign key to the FixedRate table 
            that indicates the service item requested.
            This is applicable if ItemType = 1.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.UnitOfMeasureID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table 
            that indicates the unit of measure of this material
            or service. 
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.CurrencyID">
            <summary>
            [Column] Gets or sets the foreign key to the
            Currency table that represents the currency 
            of this line item.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.UnitPriceInSelectedCurrency">
            <summary>
            [Column] Gets or sets the unit price of this item
            in the selected currency.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.UnitPrice">
            <summary>
            [Column] Gets or sets the unit price of this item in
            the base currency.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.QuantityProvided">
            <summary>
            [Column] Gets or sets the quantity of the material
            or service provided by the vendor. This is usually
            the same as the QuantityRequired in the ORequestForQuotationItem
            object, but vendors can choose to provide less or
            more depending on the arrangement.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.ItemDiscount">
            <summary>
            This field is not used.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.UnitOfMeasure">
            <summary>
            Gets or sets the OCode object that represents
            the unit of measure of this material
            or service. 
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.Catalogue">
            <summary>
            Gets or sets the OCatalogue object that represents
            the material item requested.
            This is applicable if ItemType = 0.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.FixedRate">
            <summary>
            Gets or sets the OFixedRate object that represents
            the service item requested.
            This is applicable if ItemType = 1.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.RequestForQuotationVendor">
            <summary>
            Gets or sets the ORequestForQuotationVendor object that represents
            the quotation object that contains this item.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.RequestForQuotationItem">
            <summary>
            Gets or sets the ORequestForQuotationItem object that represents
            the line item in the request for quotation
            that this quote is for.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.Currency">
            <summary>
            Gets or sets the OCurrency object that represents
            the currency of the unit price of this line item.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.ItemTypeText">
            <summary>
            Gets the localized text for the item type.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.ChargeAmount">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.RecoverableAmount">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.RecoverableAmountInSelectedCurrency">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.Subtotal">
            <summary>
            Gets the sub total awarded for this
            line item. The sub-total is the unit price (in base currency) 
            multiplied by the quantity provided.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendorItem.SubtotalInSelectedCurrency">
            <summary>
            Gets the sub total awarded for this
            line item. The sub-total is the unit price (in selected currency) 
            multiplied by the quantity provided.
            </summary>
        </member>
        <member name="T:LogicLayer.TPurchaseOrder">
            <summary>
            Summary description for OPurchaseOrder
            </summary>
        </member>
        <member name="T:LogicLayer.OPurchaseOrder">
            <summary>
            Represents a purchase order object as a legal document to a
            vendor to purchase materials or services.
            </summary>
            <summary>
            Represents a purchase order object as a legal document to a
            vendor to purchase materials or services.
            </summary>
            <summary>
            Represents a purchase order object as a legal document to a
            vendor to purchase materials or services.
            </summary>
        </member>
        <member name="T:LogicLayer.IAutoGenerateRunningNumber">
            <summary>
            Represents an interface that can be tagged to any persistent
            object class so that it can have the capability to auto
            generate running numbers.
            <para></para>
            This interface should only be used sparingly on top-level
            objects like contract, work, scheduled work, store adjustment,
            store check-in, budget adjustment, budget reallocation,
            purchase orders.
            <para></para>
            It should never be used on sub-level objects like work cost
            items, purchase order items, etc, as the generation of running
            numbers can potentially slow the saving process.
            </summary>
        </member>
        <member name="F:LogicLayer.OPurchaseOrder.tempPurchaseBudgetSummaries">
            <summary>
            A cached copy of the budget summary table that
            can be queried from the database
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.Saving">
            --------------------------------------------------------------
            <summary>
            Called just before the object is saved.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.Deactivating">
            --------------------------------------------------------------
            <summary>
            Deactivate all purchase order line items, when this
            purchase order is deactivated.
            <para></para>
            Then, releases all budgets.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.ComputeTempBudgetSummaries">
            <summary>
            Computes the temporary list of budget
            summaries.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.SubmitForApproval">
            <summary>
            Submits for Purchase Order for approval by doing: <br/>
            1. Creates the budget transaction logs. <br/>
            2. Creates the budget summaries and stamp them with the current
            budget available balance. <br/>
            <para></para>
            This method is called from the workflow. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.Reject">
            <summary>
            Rejects the Purchase Order by doing the following:
            1. Cancels all budget transactions.
            2. Clears all budget summaries.
            <para></para>
            This method is called from the workflow. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.Cancel">
            <summary>
            Cancels the Purchase Order by doing the following: <br/>
            1. Unlink all PO line items from RFQ / WJ line items. <br/>
            2. Cancel all PO budget transactions. <br/>
            3. Undo the transfer of the previous RFQ budget transactions. <br/>
            <para></para>
            This method is called from the workflow. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.Close">
            <summary>
            Closes the Purchase Order by doing the following: <br/>
            1. Cancels all budget transactions. <br/>
            <para></para>
            This method is called from the workflow. It should
            not be called by the developer directly.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.UpdateExchangeRate">
            <summary>
            Updates the exchange rate from the one defined
            in the database.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.UpdateSingleItemUnitPrice(LogicLayer.OPurchaseOrderItem)">
            <summary>
            Updates the unit price of all vendor quoted items.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.UpdateItemCurrencies">
            <summary>
            Updates the dropdown lists of all rows in the RequestForQuotationVendorItems
            grid view. Also updates the currencyID of each ORequestForQuotationVendorItem
            objects.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.ReorderItems(LogicLayer.OPurchaseOrderItem)">
            --------------------------------------------------------------
            <summary>
            Re-order the list of items in the checklist response set.
            </summary>
            <param name="i"></param>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.ValidateAllUnitPricesEntered">
            --------------------------------------------------------------
            <summary>
            Returns true if all unit prices in the list of purchase
            order items have been entered.
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.CreateReceipt">
            --------------------------------------------------------------
            <summary>
            Create a new receipt for goods and services. This method
            will compute the balance of all goods and services
            received and update the balance into the receipt line items.
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.ContainsUnsavedReceipts">
            --------------------------------------------------------------
            <summary>
            Determines if there are any unsaved receipts in the purchase
            order. Returns true if so, false otherwise.
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.ContainsOnlyServiceItems">
            --------------------------------------------------------------
            <summary>
            Determines if all items in the list of purchase order items
            are service items. Returns true if so, false otherwise.
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.IsReceivingMaterialItems(LogicLayer.OPurchaseOrderReceipt)">
            <summary>
            Checks the user is receiving any material items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.CreatePOFromRFQs(System.Collections.Generic.List{System.Guid},System.Int32)">
            --------------------------------------------------------------
            <summary>
            Create a single PO from a set of RFQs
            </summary>
            <param name="prIds"></param>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.CreatePOFromPRs(System.Collections.Generic.List{System.Guid})">
            --------------------------------------------------------------
            <summary>
            Create a single RFQ from a set of PRs
            </summary>
            <param name="prIds"></param>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.CreatePOFromPRLineItems(System.Collections.Generic.List{LogicLayer.OPurchaseRequestItem})">
             --------------------------------------------------------------
             <summary>
             Create a single RFQ from a set of WJ line items and saves the
             RFQ into the database.
            
             The line items must come from RFQs that have been awarded
             already.
             </summary>
             <param name="prLineItems"></param>
             --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.AddPOLineItemsFromPRLineItems(LogicLayer.OPurchaseOrder,System.Collections.Generic.List{LogicLayer.OPurchaseRequestItem})">
            --------------------------------------------------------------
            <summary>
            Add WJ Lines into a PO.
            </summary>
            <param name="o"></param>
            <param name="items"></param>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.HasMaterialItems">
            <summary>
            Checks if there is at least one material item in the purchase.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.ValidateSufficientBudget">
            <summary>
            Validates that there is sufficient amount in the budgets
            for the deduction.
            </summary>
            <returns>Returns a string of a list of budget periods and accounts
            that are insufficient. Returns an empty string otherwise.
            </returns>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.ValidateBudgetAmountEqualsLineItemAmount">
            <summary>
            Validates that the budget amount is equals to the line
            item amount.
            <para></para>
            This function is generic and can be applied to any of
            the WJ/RFQ/PO objects provided the line items implement
            the ItemNumber and the Amount properties.
            </summary>
            <returns>Returns -1 if the validation succeeds. Returns 0 if
            the total WJ amount does not equal the budget amount .
            Returns any other number if that line number does
            not equal the budget amount</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:LogicLayer.OPurchaseOrder.ValidateRFQToPOPolicy" -->
        <member name="M:LogicLayer.OPurchaseOrder.UpdateApplicablePurchaseSettings">
            <summary>
            Gets the most applicable purchase settings and store it
            in a temporary variable.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.IsAllItemsCopiedFromRFQ">
            <summary>
            Determines and returns a flag indicating whether all
            items are copied from an RFQ.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.ValidateSufficientNumberOfQuotations">
            <summary>
            Validates that there are sufficient number of quotations
            for this request for qoutation.
            <para></para>
            This method returns
            <list>
                <item>0 - if there is insufficient quotations.</item>
                <item>1 - if there is sufficient quotations.</item>
                <item>-1 - if there is insufficient quotations, but a justification is required.</item>
            </list>
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.GetAccessibleApprovedPurchaseOrders(LogicLayer.OUser,System.String,System.Nullable{System.Guid})">
            <summary>
            Get all accessible purchase orders that have been approved
            (or currently in the Pending Receipt state).
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.ValidateNoGoodsReceiptAndInvoices(System.Nullable{System.Guid})">
            <summary>
            Validates that no good receipts and purchase invoices have been created against
            this purchase order.
            </summary>
            <param name="purchaseOrderId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.ValidateStoreBinNotLocked">
            <summary>
            Validates that selected the store bins of this purchase
            order is not locked (provided there are inventory items
            checked in during this receipt).
            <para></para>
            Returns
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.ValidateInvoicesClosedOrCancelled">
            <summary>
            Validates to ensure that all invoices are closed and cancelled
            before the Purchase Order is closed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.GeneratePODocument(LogicLayer.OPurchaseOrder)">
             <summary>
            
             </summary>
             <param name="po"></param>
             <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.UpdateItemRecoverables">
             <summary>
            
             </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.Saving2">
            <summary>
            Update the object name to show the WJ number.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.AccountPurchaseOrder(System.Collections.Generic.List{System.Object},System.DateTime)">
            <summary>
            Account for POs. (For capitaland DEMO)
            </summary>
            <param name="poIds"></param>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.CreatePOFromPRLineItemsWithBudget(System.Collections.Generic.List{LogicLayer.OPurchaseRequestItem})">
             --------------------------------------------------------------
             <summary>
             Create a single RFQ from a set of WJ line items and saves the
             RFQ into the database.
            
             The line items must come from RFQs that have been awarded
             already.
             </summary>
             <param name="prLineItems"></param>
             --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.AddPOLineItemsFromPRLineItemsWithBudget(LogicLayer.OPurchaseOrder,System.Collections.Generic.List{LogicLayer.OPurchaseRequestItem})">
            --------------------------------------------------------------
            <summary>
            Add WJ Lines into a PO.
            </summary>
            <param name="o"></param>
            <param name="items"></param>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.AccountPurchaseOrderVariance(System.Collections.Generic.List{System.Object},System.DateTime)">
            <summary>
            Account for POs. (For capitaland DEMO)
            </summary>
            <param name="poIds"></param>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.Approve">
            <summary>
            Approves the Purchase Order by doing the following:<br/>
            1. Update all budget transactions to indicated Approved.<br/>
            2. Create budget summaries if not already created.<br/>
            3. Stamp budget summaries with current budget balance at approval.<br/>
            <para></para>
            This method is called from the workflow. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.CreatePOFromRFQLineItems(System.Collections.Generic.List{LogicLayer.ORequestForQuotationItem},System.Int32)">
             --------------------------------------------------------------
             <summary>
             Create a single RFQ from a set of WJ line items and saves the
             RFQ into the database.
            
             The line items must come from RFQs that have been awarded
             already.
             </summary>
             <param name="prLineItems"></param>
             --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.AddPOLineItemsFromRFQLineItems(LogicLayer.OPurchaseOrder,System.Collections.Generic.List{LogicLayer.ORequestForQuotationItem})">
             <summary>
            
             </summary>
             <param name="o"></param>
             <param name="items"></param>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.ValidateBudgetSpendingPolicy">
            <summary>
            Validates that the budget spending policy is adhered to, that is,
            budgets can be spent or not if they are not yet created for
            a finacial period.
            <para></para>
            Returns a list of budgets that failed because budget periods
            are not available.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.CreatePaymentSchedule(LogicLayer.OPurchaseOrder,Anacle.DataFramework.DataList{LogicLayer.ORequestForQuotationPaymentSchedule})">
             <summary>
            
             </summary>
             <param name="po"></param>
             <param name="RFQPaymentSchedules"></param>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.CreateRequestForQuotationForUnreceivedItems">
            <summary>
            Called when OPurchaseOrder goes into CancelledAndRevised State
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.ValidateContractPriceWithinVariation(LogicLayer.OPurchaseOrderItem)">
            <summary>
            Validates if the total contract price within variation.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.POItems(System.Nullable{System.Guid})">
             <summary>
            
             </summary>
             <param name="POID"></param>
             <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.POMgmtCompanyReport(System.Nullable{System.Guid})">
             <summary>
            
             </summary>
             <param name="ManagementCompanyID"></param>
             <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.PurchaseBudetTable">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.PurchaseBudgetTable(LogicLayer.OPurchaseOrder)">
             <summary>
            
             </summary>
             <param name="po"></param>
             <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.IsObjectEditOrView(LogicLayer.OUser,System.Guid,System.String,System.Boolean)">
             <summary>
            
             </summary>
             <param name="user"></param>
             <param name="objectID"></param>
             <param name="Object"></param>
             <param name="isEditable"></param>
             <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseOrder.UpdateTransactionAmount">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.CaseID">
            <summary>
            [Column] Gets or sets the foreign key to the
            Case table that represents the Case this
            Purchase Order is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.Description">
            <summary>
            [Column] Gets or sets the description for this purchase
            order object.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.IsTermContract">
            <summary>
            [Column] Gets or sets a flag indicating if this purchase
            order is for a term contract.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.GeneratedTermContractID">
            <summary>
            [Column] Gets or sets the foreign key to the Contract
            table that indicates the term contract generated
            by this Purchase Order upon approval.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.DateOfOrder">
            <summary>
            [Column] Gets or sets the date this purchase order was
            made.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.DateRequired">
            <summary>
            [Column] Gets or sets the date the materials or
            services are required.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.DateEnd">
            <summary>
            [Column] Gets or sets the date the
            required services should end.
            <para></para>
            This is applicable only if this Purchase Order
            is for a term contract.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.PurchaseTypeID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table
            that indicates the purchase type.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.PurchaseAdministratorID">
            <summary>
            [Column] Gets or sets the foreign key to the User table
            that indicates the purchase administrator to follow
            up with this purchase order.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.LocationID">
            <summary>
            [Column] Gets or sets the foreign key to the Location table
            that indicates the location where any service is to be
            carried out in.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.EquipmentID">
            <summary>
            [Column] Gets or sets the foreign key to the Equipment table
            that indicates the equipment where any service is to be
            carried out on.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.ContractID">
            <summary>
            [Column] Gets or sets the foreign key to the Contract table
            that indicates the purchase agreement contract that will be
            used to define the prices of materials and services in
            this purchase order.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.StoreID">
            <summary>
            [Column] Gets or sets the foreign key to the Store table
            that indicates the store the materials purchase are intended
            for.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.VendorID">
            <summary>
            [Column] Gets or sets the foreign key to the Vendor table
            that indicates the vendor who will be providing the
            materials or services.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.CurrencyID">
            <summary>
            [Column] Gets or sets the foreign key to the
            Currency table that represents the foreign
            currency of the line items in this vendor's
            quotation.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.IsExchangeRateDefined">
            <summary>
            [Column] Gets or sets a flag indicating whether
            the exchange rate for the selected currency
            was defined when the currency was selected.
            <para></para>
            If the selected currency is the system's base
            currency, then this flag will be 1.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.ForeignToBaseExchangeRate">
            <summary>
            [Column] Gets or sets the foreign key to the
            Currency table that represents the foreign
            currency exchange rate.
            <para></para>
            The date of the quotation and the selected
            currency is used to determine the exchange rate.
            <para></para>
            If a default exchange rate cannot be found in the
            exchange rate table, then the user may enter
            the exchange rate manually.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.BudgetDistributionMode">
            <summary>
            [Column] Gets or sets the budget distribution mode.
            <para></para>
            <list>
                <item>0 - Budget Distribution by Entire RFQ. </item>
                <item>1 - Budget Distribution by RFQ line items. </item>
            </list>
            <para></para>
            Note that when the budget distribution is by an entire
            RFQ, then the user will be allowed to copy only the entire
            RFQ to a new PO, but will not be allowed to copy
            individual line items to a new PO.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.IsSubmittedForApproval">
            <summary>
            [Column] Gets or sets a flag indicating that the
            request for quotation has been submitted for approval.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.IsApproved">
            <summary>
            [Column] Gets or sets a flag indicating that the
            request for quotation has been approved.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.FreightTerms">
            <summary>
            [Column] Gets or sets the freight terms associated with
            this purchase order.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.PaymentTerms">
            <summary>
            [Column] Gets or sets the payment terms associated with
            this purchase order.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.ContactAddressCountry">
            <summary>
            [Column] Gets or sets the contact details.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.ContactAddressState">
            <summary>
            [Column] Gets or sets the contact details.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.ContactAddressCity">
            <summary>
            [Column] Gets or sets the contact details.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.ContactAddress">
            <summary>
            [Column] Gets or sets the contact details.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.ContactCellPhone">
            <summary>
            [Column] Gets or sets the contact details.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.ContactEmail">
            <summary>
            [Column] Gets or sets the contact details.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.ContactFax">
            <summary>
            [Column] Gets or sets the contact details.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.ContactPhone">
            <summary>
            [Column] Gets or sets the contact details.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.ContactPerson">
            <summary>
            [Column] Gets or sets the contact details.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.ShipToAddress">
            <summary>
            [Column] Gets or sets the address to ship the materials
            or perform the services at.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.ShipToAttention">
            <summary>
            [Column] Gets or sets the person in-charge who will
            attend to the receipt of the materials or services.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.BillToAddress">
            <summary>
            [Column] Gets or sets the address to bill to.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.BillToAttention">
            <summary>
            [Column] Gets or sets the person in-charge who will
            attend to the billing.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.RFQToPOPolicy">
            <summary>
            [Column] Gets or sets a value indicating if a purchase order
            must be created from a request for quotation.
            <para></para>
            <list>
                <item>0 - Not required.</item>
                <item>1 - Preferred. A warning is displayed if the minimum quotations is not satisfied.</item>
                <item>2 - Required. </item>
            </list>
            <para></para>
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.MinimumApplicablePOAmount">
            <summary>
            [Column] Gets or sets the minimum amount (inclusive)
            that will result in the PO policy taking effect.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.BudgetValidationPolicy">
            <summary>
            [Column] Gets or sets a value indicating
            the budget validation policy.
            <list>
                <item>0 - Budget consumption must be equal to line items. (default) </item>
                <item>1 - Budget consumption must be less than or equal to line items. </item>
                <item>2 - No validation. </item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.POMatchingType">
            <summary>
            [Column] Gets or sets a value indicating
            the how this PO should be matched.
            <list>
                <item>0 - 3-Way matching to Goods Receipt (Quantity Billed &lt;= Quantity Delivered). </item>
                <item>1 - 2-Way matching to Purchase Order (Quantity Billed &lt;= Quantity Ordered). </item>
            </list>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:LogicLayer.OPurchaseOrder.IsPOAllowedClosure" -->
        <member name="P:LogicLayer.OPurchaseOrder.GeneratedTermContract">
            <summary>
            Gets or sets a reference to the OContract object
            generated by this Term Contract Purchase Order when
            it is approved.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.Case">
            <summary>
            Gets or sets the reference to the OCase object
            that represents the case this purchase order
            is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.PurchaseType">
            <summary>
            Gets or sets the Purchase Type object the represents
            the purchase type of this request for quotation.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.Vendor">
            <summary>
            Gets or sets the OVendor object that represents
            the vendor who will be providing the
            materials or services.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.Store">
            <summary>
            Gets or sets the OStore object that represents
            the store the materials purchase are intended
            for.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.PurchaseAdministrator">
            <summary>
            Gets or sets the OUser object that represents
            the purchase administrator to follow
            up with this purchase order.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.PurchaseOrderItems">
            <summary>
            Gets a one-to-many list of OPurchaseOrderItem objects that represents
            the list of purchase order items that this purchase order contains.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.PurchaseOrderReceipts">
            <summary>
            Gets a one-to-many list of OPurchaseOrderReceipt objects that represents
            the quantity of the materials and services that have been received
            against this purchase order.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.Location">
            <summary>
            Gets or sets the OLocation object that represents
            the location where any service is to be
            carried out in.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.Equipment">
            <summary>
            Gets or sets the OEquipment object that represents
            the equipment where any service is to be
            carried out on.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.Contract">
            <summary>
            Gets or sets the OContract object that represents
            the purchase agreement contract that will be
            used to define the prices of materials and services in
            this purchase order.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.Currency">
            <summary>
            Gets or sets the OCurrency object that represents
            the default currency that will be set on a purchase order
            line item when a new item is created.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.PurchaseBudgets">
            <summary>
            Gets a one-to-many list of OPurchaseBudget objects that represents
            the budget distribution for this purchase order.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.PurchaseBudgetSummaries">
            <summary>
            Gets a one-to-many list of OPurchaseBudgetSummary objects that represents
            information about this purchase order's commitment to the budgets.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.PurchaseInvoices">
            <summary>
            Gets a one-to-many list of OPurchaseInvoice objects that represents
            the list of invoices created and matched against this
            purchase order.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.TempPurchaseBudgetSummaries">
            <summary>
            A cached copy of the budget summary table. This
            is a temporary list of the budget summaries that
            provides a snapshot of the budget accounts when
            the RFQ object is before the pending approval state.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.TaskLocations">
            <summary>
            Gets the location indicated by this purchase request.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.TaskEquipments">
            <summary>
            Gets the equipment indicated by this purchase request.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.TaskAmount">
            <summary>
            Gets the total awarded amount of this request for quotation.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:LogicLayer.OPurchaseOrder.ExchangeRate" -->
        <member name="P:LogicLayer.OPurchaseOrder.BudgetDistributionModeText">
            <summary>
            Gets the budget distribution mode in text.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.IsRecoverable">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.IsCharged">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.TaskAmountInSelectedCurrency">
            <summary>
            Gets the total awarded amount in selected currency.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.DateAccounted">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.DateVarianceAccounted">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.TransactionTypeGroupID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.POType">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.TransactionTypeGroup">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.TrustID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.LOAOnBehalfOfID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.SignatoryID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.DeliveryToID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.BillToID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.DeliveryDate">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.ManagementCompanyID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.CampaignID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.IsPaymentPaidByPercentage">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.WorkCompletionDate">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.HasWarranty">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.WarrantyPeriod">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.WarrantyUnit">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.Warranty">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.IsGroupPO">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.BudgetGroupID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.HasTaxCodePerLineItem">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.DeliverToContactPersonID">
            <summary>
            Gets or set contact person ID for Delivery To
            (for Marcom instance only)
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.BillToContactPersonID">
            <summary>
            Gets or set contact person ID for Bill To
            (for Marcom instance only)
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.ManagementCompany">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.DeliveryTo">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.BillTo">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.Trust">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.LOAOnBehalfOf">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.Signatory">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.PurchaseOrderPaymentSchedules">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.GroupPOLocations">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.RequestForQuotationID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.RequestForQuotation">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.DeliverToContactPerson">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.BillToContactPerson">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.EmailMessageAttachments">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.NonCancelledPurchaseInvoices">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.TotalInvoiced">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.TotalCreditDebit">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.FirstPurchaseBudgetPath">
            <summary>
            Frst Purchase Budget path
            for PO document template purpose
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.SubTotal">
            <summary>
            for PO Document Template
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.TotalRecoverableAmount">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.SubTotalInSelectedCurrency">
            <summary>
            for PO Document Template
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.TotalRecoverableAmountInSelectedCurrency">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.SubTotalOriginalAmount">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.totalGST">
            <summary>
            for PO Document Template
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.totalGSTInSelectedCurrency">
            <summary>
            for PO Document Template
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.TotalWithGST">
            <summary>
            for PO Document Template
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.TotalWithGSTInSelectedCurrency">
            <summary>
            for PO Document Template
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.RFQNumber">
            <summary>
            Get the RFQNumber if the PO is generated by RFQ
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.QuotationNumber">
            <summary>
            get quotation reference number which is AwardedRequestForQuotationVendor's Number
            if the PO is generated by RFQ
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.CompanyName">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.RFQCreatedUser">
            <summary>
            Get the RFQ Created User if the PO is generated from RFQ
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.RFQCreatedDate">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.RFQEndDate">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.RFQTitle">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.RFQBackground">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.DeliveryPhoneNo">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.DeliveryFax">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.RFQApprovedDate">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.ManagementCompanyName">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.GetTotalInvoiceAmount">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrder.PurchaseBudgetAccounts">
             <summary>
            
             </summary>
        </member>
        <member name="T:LogicLayer.OPurchaseOrder.PurchaseBudgetAccount">
             <summary>
            
             </summary>
        </member>
        <member name="T:LogicLayer.PurchaseOrderMatchingType">
            <summary>
            Enumerates the different types of matching.
            </summary>
        </member>
        <member name="F:LogicLayer.PurchaseOrderMatchingType.TwoWayMatching">
            <summary>
            2-way matching with Purchase Order. (Quantity Billed &lt;= Quantity Ordered)
            </summary>
        </member>
        <member name="F:LogicLayer.PurchaseOrderMatchingType.ThreeWayMatching">
            <summary>
            3-way matching with goods receipt. (Quantity Billed &lt;= Quantity Delivered)
            </summary>
        </member>
        <member name="M:LogicLayer.OCustomizedField.GetUniqueFieldsID(System.String)">
            <summary>
            generate unique field ID 
            </summary>
            <param name="fieldIndex"></param>
            <returns></returns>
        </member>
        <member name="T:LogicLayer.TContractPriceMaterial">
            <summary>
            Summary description for OChecklist
            </summary>
            <summary>
            Summary description for OChecklist
            </summary>
        </member>
        <member name="T:LogicLayer.OContractPriceMaterial">
            <summary>
            Represents part of a purchase agreement that indicates
            the catalogue items or set of catalogue items set out in the purchase 
            agreement contract along with a price factor applied to 
            the standard rates indicated in the catalogue items.
            </summary>
            <summary>
            Represents part of a purchase agreement that indicates
            the catalogue items or set of catalogue items set out in the purchase 
            agreement contract along with a price factor applied to 
            the standard rates indicated in the catalogue items.
            </summary>
        </member>
        <member name="P:LogicLayer.OContractPriceMaterial.ContractID">
            <summary>
            [Column] Gets or sets the foreign key to the Contract table.
            </summary>
        </member>
        <member name="P:LogicLayer.OContractPriceMaterial.CatalogueID">
            <summary>
            [Column] Gets or sets the foreign key to the Catalogue table.
            </summary>
        </member>
        <member name="P:LogicLayer.OContractPriceMaterial.PriceFactor">
            <summary>
            [Column] Gets or sets the price factor that applies to the 
            items at and under the Catalogue item associated with this 
            agreement, so that when a Purchase Order is tied to this 
            contract, all prices of materials are computed by multiplying 
            this price factor and the fixed price stated in the 
            Catalogue item.
            </summary>
        </member>
        <member name="P:LogicLayer.OContractPriceMaterial.Contract">
            <summary>
            Gets or sets the OContract object that represents the 
            contract that is associated with this agreement.
            </summary>
        </member>
        <member name="P:LogicLayer.OContractPriceMaterial.Catalogue">
            <summary>
            Gets or sets the OCatalogue object that represents the catalogue item or items that this agreement covers.
            </summary>
        </member>
        <member name="P:LogicLayer.OContractPriceMaterial.AllowVariation">
            <summary>
            [Column] Gets or sets a flag indicating if variation
            is allowed for the agreed price.
            </summary>
        </member>
        <member name="P:LogicLayer.OContractPriceMaterial.VariationPercentage">
            <summary>
            [Column] Gets or sets the percentage variation allowed.
            </summary>
        </member>
        <member name="P:LogicLayer.OContractPriceMaterial.AllowVariationText">
            <summary>
            Returns a translated string that indicates whether this item
            allows variation.
            </summary>
        </member>
        <member name="T:LogicLayer.TSurveyTrade">
            <summary>
            Summary description for OSurveyTrade
            </summary>
        </member>
        <member name="T:LogicLayer.TSurveyRespondent">
            <summary>
            Summary description for OSurveyRespondent
            </summary>
            <summary>
            Summary description for OSurveyRespondent
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyRespondent.SurveyTargetType">
            <summary>
            [Column] Gets or sets the values indicates the type of survey.
            <para></para>
            0 - Surveys for Services provided by Contracted Vendors.
            1 - Surveys for Services provided by Contracted Vendors evaluated by Managing Agents.
            2 - Surveys for Other Reasons.
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyRespondent.EmailAddress">
            <summary>
            [Column] Gets or sets the value of email address of this portfolio.
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyRespondent.ExpiryDate">
            <summary>
            [Column] Gets or sets the latest date for responding to survey.
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyRespondent.SurveyRespondentPortfolioID">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyRespondent.SurveyRespondentPortfolio">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyRespondent.LocationsAccess">
            <summary>
            
            </summary>
        </member>
        <member name="T:LogicLayer.TSurvey">
            <summary>
            Summary description for OSurvey
            </summary>
            <summary>
            Summary description for OSurvey
            </summary>
        </member>
        <member name="M:LogicLayer.OSurvey.Saving">
            --------------------------------------------------------------
            <summary>
            Set the survey number format
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OSurvey.SendSurveyEmail(LogicLayer.OSurveyPlannerNotification)">
            <summary>
            Dear User,
            Please click on the following URL to complete the online evaluation form.
            {0}
            Please submit by end of {1}.
            Thank you.
            This is a computer-generated email, please do not reply to this email address. If you have any enquiries, please email to:
            moe_fdd_pdm_surveys@moe.gov.sg
            P.S.: Please copy the URL and paste it into your browser address bar if the online evaluation form can not be opened by clicking on the URL.
            </summary>
            <param name="type"></param>
        </member>
        <member name="P:LogicLayer.OSurvey.EmbeddedEmailURL">
            <summary>
            Construct public URL for this survey
            e.g. https://eam-survey.dc.capitaland.com with
            text Click here to take survey
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSettingSmsKeywordHandler.ApplicationSettingID">
            <summary>
            [Column] Gets or sets a foreign key to the ApplicationSetting
            table that indicates the application setting that this
            keyword handler belongs under.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSettingSmsKeywordHandler.Keywords">
            <summary>
            [Column] Gets or sets a list of keywords 
            (comma-separated).
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSettingSmsKeywordHandler.HandlerUrl">
            <summary>
            [Column] Gets or sets a URL that will 
            process the set of keywords specified in
            this handler.
            </summary>
        </member>
        <member name="T:LogicLayer.TNotificationHierarchyLevel">
            <summary>
            Represents one level in the Notification hierarchy.
            </summary>
        </member>
        <member name="T:LogicLayer.ONotificationHierarchyLevel">
            <summary>
            Represents one level in the Notification hierarchy.
            </summary>
        </member>
        <member name="F:LogicLayer.ONotificationHierarchyLevel.TempNotificationProcessingTiming">
            <summary>
            This is a temporary link to the ONotificationProcessTiming
            object associated with this notification hierarchy level.
            This link is not saved into the database, but allows the user to 
            update the non-default timing in the user interface.
            </summary>
        </member>
        <member name="M:LogicLayer.ONotificationHierarchyLevel.ValidateUserOrRoleOrPositionSpecified">
            <summary>
            Validates that at least one user or one job has been specified.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.ONotificationHierarchyLevel.NotificationHierarchyID">
            <summary>
            [Column] Gets or sets the foreign key to the 
            NotificationHierarchy table that represents that
            Notification hierarchy under which this Notification
            hierarchy level belongs to.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationHierarchyLevel.NotificationLevel">
            <summary>
            [Column] Gets or sets the numeric Notification
            level of this Notification hierarchy level. 
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationHierarchyLevel.NotificationTimeInMinutes1">
            <summary>
            [Column] Gets or sets the default Notification time in minutes
            for the first milestone.
            <para></para>
            This time will be overriden by the notification process' time
            if the user indicated not to use the default notification time.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationHierarchyLevel.NotificationTimeInMinutes2">
            <summary>
            [Column] Gets or sets the default Notification time in minutes
            for the second milestone.
            <para></para>
            This time will be overriden by the notification process' time
            if the user indicated not to use the default notification time.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationHierarchyLevel.NotificationTimeInMinutes3">
            <summary>
            [Column] Gets or sets the default Notification time in minutes
            for the third milestone.
            <para></para>
            This time will be overriden by the notification process' time
            if the user indicated not to use the default notification time.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationHierarchyLevel.NotificationTimeInMinutes4">
            <summary>
            [Column] Gets or sets the default Notification time in minutes
            for the fourth milestone.
            <para></para>
            This time will be overriden by the notification process' time
            if the user indicated not to use the default notification time.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationHierarchyLevel.Users">
            <summary>
            Gets the list of users who will be notified
            at this level.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationHierarchyLevel.Positions">
            <summary>
            Gets the list of positions who will be notified
            at this level.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationHierarchyLevel.Roles">
            <summary>
            Gets the list of roles that will be notified
            at this level.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationHierarchyLevel.UserNames">
            <summary>
            Gets a comma-separated list of user names.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationHierarchyLevel.PositionNames">
            <summary>
            Gets a comma-separated list of job names.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationHierarchyLevel.RoleNames">
            <summary>
            Gets a comma-separated list of job names.
            </summary>
        </member>
        <member name="T:Pop3.Pop3StateObject">
            <summary>
            Holds the current state of the client
            socket.
            </summary>
        </member>
        <member name="T:Pop3.Pop3Parse">
            <summary>
            Summary description for Pop3ParseMessage.
            </summary>
        </member>
        <member name="M:LogicLayer.OBudgetAdjustment.PendingApproval">
            <summary>
            Called by the workflow.
            </summary>
        </member>
        <member name="M:LogicLayer.OBudgetAdjustment.Commit">
            <summary>
            Copy this budget adjusment detail to the budget variationlog
            </summary>
        </member>
        <member name="M:LogicLayer.OBudgetAdjustment.ValidateIntervalAmountsEqualTotal">
            <summary>
            Validates to ensure that the total amounts for the individual accounts equal to the
            total.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetAdjustment.ValidateAccountIdDoesNotExist(System.Guid)">
            <summary>
            Validates that the specified account ID does not exist
            in the list of amounts in this budget.
            </summary>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetAdjustment.CheckSufficientAvailableAmount">
            <summary>
            Check sufficient available amount
            and check if the item has been inactivated
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetAdjustment.IsDeactivatable">
            <summary>
            Readjustment object cannot be deleted if object is at Budget_Readjustment_COmmitted state
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetAdjustment.Saving">
            --------------------------------------------------------------
            <summary>
            Called just before the object is saved.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.Description">
            <summary>
            [Column] Gets or sets the description of this
            adjustment.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.BudgetID">
            <summary>
            [Column] Gets or sets the foreign key to the
            Budget table that represents the budget this
            adjustment will be committed against.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.BudgetPeriodID">
            <summary>
            [Column] Gets or sets the foreign key to the
            BudgetPeriod table that represents the budget period this
            adjustment will be committed against.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.IsCommitted">
            <summary>
            [Column] Gets or sets a flag indicating if
            this budget adjustment has been committed to the
            budget.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.IsNewVersion">
            <summary>
            [Column] Gets or sets a flag indicating if
            this budget adjustment is new version
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.BudgetAdjustmentDetails">
            <summary>
            Gets a reference to a list of OBudgetAdjustmentDetail objects
            that contain information about the accounts, and the amount
            to adjust.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.Budget">
            <summary>
            Gets a reference to an OBudget object representing
            the budget that this adjustment will be committed against.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.BudgetPeriod">
            <summary>
            Gets a reference to an OBudgetPeriod object representing
            the budget period that this adjustment will be committed against.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.TotalAdjustmentAmount">
            <summary>
            Gets the total amount to be adjusted across all budget accounts
            in this adjustment record.
            <para></para>
            This property is meant to be displayed in the budget adjustment
            edit page. Developers should avoid using this property to 
            generate reports.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.TaskAmount">
            <summary>
            Gets the total task amount.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.TaskLocations">
            <summary>
            Gets a list of locations applicable to
            the budget that this adjustment will commit
            against.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.Header01">
            <summary>
            HeaderText of Interval01Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.Header02">
            <summary>
            HeaderText of Interval02Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.Header03">
            <summary>
            HeaderText of Interval03Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.Header04">
            <summary>
            HeaderText of Interval04Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.Header05">
            <summary>
            HeaderText of Interval05Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.Header06">
            <summary>
            HeaderText of Interval06Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.Header07">
            <summary>
            HeaderText of Interval07Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.Header08">
            <summary>
            HeaderText of Interval08Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.Header09">
            <summary>
            HeaderText of Interval09Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.Header10">
            <summary>
            HeaderText of Interval10Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.Header11">
            <summary>
            HeaderText of Interval11Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustment.Header12">
            <summary>
            HeaderText of Interval12Amount for Template
            </summary>
        </member>
        <member name="T:LogicLayer.OBillItem">
            <summary>
            Represents the Bill for an OPC point obtained
            from the server, entered by a user through the work
            module, or entered by the user through the Point module.
            </summary>
            <summary>
            Represents the Bill for an OPC point obtained
            from the server, entered by a user through the work
            module, or entered by the user through the Point module.
            </summary>
        </member>
        <member name="M:LogicLayer.OBillItem.CreateBillItem(LogicLayer.OBill,LogicLayer.OReading)">
            <summary>
            
            </summary>
            <param name="bill"></param>
            <param name="reading"></param>
            <returns></returns>
        </member>
        <member name="T:LogicLayer.TStoreBinItem">
            <summary>
            Summary description for OStoreBinItem
            Item in each bin with its actual quantity
            </summary>
        </member>
        <member name="T:LogicLayer.OStoreBinItem">
            <summary>
            Represents the individual batches of stock items checked in
            into a bin. It stores information about the quantity, the unit 
            price, the batch date, the catalogue, etc.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreBinItem.AdjustQuantity(System.Decimal,System.Nullable{System.Decimal},System.Int32,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Adjust the physical or available quantity upwards or downwards, only if
            the results of the adjustment of both fields do not fall below 0. 
            This creates a StoreItemTransaction log and saves it.
            
            Saves the item immediately when this method completes.
            </summary>
            <param name="Quantity">Quantity to adjust.</param>
            <returns>The quantity adjusted.</returns>
        </member>
        <member name="M:LogicLayer.OStoreBinItem.AdjustQuantityForReversal(System.Decimal)">
            <summary>
            Adjust the physical or available quantity upwards or downwards
            without creating a new transaction record.
            <para></para>
            This method should only be used during the cancellation of
            a store check-in/check-out/adjustment/transfer.
            </summary>
            <param name="Quantity">Quantity to adjust.</param>
            <returns>The quantity adjusted.</returns>
        </member>
        <member name="M:LogicLayer.OStoreBinItem.AdjustQuantity(LogicLayer.OStoreItem,System.Decimal,System.Nullable{System.Decimal},System.Int32,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Adjust the physical or available quantity upwards or downwards, only if
            the results of the adjustment of both fields do not fall below 0. 
            This creates a StoreItemTransaction log and saves it.
            
            Saves the item immediately when this method completes.
            </summary>
            <param name="quantity">Quantity to adjust.</param>
            <param name="unitPrice">The unit price of the batch to check in. Specify a null
            value to avoid performing averaging of the unit price.</param>
            <returns>The quantity adjusted.</returns>
        </member>
        <member name="M:LogicLayer.OStoreBinItem.PeekAdjustQuantity(System.Decimal)">
            <summary>
            This method pretends to adjust the quantity of this
            item downwards.
            
            This is used by the OStore.PeekItem method.
            </summary>
            <param name="Quantity">Quantity to adjust.</param>
            <returns>The quantity adjusted.</returns>
        </member>
        <member name="P:LogicLayer.OStoreBinItem.StoreBinID">
            <summary>
            [Column] Gets or sets the foreign key to the StoreBin table to 
            indicate the store bin that this batch is contained in.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBinItem.CatalogueID">
            <summary>
            [Column] Gets or sets the foreign key to the CatalogueID table to indicate the catalogue that the items in this batch belongs to.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBinItem.EquipmentID">
            <summary>
            [Column] Gets or sets the foreign key to the
            Equipment table to indicate the equipment that
            this OStoreBinItem object is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBinItem.UnitPrice">
            <summary>
            [Column] Gets or sets the unit price of items in this batch. 
            Same items with different unit price will be stored as a 
            separate batch.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBinItem.PhysicalQuantity">
            <summary>
            [Column] Gets or sets the physical quantity of items in this 
            batch. This is updated during a check-out, a transfer, or an 
            adjustment.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBinItem.BatchDate">
            <summary>
            [Column] Gets or sets the batch date of this batch, which is the 
            system date/time that this batch was checked into the store. The 
            Store module uses this date/time to determine the order of 
            checking-out in the FIFO/LIFO costing method.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBinItem.ExpiryDate">
            <summary>
            [Column] Gets or sets the expiry date of this batch of items. 
            This is only for information and does not affect the order of 
            check-outs.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBinItem.LotNumber">
            <summary>
            [Column] Gets or sets the lot or batch number of this batch of 
            items.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBinItem.Catalogue">
            <summary>
            Gets or sets the OCatalogue object that represents the 
            catalogue to which this batch of item belongs.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBinItem.StoreBin">
            <summary>
            Gets or sets the OStoreBin object that represents the store 
            bin that this batch is contained in.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBinItem.Equipment">
            <summary>
            Gets or sets the OEquipment object that represents the store 
            bin that this batch is contained in.
            </summary>
        </member>
        <member name="T:LogicLayer.OScheduledWork">
            <summary>
            Represents a scheduled work record that contains information
            about how works can be routinely generated. 
            </summary>
            <summary>
            Represents a scheduled work record that contains information
            about how works can be routinely generated. 
            </summary>
        </member>
        <member name="M:LogicLayer.OScheduledWork.CreateWorksForNextCycleForKeppel(System.String)">
            <summary>
            Creates a set of works for the next cycle. This method
            is called by the scheduler service.
            </summary>
        </member>
        <member name="M:LogicLayer.OScheduledWork.PretendCreateWorksForKeppel">
            --------------------------------------------------------------
            <summary>
            Pretend Create all work orders, based on the scheduled work's 
            parameters.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OScheduledWork.Created">
            <summary>
            Initializes the number of days to create fixed
            works.
            </summary>
        </member>
        <member name="M:LogicLayer.OScheduledWork.Saving">
            <summary>
            Occurs before the object is saved into the database.
            </summary>
        </member>
        <member name="M:LogicLayer.OScheduledWork.IsDuplicateWorkCost(LogicLayer.OScheduledWorkCost)">
            <summary>
            Check if the work cost entered is a duplicate work cost.
            Returns true if so, false otherwise.
            </summary>
            <param name="workCost"></param>
        </member>
        <member name="M:LogicLayer.OScheduledWork.Deactivating">
            <summary>
            When deactivating or cancelling this schedule, deactivate
            all works below it as well. 
            
            Note that only works without an actual end date (completion
            date) will be deactivated.
            </summary>
        </member>
        <member name="M:LogicLayer.OScheduledWork.ReorderChecklistSequence(Anacle.DataFramework.PersistentObject)">
            <summary>
            Reorders the cycle numbers for the checklist items.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:LogicLayer.OScheduledWork.DeactivateAllWorks">
            <summary>
            Deactivates and cancels all works attached to this scheduled 
            work.
            </summary>
        </member>
        <member name="M:LogicLayer.OScheduledWork.Cancel">
            <summary>
            Cancels the scheduled work and deactivates all works.
            </summary>
        </member>
        <member name="M:LogicLayer.OScheduledWork.CreateStaggeredEquipmentLocation">
            <summary>
            Creates a list of staggered equipment and location.
            
            Any previous list will be cleared.
            </summary>
        </member>
        <member name="M:LogicLayer.OScheduledWork.CreateWorksBySchedulerService">
            <summary>
            Sets up the scheduled work so that the scheduler service
            can create the works for the next cycle.
            </summary>
        </member>
        <member name="M:LogicLayer.OScheduledWork.CreateWorksForNextCycle(System.String)">
            <summary>
            Creates a set of works for the next cycle. This method
            is called by the scheduler service.
            </summary>
        </member>
        <member name="M:LogicLayer.OScheduledWork.CreateWorks(System.String)">
            --------------------------------------------------------------
            <summary>
            Create all work orders, based on the scheduled work's 
            parameters.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OScheduledWork.PretendCreateWorks">
            --------------------------------------------------------------
            <summary>
            Pretend Create all work orders, based on the scheduled work's 
            parameters.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OScheduledWork.GetWorksDataTable">
            --------------------------------------------------------------
            <summary>
            Get a data table of all the works currently attached to
            this scheduled work.
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OScheduledWork.ValidateStaggerEquipmentSelected">
            --------------------------------------------------------------
            <summary>
            Validates that at least one stagger equipment is selected.
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OScheduledWork.ValidateStaggerLocationSelected">
            --------------------------------------------------------------
            <summary>
            Validates that at least one stagger location is selected.
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="P:LogicLayer.OScheduledWork.EquipmentID">
            <summary>
            [Column] Gets or sets the foreign key to the Equipment table 
            that indicates the top-level equipment that works generated
            by this scheduled work will be based on. This does not indicate
            the equipment associated with the generated works. 
            The ScheduledWorkEquipment / ScheduledWorkStaggeredEquipment
            is the property that will indicate those equipment.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.LocationID">
            <summary>
            [Column] Gets or sets the foreign key to the Location table 
            that indicates the top-level equipment that works generated
            by this scheduled work will be based on. This does not indicate
            the location associated with the generated works. 
            The ScheduledWorkLocation / ScheduledWorkStaggeredLocation
            is the property that will indicate those location.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.ContractID">
            <summary>
            [Column] Gets or sets the foreign key to the Contract table 
            that indicates the term contract that can be used to 
            generate scheduled works.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.WorkDescription">
            <summary>
            [Column] Gets or sets the description of the generated
            works.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.TypeOfWorkID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table 
            that indicates the type of work of this scheduled work.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.TypeOfServiceID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table 
            that indicates the type of service of this scheduled work.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.TypeOfProblemID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table 
            that indicates the type of problem of this scheduled work.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.Priority">
            <summary>
            [Column] Gets or sets the priority of the generated works. 
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.EquipmentLocation">
            <summary>
            [Column] Gets or sets a value that indicates whether 
            works generated from this schedule work object are for
            equipment or for locations.
            <para></para>
            <list>
              <item>0 - Generate works for equipment</item>
              <item>1 - Generate works for location</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.EquipmentTypeID">
            <summary>
            [Column] Gets or sets the foreign key to the EquipmentType table 
            that indicates the type of equipment to generate works for.
            This is applicable if EquipmentLocation = 0.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.LocationTypeID">
            <summary>
            [Column] Gets or sets the foreign key to the LocationType table 
            that indicates the type of location to generate works for.
            This is applicable if EquipmentLocation = 1.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.IsStaggered">
            <summary>
            [Column] Gets or sets a value that indicates whether 
            the works generated for the same cycle is staggered
            (or spread apart so they do not all fall on the same day).
            <para></para>
            <list>
              <item>0 - All works for the same cycle are scheduled on the same day.</item>
              <item>1 - Works for the same cycle are staggered, and the staggering
            is specified in ScheduledWorkStaggeredEquipment/ScheduledWorkStaggeredLocation.</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.StaggerBy">
            <summary>
            [Column] Gets or sets the unit to stagger the works by.
            <para></para>
            <list>
              <item>0 - Daily</item>
              <item>1 - Weekly</item>
              <item>2 - Monthly</item>
              <item>3 - Yearly</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.SupervisorID">
            <summary>
            [Column] Gets or sets the foreign key to the User table 
            that indicates who the supervisor is for the generated
            works.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.FirstWorkStartDateTime">
            <summary>
            [Column] Gets or sets the starting date/time of the
            first work.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.FirstWorkEndDateTime">
            <summary>
            [Column] Gets or sets the end date/time of the
            first work.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.FrequencyCount">
            <summary>
            [Column] Gets or sets how often the works should be repeated.
            This only specifies a value, and must be used together with
            FrequencyInterval to determine the number of 
            days/weeks/months/years.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.FrequencyInterval">
            <summary>
            [Column] Gets or sets unit (day/week/month/year) 
            the works should be repeated. This must be used together with
            FrequencyCount to determine the number of 
            days/weeks/months/years.  The default is months.
            <para></para>
            <list>
              <item>0 - Day(s)</item>
              <item>1 - Week(s)</item>
              <item>2 - Month(s)</item>
              <item>3 - Year(s)</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.IsFloating">
            <summary>
            [Column] Gets or sets a value that indicates whether
            the works generated is based on a floating schedule,
            or based on a fixed schedule.
            <para></para>
            <list>
              <item>0 - Fixed schedule: all works are created
            based on a fixed date.</item>
              <item>1 - Floating schedule: the next work is
            created after the previous is completed, and the
            next work's start date/time is based on the previous'
            completion date/time. Car servicing is an example
            of a floating schedule.</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.WeekType">
            <summary>
            [Column] Gets or sets a value that indicates how a weekly works
            are scheduled for subsequent works. This is applicable
            only if FrequencyInterval = 1 (weekly).
            <para></para>
            <list>
              <item>0 - Same day as the day of the first work's start</item>
              <item>1 - Specific days of the week as specified in the WeekTypeDay0 
            values.</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.WeekTypeDay0">
            <summary>
            [Column] Gets or sets a value that indicates whether 
            the next work can be scheduled on a Sunday.
            This is applicable only if FrequencyInterval = 1 (weekly)
            and WeekType = 1 (specific days of the week).
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.WeekTypeDay1">
            <summary>
            [Column] Gets or sets a value that indicates whether 
            the next work can be scheduled on a Monday.
            This is applicable only if FrequencyInterval = 1 (weekly)
            and WeekType = 1 (specific days of the week).
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.WeekTypeDay2">
            <summary>
            [Column] Gets or sets a value that indicates whether 
            the next work can be scheduled on a Tuesday.
            This is applicable only if FrequencyInterval = 1 (weekly)
            and WeekType = 1 (specific days of the week).
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.WeekTypeDay3">
            <summary>
            [Column] Gets or sets a value that indicates whether 
            the next work can be scheduled on a Wednesday.
            This is applicable only if FrequencyInterval = 1 (weekly)
            and WeekType = 1 (specific days of the week).
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.WeekTypeDay4">
            <summary>
            [Column] Gets or sets a value that indicates whether 
            the next work can be scheduled on a Thursday.
            This is applicable only if FrequencyInterval = 1 (weekly)
            and WeekType = 1 (specific days of the week).
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.WeekTypeDay5">
            <summary>
            [Column] Gets or sets a value that indicates whether 
            the next work can be scheduled on a Friday.
            This is applicable only if FrequencyInterval = 1 (weekly)
            and WeekType = 1 (specific days of the week).
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.WeekTypeDay6">
            <summary>
            [Column] Gets or sets a value that indicates whether 
            the next work can be scheduled on a Saturday.
            This is applicable only if FrequencyInterval = 1 (weekly)
            and WeekType = 1 (specific days of the week).
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.MonthType">
            <summary>
            [Column] Gets or sets a value to indicate how monthly works
            are scheduled for subsequent works. This is applicable
            only if FrequencyInterval = 2 (monthly).
            <para></para>
            <list>
              <item>0 - Same date (as the date of the first work) every month</item>
              <item>1 - Based on specific week/day of the month, as defined by the
            MonthTypeWeekNumber/MonthTypeDay values.</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.MonthTypeWeekNumber">
            <summary>
            [Column] Gets or sets a value that indicates the week
            number to generate subsequent works for the monthly
            scheduling.  This is applicable only if 
            FrequencyInterval = 2 (monthly) and 
            MonthType = 1 (specific week/day)
            <para></para>
            <list>
              <item>1 - First week of the month</item>
              <item>2 - Second week of the month</item>
              <item>3 - Third week of the month</item>
              <item>4 - Fourth week of the month</item>
              <item>5 - Last week of the month</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.MonthTypeDay">
            <summary>
            [Column] Gets or sets a value that indicates the
            day of the week to generate subsequent works for 
            monthly scheduling.
            <para></para>
            <list>
              <item>0 - Sunday</item>
              <item>1 - Monday</item>
              <item>2 - Tuesday</item>
              <item>3 - Wednesday</item>
              <item>4 - Thursday</item>
              <item>5 - Friday</item>
              <item>6 - Saturday</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.IsScheduledByOccurrence">
            <summary>
            [Column] Gets or sets a value that indicates 
            how the scheduling will end.
            <para></para>
            <list>
              <item>0 - End when date of work reaches a specified end date</item>
              <item>1 - End after a total number of cycles have been generated.</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.EndDateTime">
            <summary>
            [Column] Gets or sets the date/time that works should
            not exceed. This is applicable only if IsScheduledByOccurrence = 0.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.EndNumberOfOccurrences">
            <summary>
            [Column] Gets or sets the number of occurrences / cycles of works
            that should be created. This is applicable only if 
            IsScheduledByOccurrence = 0.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.CalendarID">
            <summary>
            [Column] Gets or sets the foreign key to the Calendar table 
            that indicates the calendar that will be used to identify
            blocked dates (holidays, non-working days) during the
            scheduling of the work.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.CalendarBlockMethod">
            <summary>
            [Column] Gets or sets a value that indicates how
            to treat works that fall into the block dates specified
            by the calendar of this scheduled work.
            <para></para>
            <list>
              <item>0 - Cancel work if there the work falls on a blocked date.</item>
              <item>1 - Move work forward by one calendar day. (The scheduler will keep moving the work forward by 1 day until it is a non-blocked date)</item>
              <item>2 - Move work backward by one calendar day. (The scheduler will keep moving the work backward by 1 day until it is a non-blocked date)</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.SchedulerInProgress">
            <summary>
            [Column] Gets or sets a value that indicates if this
            scheduled work is still generating work orders.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.SchedulerChecklistCount">
            <summary>
            [Column] Gets or sets a value that indicates the current
            scheduler checklist count. This value also indicates
            the number of cycles of works created so far.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.SchedulerStartDateTime">
            <summary>
            [Column] Gets or sets a value that indicates the next
            cycle's start date/time.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.SchedulerEndDateTime">
            <summary>
            [Column] Gets or sets a value that indicates the next
            cycle's end date/time.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.IsCreated">
            <summary>
            [Column] Gets or sets a value that indicates whether
            or not this Scheduled Work has entered the Created
            state.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.IsCancelled">
            <summary>
            [Column] Gets or sets a value that indicates whether
            or not this Scheduled Work has entered the Cancelled
            state.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.IsAllFixedWorksCreatedAtOnce">
            <summary>
            [Column] Gets or sets a flag that indicates whether
            this Scheduled Work will create all fixed works at
            once.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.NumberOfDaysInAdvanceToCreateFixedWorks">
            <summary>
            [Column] Gets or sets the number of days to create
            the next cycle of works in advance, where the starting
            date of each cycle is the date the works are scheduled
            to start (if there is no staggering).
            <para></para>
            Note that works that are staggered from the start of a 
            cycle date will also be created, as long as they belong
            to the same cycle, even if they are scheduled
            to start later in time because of the staggering.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.EquipmentType">
            <summary>
            Gets or sets the OEquipmentType object that represents the
            type of equipment that the works created by this scheduled
            work will be associated with. This is applicable only if
            EquipmentLocation = 0.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.LocationType">
            <summary>
            Gets or sets the OLocationType object that represents the
            type of location that the works created by this scheduled
            work will be associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.Supervisor">
            <summary>
            Gets or sets the OUser object that represents the supervisor
            who will be assigned to the works created by this scheduled
            work.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.TypeOfWork">
            <summary>
            Gets or sets the OCode object that represents the type of
            work that the works created by this scheduled work will
            be associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.TypeOfService">
            <summary>
            Gets or sets the OCode object that represents the type of
            service that the works created by this scheduled work will
            be associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.TypeOfProblem">
            <summary>
            Gets or sets the OCode object that represents the type of
            problem that the works created by this scheduled work will
            be associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.Location">
            <summary>
            Gets or sets the OLocation object that represents the location
            that the works created by this scheduled work will
            be associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.Equipment">
            <summary>
            Gets or sets the OEquipment object that represents the equipment
            that the works created by this scheduled work will
            be associated with. This is applicable only if
            EquipmentLocation = 0.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.Works">
            <summary>
            Gets a one-to-many list of OWork objects that represents the
            list of works created by this scheduled work.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.Contract">
            <summary>
            Gets or sets the OContract object that represents the term
            contract that the works created by this scheduled work 
            will be associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.ScheduledWorkStaggeredEquipment">
            <summary>
            Gets a one-to-many list of OScheduledWorkStaggeredEquipment objects 
            that represents information about how the works for the equipment
            will be staggered. This is applicable only if EquipmentLocation = 0
            and if IsStaggered = 1.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.ScheduledWorkStaggeredLocation">
            <summary>
            Gets a one-to-many list of OScheduledWorkStaggeredLocation objects 
            that represents information about how the works for the location
            will be staggered. This is applicable only if IsStaggered = 1;
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.ScheduledWorkCost">
            <summary>
            Gets a one-to-many list of ScheduledWorkCost objects 
            that represents cost that the works created by this scheduled work
            will be associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.ScheduledWorkChecklist">
            <summary>
            Gets a one-to-many list of ScheduledWorkCost objects 
            that represents information about the sequencing of checklists
            that the works created by this scheduled will be associated
            with.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.ScheduledWorkEquipment">
            <summary>
            Gets a one-to-many list of OEquipment objects that represents
            the list of equipment that the works created by this 
            scheduled work will be associated with. This is applicable
            only if IsStaggered = 0.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.ScheduledWorkLocation">
            <summary>
            Gets a one-to-many list of OLocation objects that represents
            the list of location that the works created by this 
            scheduled work will be associated with. This is applicable
            only if IsStaggered = 0.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.Calendar">
            <summary>
            Gets or sets the OCalendar object that represents
            the calendar that will be used to identify
            blocked dates (holidays, non-working days) during the
            scheduling of the work.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.TaskLocations">
            <summary>
            Gets the location associated with this scheduled work.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.TaskEquipments">
            <summary>
            Gets the equipment associated with this scheduled work.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.TaskAmount">
            <summary>
            Gets the task amount associated with this scheduled work.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWork.TaskTypeOfService">
            <summary>
            Gets the type of service associated with this scheduled work.
            </summary>
        </member>
        <member name="P:LogicLayer.OInboxReminder.TaskPriority">
            <summary>
            Always return as High
            </summary>
        </member>
        <member name="P:LogicLayer.OInboxReminder.CurrentDate">
            <summary>
            
            </summary>
        </member>
        <member name="T:LogicLayer.TContractServiceLevelSurvey">
            <summary>
            Created by David
            </summary>
        </member>
        <member name="T:LogicLayer.OContractServiceLevelSurvey">
            <summary>
            Represents a variation log on the budget.
            </summary> 
        </member>
        <member name="T:LogicLayer.TStoreCheckInItem">
            <summary>
            Summary description for OStoreItem
            </summary>
        </member>
        <member name="T:LogicLayer.OStoreCheckInItem">
            <summary>
            Represents the record containing information about the 
            item to be checked in.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckInItem.StoreCheckInID">
            <summary>
            [Column] Gets or sets the foreign key to the StoreCheckIn table
            that indicates the store that items will be checked in to.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckInItem.CatalogueID">
            <summary>
            [Column] Gets or sets the foreign key to the Catalogue table
            that indicates the catalogue of the item that will be
            checked in.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckInItem.StoreBinID">
            <summary>
            [Column] Gets or sets the foreign key to the StoreBin table.
            that indicates the store bin the item will be checked in to.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckInItem.UnitPrice">
            <summary>
            [Column] Gets or sets the unit price of the item that will
            be checked in. Each OStoreCheckInItem record can specify
            only one unit price. If same items of different unit prices
            must be checked in, there must be multiple OStoreCheckInItem
            record.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckInItem.Quantity">
            <summary>
            [Column] Gets or sets the quantity (in the base unit) of
            the item to check in.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckInItem.ExpiryDate">
            <summary>
            [Column] Gets or sets the expiry date of the item. This
            is currently information, and is not used to determine
            the order of check outs.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckInItem.LotNumber">
            <summary>
            [Column] Gets or sets the batch or lot number of this
            item.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckInItem.StoreCheckIn">
            <summary>
            Gets or sets the OStoreCheckIn object that represents
            the store that items will be checked in to.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckInItem.Catalogue">
            <summary>
            Gets or sets the OCatalogue object that represents
            the catalogue of the item that will be checked in.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckInItem.StoreBin">
            <summary>
            Gets or sets the OStoreBin object that represents
            the store bin the item will be checked in to.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckInItem.SubTotal">
            <summary>
            Gets the sub-total as the unit price multiplied
            by the quantity.
            </summary>
        </member>
        <member name="T:LogicLayer.Reports">
            <summary>
            This is the Reports class that will be used by the Report 
            Builder to call methods within this class. 
            <para></para>
            All reports/dashboards that are to be exposed to the Report 
            Builder at the Web Application layer must declare one of the 
            following prototypes:
            <para></para>
                public static DataTable ReportMethodName(ReportParameters 
                    parameters);
            <para></para>
                public static DataSet ReportMethodName(ReportParameters 
                    parameters);
            
            </summary>
            <summary>
            This is the Reports class that will be used by the Report 
            Builder to call methods within this class. 
            <para></para>
            All reports/dashboards that are to be exposed to the Report 
            Builder at the Web Application layer must declare one of the 
            following prototypes:
            <para></para>
                public static DataTable ReportMethodName(ReportParameters 
                    parameters);
            <para></para>
                public static DataSet ReportMethodName(ReportParameters 
                    parameters);
            
            </summary>
        </member>
        <member name="M:LogicLayer.Reports.SurveyPlannerResultTotalScoreCCL(LogicLayer.ReportParameters)">
            <summary>
            Datatable for Report that return SurveyPlannerResultTotalScore        
            </summary>
            <returns>DataTable</returns>
        </member>
        <member name="M:LogicLayer.Reports.ACGReport(LogicLayer.ReportParameters)">
            <summary>
            Returns a Data Set containing multiple Data Tables reresenting sub-reports table structures.
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.Reports.CapexReport(LogicLayer.OLocation,System.DateTime)">
            <summary>
            Returns a Data Table representing the Capex Report table structure.
            </summary>
            <param name="location"></param>
            <param name="YTD"></param>
            <returns>DataTable</returns>
        </member>
        <member name="M:LogicLayer.Reports.BudgetDetailSummaryReport(LogicLayer.OLocation,System.DateTime,LogicLayer.OAccount)">
            <summary>
            Return a Data Table representing the Budget Detail Summary Report table structure.
            </summary>
            <param name="location"></param>
            <param name="YTD"></param>
            <returns>DataTable</returns>
        </member>
        <member name="M:LogicLayer.Reports.BudgetDetailSummaryReport(LogicLayer.OLocation,System.DateTime,System.String,System.Boolean,System.Int32)">
            <summary>
            Return a Data Table representing the Budget Detail Summary Report table structure.
            </summary>
            <param name="location"></param>
            <param name="YTD"></param>
            <returns>DataTable</returns>
        </member>
        <member name="M:LogicLayer.Reports.PreventiveMaintenanceReport(System.DateTime)">
            <summary>
            Return a Data Table representing the Preventive Maintenance Report table structure.
            </summary>
            <param name="YTD"></param>
            <returns>DataTable</returns>
        </member>
        <member name="M:LogicLayer.Reports.ServiceContractsReport(LogicLayer.OLocation,System.DateTime)">
            <summary>
            Return a Data Table representing the Service Contract Report table structure.
            </summary>
            <param name="location"></param>
            <param name="YTD"></param>
            <returns>DataTable</returns>
        </member>
        <member name="M:LogicLayer.Reports.ServiceToTenantsReport(LogicLayer.OLocation,System.DateTime)">
            <summary>
            Return a Data Table representing the Service to Tenants Report table structure.
            </summary>
            <param name="location"></param>
            <param name="YTD"></param>
            <returns>DataTable</returns>
        </member>
        <member name="M:LogicLayer.Reports.IsOfMonWedFriPattern(System.Int32[],System.Int32,System.Int32)">
            <summary>
            Checks if an occurrence of days in a month follows a Monday/Wednesday/Friday pattern.
            True if so, false otherwise.
            </summary>
            <param name="occurrences"></param>
            <param name="year"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.Reports.IsOfTueThuSatPattern(System.Int32[],System.Int32,System.Int32)">
            <summary>
            Checks if an occurrence of days in a month follows a Tuesday/Thursday/Saturday pattern.
            True if so, false otherwise.
            </summary>
            <param name="occurrences"></param>
            <param name="year"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.Reports.validateUserAccessRight(LogicLayer.OUser,LogicLayer.OReport,System.Guid)">
            <summary>
            Validates the user access to the specific report and location.
            </summary>
            <param name="user"></param>
            <param name="report"></param>
            <param name="LocationID"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.Reports.GetInversedDataTable(System.Data.DataTable,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Gets a Inverted DataTable
            </summary>
            <param name="table">Provided DataTable</param>
            <param name="columnX">X Axis Column</param>
            <param name="columnY">Y Axis Column</param>
            <param name="columnZ">Z Axis Column (values)</param>
            <param name="columnsToIgnore">Whether to ignore some column, it must be 
            provided here</param>
            <param name="nullValue">null Values to be filled</param> 
            <returns>C# Pivot Table Method  - Felipe Sabino</returns>
        </member>
        <member name="M:LogicLayer.Reports.GetAccessibleCondition(System.String,System.Boolean,Anacle.DataFramework.SchemaString,System.String[])">
            <summary>
            method to return the expression condition to filter out those records that are not accessible to position's locations/equipments
            </summary>
            <param name="currentUserID"></param>
            <param name="roleNameCode">role code.</param>
            <param name="isLocation"> if this is true, it will be based on location, else equipment</param>
            <param name="hierarchyPathColumn">pass in the column to be built condition, forexample, TablesLogic.tContract.Locations.HierarchyPath</param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.Reports.GetWorkAgingReport(LogicLayer.ReportParameters)">
            <summary>
            list down all works with scheduled end date has passed current date and has not been closed within certain milestone
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.Reports.GetWorkComplianceReport(LogicLayer.ReportParameters)">
            <summary>
            Total number of works that complies with the SLA, group by type of service. Only applicable for work with SLA applied to
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.Reports.AverageRatingReport(LogicLayer.ReportParameters)">
            <summary>
            Datatable for Report that return AverageRatingReport        
            </summary>
            <returns>DataTable</returns>
        </member>
        <member name="M:LogicLayer.Reports.OverallSatisfactionReport(LogicLayer.ReportParameters)">
            <summary>
            Datatable for Report that return OverallSatisfactionReport        
            </summary>
            <returns>DataTable</returns>
        </member>
        <member name="M:LogicLayer.Reports.AnalysisOfResponsesOfIndividualQuestions(LogicLayer.ReportParameters)">
            <summary>
            Datatable for Report that return AnalysisOfResponsesOfIndividualQuestions        
            </summary>
            <returns>DataTable</returns>
        </member>
        <member name="M:LogicLayer.Reports.SurveyPlannerResultCount(LogicLayer.ReportParameters)">
            <summary>
            Datatable for Report that return SurveyPlannerResultCount        
            </summary>
            <returns>DataTable</returns>
        </member>
        <member name="M:LogicLayer.Reports.SurveyPlannerResultPercentage(LogicLayer.ReportParameters)">
            <summary>
            Datatable for Report that return SurveyPlannerResultPercentage        
            </summary>
            <returns>DataTable</returns>
        </member>
        <member name="M:LogicLayer.Reports.SurveyPlannerResultTotalScore(LogicLayer.ReportParameters)">
            <summary>
            Datatable for Report that return SurveyPlannerResultTotalScore        
            </summary>
            <returns>DataTable</returns>
        </member>
        <member name="M:LogicLayer.Reports.Statistics(System.String,System.String,System.String,System.Collections.Generic.List{System.Object})">
            <summary>
            Datatable of statistics on the importance of the survey questions        
            </summary>
            <returns>DataTable</returns>
        </member>
        <member name="M:LogicLayer.Reports.BudgetSummaryReport(LogicLayer.ReportParameters)">
            <summary>
            Datatable for Report that return BudgetSummaryReport        
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.Reports.CallerHistoryReport(LogicLayer.ReportParameters)">
            <summary>
            caller history report
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.Reports.LocationPath(System.Guid)">
            <summary>
            return Location Path
            </summary>
            <param name="ObjectID"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.Reports.EquipmentPath(System.Guid)">
            <summary>
            return Equipment Path
            </summary>
            <param name="ObjectID"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.Reports.GetReportAndReportTemplate(LogicLayer.ReportParameters)">
            <summary>
            For testing rdl report.
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.Reports.GetReportTemplates(LogicLayer.ReportParameters)">
            <summary>
            for testing purpose: populate report filter value.
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.Reports.TranslateWorkStatusToString(System.String)">
            <summary>
            translate work status to string
            </summary>
            <param name="ObjectName"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.Reports.LocationHirachyPath(System.String)">
            <summary>
            return Location HirachyPath by ObjectID
            </summary>
            <param name="ObjectID"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.Reports.BudgetPeriodSummary(LogicLayer.ReportParameters)">
            <summary>
            This build a DataTable according to format of the PO Report 
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.Reports.BuildTablePurchaseOrderReport">
            <summary>
            This build a DataTable according to format of the PO Report 
            </summary>
            <returns></returns>
        </member>
        <member name="T:LogicLayer.OUser">
            <summary>
            Represents a user account in the system. Details
            about the user, including his/her contact details and login
            credentials can be found in the UserBase property, which
            is an OUserBase object.
            </summary>
            <summary>
            Represents a user account in the system. Details
            about the user, including his/her contact details and login
            credentials can be found in the UserBase property, which
            is an OUserBase object.
            </summary>
            <summary>
            Represents a user account in the system. Details
            about the user, including his/her contact details and login
            credentials can be found in the UserBase property, which
            is an OUserBase object.
            </summary>
        </member>
        <member name="M:LogicLayer.OUser.GetAllNonTenantSupporterUsers">
            --------------------------------------------------------------
            <summary>
            Returns a list of all non-tenant, supporter users in the system.
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OUser.GetListOfSupporters(LogicLayer.OUser)">
            <summary>
            Gets the list of supporters.
            </summary>
            <param name="requestor">The requestor.</param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.GetInstances(LogicLayer.OUser,System.String)">
            <summary>
            Gets the instances (ADMIN, MARCOM, OPS).
            </summary>
            <param name="requestor">The requestor.</param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.GetAllUsers">
            --------------------------------------------------------------
            <summary>
            Returns a list of all active users in the system.
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OUser.GetAllAccessibleBudgetGroup(System.String,System.Nullable{System.Guid})">
            <summary>
            
            </summary>
            <param name="objectType"></param>
            <param name="includingBudgetGroupId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.GetUsersByRoleAndAboveLocation(LogicLayer.OUser,System.Collections.Generic.List{LogicLayer.OLocation},System.String)">
            <summary>
            
            </summary>
            <param name="includedUser"></param>
            <param name="locations"></param>
            <param name="roleCode"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.GetUserByEmail(System.String)">
            <summary>
            
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.IsApprovalUser(LogicLayer.OActivity)">
            <summary>
            
            </summary>
            <param name="activity"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.TenantActivityList(System.Nullable{System.Guid})">
            <summary>
            
            </summary>
            <param name="tenantID"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.IsDuplicateUserEmail">
            --------------------------------------------------------------
            <summary>
            Looks in the database for any users with the same duplicate
            user email. Returns true if found, false 
            otherwise.
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OUser.GetAllNonTenantUsers">
            --------------------------------------------------------------
            <summary>
            Returns a list of all non-tenant users in the system.
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OUser.GetAllNonTenantUsersExceptSpecified(System.Nullable{System.Guid})">
            --------------------------------------------------------------
            <summary>
            Returns a list of all non-tenant users in the system,
            except the specified user ID.
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OUser.GetCaseRequestorsOrTenants(LogicLayer.OLocation)">
            <summary>
            Gets a list of case requestors, or tenants. 
            <para></para>
            For tenants, we first search all tenants in the specified
            location through their leases (lease status must be 'N'). 
            <para></para>
            If no tenants are found, then we show the full list of tenants.
            </summary>
            <param name="positions"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.ActivateAndSaveCurrentPositions">
            <summary>
            This method automatically activates the current position
            of the user based on the permanent position list and the
            temporary positions list. 
            <para>
            </para>
            It automatically inserts records directly into the UserPosition
            table using SQL.
            </summary>
        </member>
        <member name="M:LogicLayer.OUser.ActivateAndSaveCurrentPositions(System.Collections.Generic.List{System.Guid})">
            <summary>
            This method automatically activates the current position
            of the user based on the permanent position list and the
            temporary positions list. 
            <para>
            </para>
            It automatically inserts records directly into the UserPosition
            table using SQL.
            </summary>
            <param name="userIds"></param>
        </member>
        <member name="M:LogicLayer.OUser.SetNewPasswordForCapitaLand(System.String,System.Boolean)">
            <summary>
            Sets the new password of the user. This assumes
            </summary>
            <param name="newPassword"></param>
        </member>
        <member name="M:LogicLayer.OUser.Deactivated">
            <summary>
            Overrides the Deactivated method to deactivate invalid OUserPermanentPosition
            objects.
            </summary>
        </member>
        <member name="M:LogicLayer.OUser.Deactivating">
            --------------------------------------------------------------
            <summary>
            Deactivate the UserBase object as well
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OUser.GetRoles">
            --------------------------------------------------------------
            <summary>
            Get all available roles from the system.
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OUser.GetUserByLoginName(System.String)">
            --------------------------------------------------------------
            <summary>
            Load the user object by the login name.
            </summary>
            <param name="loginName"></param>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OUser.GetUsersByRole(System.String)">
            <summary>
            Gets a list of users by roles.
            </summary>
            <param name="positions"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.GetUsersByRoleAndAboveLocation(LogicLayer.OLocation,System.String)">
            <summary>
            Get a list of users with the specified role, and 
            tied to a location at or above the one specified.
            </summary>
            <param name="location"></param>
            <param name="roleCode"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.GetUsersByRoleAndAboveLocation(LogicLayer.OUser,LogicLayer.OLocation,System.String)">
            <summary>
            Get a list of users with the specified role, and 
            tied to a location at or above the one specified.
            If also adds the includedUser in the list, regardless
            of whether the user has been deleted or not.
            </summary>
            <param name="includedUser"></param>
            <param name="location"></param>
            <param name="roleCode"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.GetUsersByRoleAndBelowLocation(LogicLayer.OUser,LogicLayer.OLocation,System.String)">
            <summary>
            Get a list of users with the specified role, and 
            tied to a location at or below the one specified.
            </summary>
            <param name="includedUser"></param>
            <param name="location"></param>
            <param name="roleCode"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.GetUsersByPositions(System.Collections.Generic.List{LogicLayer.OPosition})">
            <summary>
            Gets a list of users by their positions.
            </summary>
            <param name="positions"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.GetUsersByPositionsAndCraft(System.Collections.Generic.List{LogicLayer.OPosition},LogicLayer.OCraft)">
            <summary>
            Gets a list of users by their positions.
            </summary>
            <param name="positions"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.GetUsersByPositionsAndCraft(System.Collections.Generic.List{LogicLayer.OPosition},LogicLayer.OCraft,System.Nullable{System.Guid})">
            <summary>
            Gets a list of users by their positions.
            </summary>
            <param name="positions"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.op_Implicit(LogicLayer.OUser)~System.Collections.Generic.List{LogicLayer.OUser}">
            <summary>
            Convert a single OUser object to a list of OUser object.
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.HasRole(System.String)">
            --------------------------------------------------------------
            <summary>
            Determines if the current user has been assigned the 
            specified role.
            </summary>
            <param name="roleId"></param>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OUser.GetPositionsByObjectTypeAndRoleCodes(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Gets a list of positions of this current user
            such that the roles of those positions
            have been granted access (regardless of read/write/view/delete)
            to the function of the specified objectType.
            </summary>
            <param name="objectType">The object type as defined in the OFunction</param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.GetPositionsByObjectType(System.String)">
            <summary>
            Gets a list of positions of this current user
            such that the roles of those positions
            have been granted access (regardless of read/write/view/delete)
            to the function of the specified objectType.
            </summary>
            <param name="objectType">The object type as defined in the OFunction</param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.GetRoleCodes">
            <summary>
            Gets an array list of role codes currently
            associated with this user.
            </summary>
            <returns></returns>
        </member>
        <member name="F:LogicLayer.OUser.cachedObjectType">
            <summary>
            A cache of the role functions loaded from the database.
            </summary>
        </member>
        <member name="M:LogicLayer.OUser.AllowAccess(System.String,System.String)">
            <summary>
            Checks if the user is allowed create/edit/delete/view 
            access to an object of the specified type.
            </summary>
            <param name="objectType"></param>
            <param name="access"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.AllowCreate(System.String)">
            <summary>
            Checks if the user is allowed to create an object 
            of the specified type.
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.AllowDeleteAll(System.String)">
            <summary>
            Checks if the user is allowed to create an object 
            of the specified type.
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.AllowEditAll(System.String)">
            <summary>
            Checks if the user is allowed to create an object 
            of the specified type.
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.AllowViewAll(System.String)">
            <summary>
            Checks if the user is allowed to create an object 
            of the specified type.
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.IncrementFailedLoginRetries">
            <summary>
            Increments the number of login retries. If the retries
            exceeds the maximum number of retries, then the user
            account will be banned.
            </summary>
        </member>
        <member name="M:LogicLayer.OUser.ClearLoginRetries">
            <summary>
            Sets the number of failed login retries to zero,
            and saves the user object.
            </summary>
        </member>
        <member name="M:LogicLayer.OUser.HasPasswordExpired">
            <summary>
            Checks if the current user's password has expired.
            </summary>
            <returns>Returns true if the password has expired,
            false otherwise.</returns>
        </member>
        <member name="M:LogicLayer.OUser.GetPasswordAge">
            <summary>
            Gets the user's current password age.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.IsPasswordOldEnoughToChange">
            <summary>
            Checks if the current user's password is old enough
            for the user to change.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUser.SetNewPassword(System.String,System.Boolean)">
            <summary>
            Sets the new password of the user. This assumes
            </summary>
            <param name="newPassword"></param>
        </member>
        <member name="M:LogicLayer.OUser.ResetPassword">
            <summary>
            Resets the user's password by auto-generating the password.
            Also e-mails the reset password to the user.
            </summary>
        </member>
        <member name="F:LogicLayer.OUser.characters">
            <summary>
            The different types of password characters.
            </summary>
        </member>
        <member name="M:LogicLayer.OUser.GenerateRandomPassword">
            <summary>
            Generates a random password.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OUser.isTenant">
            <summary>
            [Column]Gets or sets a flag to indicate that the user is tenant
            </summary>
        </member>
        <member name="P:LogicLayer.OUser.DelegatedToOthersPositions">
            <summary>
            Gets a one-to-many list of OUserTemporaryPosition objects that represents a list of 
            positions that are assigned to this user
            </summary>
        </member>
        <member name="P:LogicLayer.OUser.AssignedPositionNames">
            <summary>
            Returns a list of positions assigned to the users in text form.
            </summary>
        </member>
        <member name="P:LogicLayer.OUser.LanguageName">
            <summary>
            [Column] Gets or sets the language code that this user has selected 
            to be his/her default language when using the system. An example of 
            language codes are 'en-US', 'ja-JP', 'zh-CN', etc.
            </summary>
        </member>
        <member name="P:LogicLayer.OUser.ThemeName">
            <summary>
            [Column] Gets or sets the name of the theme this current user will
            see in the user interface when he or she uses the system.
            </summary>
        </member>
        <member name="P:LogicLayer.OUser.UserBaseID">
            <summary>
            [Column] Gets or sets the foreign key to the UserBase table that contains 
            a set of properties common for all users.
            </summary>
        </member>
        <member name="P:LogicLayer.OUser.SuperiorID">
            <summary>
            [Column] Gets or sets the foreign key to the User table that indicates 
            the superior of this current user.
            </summary>
        </member>
        <member name="P:LogicLayer.OUser.CraftID">
            <summary>
            [Column] Gets or sets the foreign key to the Craft table to indicate the 
            craft of this user. This must have a value if the current user has 
            'Technician' as one of its roles.
            </summary>
        </member>
        <member name="P:LogicLayer.OUser.IsPasswordChangeRequired">
            <summary>
            [Column] Gets or sets a flag to indicate that the user's 
            password must be changed during the next login.
            </summary>
        </member>
        <member name="P:LogicLayer.OUser.PasswordLastChanged">
            <summary>
            [Column] Gets or sets the date when password is last updated by user. 
            </summary>
        </member>
        <member name="P:LogicLayer.OUser.LoginRetries">
            <summary>
            [Column] Gets or sets the number of attempted and unsuccessful logins by user.
            </summary>
        </member>
        <member name="P:LogicLayer.OUser.IsBanned">
            <summary>
            [Column] Gets or sets a flag that indicates whether
            this user has been banned from the system.
            <para></para>
            This can be set manually by the user administrator, or
            it can be set when this user's failed login attempts
            exceeds the configured maximum.
            </summary>
        </member>
        <member name="P:LogicLayer.OUser.PasswordHistory">
            <summary>
            Gets a one-to-many list of OPassword objects that represents the list 
            of passwords that this user has created before.
            </summary>
        </member>
        <member name="P:LogicLayer.OUser.Positions">
            <summary>
            Gets a many-to-many list of OPosition objects that represents a list of 
            positions that are assigned to this user
            </summary>
        </member>
        <member name="P:LogicLayer.OUser.UserBase">
            <summary>
            Gets or sets the OUserBase object that represents an inherited record 
            containing a set of properties common for all users.
            </summary>
        </member>
        <member name="P:LogicLayer.OUser.Superior">
            <summary>
            Gets or sets the OUser object that represents the superior of this
            current user.
            </summary>
        </member>
        <member name="P:LogicLayer.OUser.Dashboards">
            <summary>
            Gets a one-to-many list of ODashboard objects that represents the list 
            of dashboards that this user has access to.
            </summary>
        </member>
        <member name="T:LogicLayer.TSurveyGroup">
            <summary>
            Summary discription for OSurveyGroup.
            </summary>
            <summary>
            Summary discription for OSurveyGroup.
            </summary>
        </member>
        <member name="T:LogicLayer.OSurveyGroup">
            <summary>
            Represents a survey group.
            </summary>
            <summary>
            Represents a survey group.
            </summary>
        </member>
        <member name="M:LogicLayer.OSurveyGroup.GetSurveyGroupByType(System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="IsContractMandatory"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OSurveyGroup.SurveyTargetType">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyGroup.DefaultSurveyChecklistID">
            <summary>
            [Column] Gets or sets the foreign key to the 
            Checklist object that indicates the default checklist for this survey object.
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyGroup.SurveyContractedVendor">
            <summary>
            [Column] Gets or sets the value that indicates that
            whether or not this survey is the survey for services 
            provided by contracted vendors.
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyGroup.SurveyContractedVendorEvaluatedByMA">
            <summary>
            [Column] Gets or sets the value that indicates that
            whether or not this survey is the survey for services 
            provided by contracted vendors evaluated by Managing Agents.
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyGroup.SurveyOthers">
            <summary>
            [Column] Gets or sets the value that indicates that
            whether or not this survey is the survey for other reasons.
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyGroup.ContractMandatory">
            <summary>
            [Column] Gets or sets the value that indicates that
            whether or not this survey is tied up with a specific contract.
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyGroup.EvaluatedPartyName">
            <summary>
            [Column] Gets or sets the name of the 
            evaluated party.
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyGroup.Checklist">
            <summary>
            Gets the OChecklist object that represents
            the checklist for this survey.
            </summary>
        </member>
        <member name="M:LogicLayer.OApplicationSetting.Saved">
            <summary>
            Overrides the saved method for this application domain
            to reflect the new settings immediately.
            <para></para>
            Application domains that this object was not saved in
            will not use the new settings until the application is
            restarted. For example, services and web applications in
            a server farm must be restarted manually in order for
            the new settings to take effect.
            </summary>
        </member>
        <member name="M:LogicLayer.OApplicationSetting.IsServiceEnabled(System.String)">
            <summary>
            Gets a flag indicating whether the service
            of the specified name is enabled.
            </summary>
            <param name="serviceName"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OApplicationSetting.GetServiceTimerInterval(System.String)">
            <summary>
            Gets the timer interval of the specified service.
            </summary>
            <param name="serviceName"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.DefaultBudgetSpendingPolicy">
            <summary>
            [Column] Gets or sets the future budget spending policy.
            <list>
                <item>0 - Disallow spending from budget periods that have not been created. </item>
                <item>1 - Allow spending from budget periods that have not been created. </item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.DefaultBudgetDeductionPolicy">
            <summary>
            [Column] Gets or sets at which point in time the budget is deducted.
            <list>
                <item>0 - Deducted at the point of submission of any purchase object. </item>
                <item>1 - Deducted at the point of approval of any purchase object. </item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.LocationTypeNameForBuildingActual">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.LoginControlsHorizontalAlignment">
            <summary>
            [Column] Gets or sets the horizontal alignment of the
            login controls.
            <list>
                <item>0 - Left </item>
                <item>1 - Center </item>
                <item>2 - Right </item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.LoginControlsVerticalAlignment">
            <summary>
            [Column] Gets or sets the horizontal alignment of the
            login controls.
            <list>
                <item>0 - Top </item>
                <item>1 - Middle </item>
                <item>2 - Bottom </item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.LoginTitle">
            <summary>
            Gets or sets a short title text to be displayed above
            the login controls.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.LoginLogo">
            <summary>
            Gets or sets the login logo image binary.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.HomePageUrl">
            <summary>
            Gets or sets the URL to the home page (the page that
            displays the inbox of tasks).
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.PasswordMinimumLength">
            <summary>
            [Column] Gets or sets the minimum length for the password.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.PasswordRequiredCharacters">
            <summary>
            [Column] Gets or sets the password type:
            0: password contains alphabet only. This setting is default.
            1: password contains both alphabet and number.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.PasswordMaximumTries">
            <summary>
            [Column] Gets or sets the maximum number of attempted logins.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.PasswordDaysToExpiry">
            <summary>
            [Column] Gets or sets the number of days to pass before user is required to update password. 
            Set to 0 to disable expiry check
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.PasswordMinimumAge">
            <summary>
            [Column] Gets or sets the number of days to pass before user can update password again.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.PasswordHistoryKept">
            <summary>
            [Column] Gets or sets the number of passwords in history to ensure difference from current password.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.NumberOfDaysToKeepMessageHistory">
            <summary>
            [Column Gets or sets the number of days to keep the message history
            before removing them. The message history is deleted whenever the
            a user logs on to the system.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.NumberOfDaysToKeepLoginHistory">
            <summary>
            [Column Gets or sets the number of days to keep the login history
            before removing them. The login history is deleted whenever the
            a user logs on to the system.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.NumberOfDaysToKeepBackgroundServiceLog">
            <summary>
            [Column Gets or sets the number of days to keep the background 
            service log before removing them. 
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.BaseCurrencyID">
            <summary>
            [Column] Gets or sets the foreign key of the
            base currency used by this instance of the system.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.DefaultNumberOfDaysInAdvanceToCreateFixedWorks">
            <summary>
            [Column] Gets or sets the default number of days
            in advance to create fixed works.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.DefaultTypeOfWorkID">
            <summary>
            [Column] Gets or sets the foreign key to the Code
            table that represents the default type of work
            that will be assigned to a Work object when it
            is first created.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.DefaultScheduledWorkTypeOfWorkID">
            <summary>
            [Column] Gets or sets the foreign key to the Code
            table that represents the default type of work
            that will be assigned to a Scheduled Work object when it
            is first created.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.EquipmentUnitOfMeasureID">
            <summary>
            [Column] Gets or sets the unit of measure used
            for identifying the default unit of measure
            for equipment catalogs in the Inventory Center. 
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.InventoryDefaultCostingType">
            <summary>
            [Column] Gets or sets the default costing type, 
            or the accounting method of an item of this catalogue in this store
            when an item is first checked in to the store.
            <para></para>
            	<list>
            		<item>0 / StoreItemCostingType.FIFO: First-in-first-out </item>
            		<item>1 / StoreItemCostingType.LIFO: Last-in-first-out</item>
            		<item>3 / StoreItemCostingType.StandardCosting: Standard costing</item>
            		<item>4 / StoreItemCostingType.AverageCosting: Average costing</item>
            	</list>
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.EnableEmail">
            <summary>
            [Columnn] Gets or sets a flag that indicates 
            whether e-mails will be sent out.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.EnableSms">
            <summary>
            [Column] Gets or sets a flag that indicates
            whether SMSes will be sent out.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.SMSSendType">
            <summary>
            [Column] Gets or sets a flag that indicates
            whether SMSes are direct from modem (0) 
            or relay to a web service (1).
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.SMSRelayWSURL">
            <summary>
            [Column] Gets or sets a flag that indicates
            SMSRelayWSURL that sms will send to
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.MessageNumberOfTries">
            <summary>
            [Column] Gets or sets the total number of tries
            the message service will try to send a failed
            message before giving up.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.MessageSmtpServer">
            <summary>
            [Column] Gets or sets the SMTP server address.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.MessageSmtpPort">
            <summary>
            [Column] Gets or sets the SMTP port.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.MessageSmtpRequiresAuthentication">
            <summary>
            [Column] Gets or sets a flag indicating whether the SMTP 
            server requires authentication before allow us to send e-mail
            through it.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.MessageSmtpServerUserName">
            <summary>
            [Column] Gets or sets the SMTP server user
            name used for server authentication.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.MessageSmtpServerPassword">
            <summary>
            [Column] Gets or sets the SMTP server password
            used for server authentication.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.MessageSmsComPort">
            <summary>
            [Column] Gets or sets the COM port in which the
            SMS modem is connected to.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.MessageSmsBaudRate">
            <summary>
            [Column] Gets or sets the SMS baud rate that
            the SMS modem will be communicating at.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.MessageSmsParity">
            <summary>
            [Column] Gets or sets the parity per byte 
            of information transferred.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.MessageSmsDataBits">
            <summary>
            [Column] Gets or sets the number of data bits
            in each byte of information transferred.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.MessageSmsStopBits">
            <summary>
            [Column] Gets or sets the stop bits per byte
            of information transferred.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.MessageSmsHandshake">
            <summary>
            [Column] Gets or sets the handshaking protocol.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.MessageSmsLocalNumberDigits">
            <summary>
            [Column] Gets or sets the number of digits for
            local numbers. When trying to send SMSes where the
            number of digits is not the same as this value, 
            the system will add a '+' sign to indicate that
            it is an overseas number.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.MessageSmsInitCommands">
            <summary>
            [Column] Gets or sets the SMS modem initialization
            AT commands, each separated by a semi-colon.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.MessageSmsSendCommands">
            <summary>
            [Column] Gets or sets the SMS modem AT command to
            send a message to a recipient through the {0} placeholder.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.MessageSmsReceiveCommands">
            <summary>
            [Column] Gets or sets the SMS modem AT command
            to read a message in the SIM card memory at an index 
            specified through the {0} placeholder.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.MessageSmsDeleteCommands">
            <summary>
            [Column] Gets or sets the SMS modem AT command
            to remove a read message in the SIM card memory at
            an index specified through the {0} placeholder.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.MessageSmsInitASCIICommand">
            <summary>
            [Column] Gets or sets the SMS modem AT command
            to set the modem's mode to send ASCII messages.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.MessageSmsInitUCS2Command">
            <summary>
            [Column] Gets or sets the SMS modem AT command
            to set the modem's mode to send UCS (Unicode) messages.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.MessageSmsNewLine">
            <summary>
            [Column] Gets or sets the string representing the
            new line character sent to/from the modem.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.MessageSmsLogFilePath">
            <summary>
            [Column] Gets or sets the log file path for SMS.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.MessageEmailSender">
            <summary>
            [Column] Gets or sets the e-mail address of the sender
            for all e-mails sent out by the Anacle.EAM system.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.SurveyURL">
            <summary>
            [Column] Gets or sets the url for performance survey.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.BaseCurrency">
            <summary>
            Gets the base currency used by this instance of the system.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.ApplicationSettingServices">
            <summary>
            Gets a list of OApplicationSettingService objects
            that represent that list of services applicable
            for this application.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.ApplicationSettingSmsKeywordHandlers">
            <summary>
            Gets a list of OApplicationSettingSmsKeywordHandler objects
            that represent the SMS keyword handlers applicable for
            this application.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.IsUsingActiveDirectory">
            <summary>
            [Column] Gets or sets a flag indicating that the system
            will use Active Directory to authenticate users when they
            log in.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.ActiveDirectoryDomain">
            <summary>
            [Column] Gets or sets the name for the Active Directory Domain
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.ActiveDirectoryPath">
            <summary>
            [Column] Gets or sets the LDAP path for the Active Directory Domain
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.BackgroundServiceAdminEmail">
            <summary>
            [Column] Gets or sets Background Service Administrator Email
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.ExcelReaderWebServiceURL">
            <summary>
            [Column] Gets or sets ExcelReaderWebService URL
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.ExcelReaderUseWebService">
            <summary>
            [Column] Indicate whether to use excel web service 
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSetting.Current">
            <summary>
            Loads the current application settings from the 
            database.
            </summary>
        </member>
        <member name="T:LogicLayer.TTaxCode">
            <summary>
            Summary description for OChecklist
            </summary>
            <summary>
            Summary description for OChecklist
            </summary>
        </member>
        <member name="T:LogicLayer.OTaxCode">
            <summary>
            Represents a tax code that stores information about the tax
            percentage that can be applied in an invoice by a vendor.
            </summary>
            <summary>
            Represents a tax code that stores information about the tax
            percentage that can be applied in an invoice by a vendor.
            </summary>
        </member>
        <member name="M:LogicLayer.OTaxCode.GetAllTaxCodes">
            <summary>
            Get all undeleted tax codes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OTaxCode.GetAllTaxCodes(System.Nullable{System.DateTime},System.Nullable{System.Guid})">
            <summary>
            Get all tax codes including the one with the specified ID.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OTaxCode.Description">
            <summary>
            [Column] Gets or sets the description of the tax code.
            </summary>
        </member>
        <member name="P:LogicLayer.OTaxCode.TaxPercentage">
            <summary>
            [Column] Gets or sets the tax percentage. The values must be within 
            0 to 100.
            </summary>
        </member>
        <member name="P:LogicLayer.OTaxCode.StartDate">
            <summary>
            [Column] Gets or sets the start date this
            tax code is valid for selection in an invoice.
            </summary>
        </member>
        <member name="P:LogicLayer.OTaxCode.EndDate">
            <summary>
            [Column] Gets or sets the end date this
            tax code is valid for selection in an invoice.
            </summary>
        </member>
        <member name="P:LogicLayer.OTaxCode.TaxNameAndDescription">
            <summary>
            Gets a string containing both the tax code's name
            and its description.
            </summary>
        </member>
        <member name="T:LogicLayer.TStoreBinReservation">
            <summary>
            </summary>
        </member>
        <member name="T:LogicLayer.OStoreBinReservation">
            <summary>
            Represents a reservation record raised by the Work 
            module to hold items from being checked out, so that 
            the Work module may consume and check-out these
            items at a later time.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreBinReservation.AdjustReservation(System.Decimal)">
            <summary>
            Adjust the reservation quantity.
            </summary>
            <param name="quantityToAdjust"></param>
        </member>
        <member name="P:LogicLayer.OStoreBinReservation.WorkCostID">
            <summary>
            [Column] Gets or sets the foreign key to the WorkCost table to indicate the WorkCost line item that resulted in this reservation.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBinReservation.StoreRequestItemID">
            <summary>
            [Column] Gets or sets the foreign key to the StoreRequest table to indicate the StoreRequest line item that resulted in this reservation.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBinReservation.StoreBinID">
            <summary>
            [Column] Gets or sets the foreign key to the StoreBin table to indicate the bin the reservation is made against.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBinReservation.CatalogueID">
            <summary>
            [Column] Gets or sets the foreign key to the Catalogue table to indicate the item to be reserved.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBinReservation.BaseQuantityRequired">
            <summary>
            [Column] Gets or sets the base quantity required by
            the Work.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBinReservation.BaseQuantityReserved">
            <summary>
            [Column] Gets or sets the base quantity eventually 
            reserved by the work. This must be less than or equals
            to the quantity required.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBinReservation.DateOfReservation">
            <summary>
            [Column] Gets or sets the system date/time at the point the 
            reservation was made.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBinReservation.DateOfUse">
            <summary>
            [Column] Gets or sets the expected date/time this item 
            is required for use in the Work.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBinReservation.WorkCost">
            <summary>
            Gets or sets the OWorkCost object that represents the 
            work cost line item that resulted in this reservation.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBinReservation.StoreRequestItem">
            <summary>
            Gets or sets the OStoreRequest object that represents the 
            Store Request line item that resulted in this reservation.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBinReservation.StoreBin">
            <summary>
            Gets or sets the OStoreBin object that represents the bin 
            this reservation is for. Note that the reservation must 
            identify both the store and the bin.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBinReservation.Catalogue">
            <summary>
            Gets or sets the OCatalogue object that represents the 
            item to be reserved.
            </summary>
        </member>
        <member name="T:LogicLayer.TScheduledWorkChecklist">
            <summary>
            Summary description for OVendor
            </summary>
        </member>
        <member name="T:LogicLayer.OScheduledWorkChecklist">
            <summary>
            Represents a sequence of checklists that will be assigned to the cycles 
            of Work objects created by the ScheduledWork object.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkChecklist.ScheduledWorkID">
            <summary>
            [Column] Gets or sets the foreign key to the ScheduledWork table 
            that indicates the scheduled work object that contains this 
            record.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkChecklist.ChecklistID">
            <summary>
            [Column] Gets or sets the foreign key to the Checklist table 
            that indicates the checklist that will be created for works
            in this cycle.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkChecklist.CycleNumber">
            <summary>
            [Column] Gets or sets the cycle number. From the user
            interface, this will be automatically numbered from 1
            to the total number of OScheduledWorkChecklist objects.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkChecklist.ScheduledWork">
            <summary>
            Gets or sets the OScheduled object that represents
            the scheduled work object that contains this 
            record.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkChecklist.Checklist">
            <summary>
            Gets or sets the OChecklist object that represents 
            the checklist that will be created for works
            in this cycle.
            </summary>
        </member>
        <member name="T:LogicLayer.ORequestForQuotationItem">
            <summary>
            Represents 
            </summary>
            <summary>
            Represents 
            </summary>
            <summary>
            Represents 
            </summary>
        </member>
        <member name="F:LogicLayer.ORequestForQuotationItem.OrderQuantity">
            <summary>
            Temp property OrderQuantity to store quantity order
            enter from the user.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.RequestForQuotationID">
            <summary>
            [Column] Gets or sets the foreign key to the RequestForQuotation table 
            that indicates the request for quotation object that contains
            this item.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.ItemNumber">
            <summary>
            [Column] Gets or sets the item number of this purchase
            request item.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.ItemType">
            <summary>
            [Column] Gets or sets a value that indicates the type
            this item belongs to.
            <para></para>
            <list>
              <item>0 - Material</item>
              <item>1 - Services</item>
              <item>2 - Others</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.ItemDescription">
            <summary>
            [Column] Gets or sets the description of this item.
            This description is filled up with the material's (catalogue)
            or service's (fixed rate) name. If ItemType = 2, however,
            this description is entered by the user manually through
            the user interface.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.CatalogueID">
            <summary>
            [Column] Gets or sets the foreign key to the Catalogue table 
            that indicates the material item requested.
            This is applicable if ItemType = 0.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.FixedRateID">
            <summary>
            [Column] Gets or sets the foreign key to the FixedRate table 
            that indicates the service item requested.
            This is applicable if ItemType = 1.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.UnitOfMeasureID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table 
            that indicates the unit of measure of this material
            or service. 
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.QuantityRequired">
            <summary>
            [Column] Gets or sets the quantity of the material
            or service ordered from the vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.PurchaseRequestItemID">
            <summary>
            [Column] Gets or sets the foreign key to the PurchaseRequestItem table 
            that indicates the purchase request item this purchase order
            item was copied from.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.ReceiptMode">
            <summary>
            [Column] Gets or sets the mode that this purchase order item should be
            received in.
            <list>
                <item>0 - Receive quantity </item>
                <item>1 - Receive dollar amount </item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.AwardedRequestForQuotationVendorItemID">
            <summary>
            [Column] Gets or sets the foreign key to the RequestForQuotationVendorItem table
            that represents the quotation line item that this awarded item was based on.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.AwardedVendorID">
            <summary>
            [Column] Gets or sets the foreign key to the Vendor table
            that represents the vendor that this line item is
            awarded to.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.CurrencyID">
            <summary>
            [Column] Gets or sets the foreign key to the Currency
            table that represents the currency that the awarded
            vendor is quoting in. 
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.QuantityProvided">
            <summary>
            [Column] Gets or sets the quantity provided by the
            vendor awarded this item.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.UnitPriceInSelectedCurrency">
            <summary>
            [Column] Gets or sets the awarded unit price of
            this item in the selected currency.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.UnitPrice">
            <summary>
            [Column] Gets or sets the awarded unit price of
            this item in base currency.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.UnitOfMeasure">
            <summary>
            Gets or sets the OCode object that represents
            the unit of measure of this material
            or service. 
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.Catalogue">
            <summary>
            Gets or sets the OCatalogue object that represents
            the material item requested.
            This is applicable if ItemType = 0.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.FixedRate">
            <summary>
            Gets or sets the OFixedRate object that represents
            the service item requested.
            This is applicable if ItemType = 1.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.AwardedRequestForQuotationVendorItem">
            <summary>
            Gets or sets the ORequestForQuotationVendor object that represents
            the quotation this awarded item in the request.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.AwardedVendor">
            <summary>
            Gets or sets the OVendor object that represents
            the vendor awarded this line item in the request.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.RequestForQuotation">
            <summary>
            Gets or sets the ORequestForQuotation object that represents 
            the request for quotation object that contains
            this item.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.PurchaseRequestItem">
            <summary>
            Gets or sets the OPurchaseRequestItem object that represents
            the purchase request item this request for quotation 
            item was copied from.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.Currency">
            <summary>
            Gets or sets the OCurrency object that represents the
            currency this line item is quoted in.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.ReceiptModeText">
            <summary>
            Gets the text of the mode of receipt for this
            purchase order item.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.ItemTypeText">
            <summary>
            Gets the localized text for the item type.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.PurchaseOrderItem">
            <summary>
            Gets the purcahse order item that this
            request for quotation item was copied to.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.CopiedFromObjectNumber">
            <summary>
            Gets the purchase request number that this
            request for quotation item was copied from.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.CopiedToObjectNumber">
            <summary>
            Gets the purchase order number that this
            request for quotation item was copied to.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.Subtotal">
            <summary>
            Gets the sub total awarded for this
            line item. The sub-total is the unit price (in base currency) 
            multiplied by the quantity provided.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.EstimatedUnitPrice">
            <summary>
            [Column] Gets or sets the EstimatedUnitPrice
            that indicates the purchase request that contains this item.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.AdditionalDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.RequestForQuotationItemLocation">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.EstimatedSubtotal">
            <summary>
            Gets the sub total awarded for this
            line item. The sub-total is the unit price (in base currency) 
            multiplied by the quantity provided.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.PurchaseOrderItems">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.ChargeAmount">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.RecoverableAmount">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.RecoverableAmountInSelectedCurrency">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.WorkID">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.Work">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.WorkCostID">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.WorkCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItem.CopiedFromWorkObjectNumber">
            <summary>
            Gets the work number
            that this request for quotation item was copied from.
            </summary>
        </member>
        <member name="M:LogicLayer.OReportField.TranslateControlType(System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="controlType"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OReportField.TranslateContextTree(System.Nullable{System.Int32})">
            <summary>
            This is for internal context tree translation. 
            No need to put into resource files.
            </summary>
            <param name="controlType"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OReportField.ResourceAssemblyName">
            <summary>
            Gets or sets the resource assembly name used to translate
            content in thec column.
            </summary>
        </member>
        <member name="P:LogicLayer.OReportField.ResourceName">
            <summary>
            Gets or sets the resource name used to translate
            content in thec column. For example, Resources.WorkflowStates.
            </summary>
        </member>
        <member name="T:LogicLayer.EnumReportControlType">
            <summary>
            
            </summary>
        </member>
        <member name="T:LogicLayer.EnumReportDataType">
            <summary>
            
            </summary>
        </member>
        <member name="T:LogicLayer.EnumReportContextTree">
            <summary>
            
            </summary>
        </member>
        <member name="T:LogicLayer.OEquipmentType">
            <summary>
            Represents an equipment type or a folder for containing equipment types.
            </summary>
        </member>
        <member name="M:LogicLayer.OEquipmentType.Saving">
            <summary>
            Overrides the Saving method to create a associated
            OCatalogue object or update its name and ParentID 
            if it exists.
            </summary>
        </member>
        <member name="M:LogicLayer.OEquipmentType.IsDeactivatable">
            <summary>
            Disallows delete if the EquipmentType is defined for an existing Equipment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OEquipmentType.Deactivating">
            <summary>
            Overrides the Deactivating method to deactivate
            the Catalog.
            </summary>
        </member>
        <member name="M:LogicLayer.OEquipmentType.IsCyclicalReference">
            <summary>
            Tests if the object's parent is a cyclical reference back
            to itself.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OEquipmentType.GetRootEquipmentTypes">
            <summary>
            Get all root codes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OEquipmentType.FindEquipmentType(System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OEquipmentType.HasDuplicateSpares(LogicLayer.OEquipmentTypeSpare)">
            <summary>
            Check if there are no equipment type spares. Returns true
            if there are, false otherwise.
            </summary>
            <param name="equipmentTypeSpare"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OEquipmentType.GetEquipmentTypeSparesAndQuantity(System.Nullable{System.Guid})">
            <summary>
            Get the list of equipment type spares in this equipment type,
            and all the quantity available of that item in the specified bin.
            </summary>
            <param name="storeBinId"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OEquipmentType.IsLeafType">
            <summary>
            [Column] Gets or sets a value that 
            indicates whether this is a leaf type.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipmentType.IsReportableType">
            <summary>
            [Column] Gets or sets a value that indicates whether
            equipment of this equipment type is used for reporting.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipmentType.CatalogueID">
            <summary>
            [Column] Gets or sets the foreign key to
            the Catalog table that indicates the
            catalog object associated with this
            equipment type. Note that the Catalog table also
            has a EquipmentTypeID foreign key that
            joins this EquipmentType table.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipmentType.RunningNumberCode">
            <summary>
            [Column] Gets or sets a running number code that 
            can be added to an Equipment if set up
            in the Running Number Generator.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipmentType.Children">
            <summary>
            Gets a one-to-many list of OEquipmentType
            objects that represents the next level
            equipment type under this current one.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipmentType.Parent">
            <summary>
            Gets or sets the OEquipmentType object 
            that represents the parent equipment 
            type this current one belongs under.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipmentType.Equipment">
            <summary>
            Gets a one-to-many list of OEquipment
            objects that represents the list of
            equipment that associated with this
            equipment type.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipmentType.EquipmentTypePoints">
            <summary>
            Gets a one-to-many list of 
            OEquipmenTypePoint objects that 
            represents the list of points 
            associated with this equipment type.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipmentType.EquipmentTypeSpares">
            <summary>
            Gets a one-to-many list of 
            OEquipmentTypeSpare objects that 
            represents the list of spares associated 
            with this equipment type.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipmentType.Catalog">
            <summary>
            Gets the catalog object that is associated to this 
            equipment type object. This property always returns
            a valid Catalog object.
            </summary>
        </member>
        <member name="T:LogicLayer.TBudget">
            <summary>
            Summary description for OBudget
            </summary>
            <summary>
            Summary description for OBudget
            </summary>
        </member>
        <member name="M:LogicLayer.OBudget.IsDeactivatable">
            <summary>
            Disallows deactivation if there is at least one
            budget period in this budget.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudget.GetAllBudgets(System.Nullable{System.Guid})">
            <summary>
            Gets a list of all budgets in the system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudget.GetAccessibleBugets(LogicLayer.OUser,System.Nullable{System.Guid},System.String)">
            <summary>
            Gets a list of all accessible budgets.
            </summary>
            <param name="user"></param>
            <param name="includingBudgetId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudget.GetBudgetsByLocationID(System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Gets a list of budgets at or under the location of the specified
            location ID.
            </summary>
            <param name="locationId"></param>
            <param name="includingBudgetId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudget.GetAccessibleBudgetIDs(LogicLayer.OUser,System.String)">
            <summary>
            Gets a list of budget IDs accessible by the specified user.
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudget.GetAccessibleBudgetIDs(LogicLayer.OLocation)">
            <summary>
            Gets a list of budget IDs accessible under the specified location.
            </summary>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudget.GetCoveringBudgetIDs(System.Collections.Generic.List{LogicLayer.OLocation})">
            <summary>
            Gets a list of budget IDs that cover *at least one* of
            the specified list of locations.
            </summary>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudget.GetCoveringBudgetIDs(LogicLayer.OLocation)">
            <summary>
            Gets a list of budget IDs that cover the specified location.
            </summary>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudget.GetCoveringBudgets(LogicLayer.OLocation,System.Nullable{System.Guid})">
            <summary>
            Gets a list of budget objects that cover the selected location.
            </summary>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudget.GetCoveringBudgets(System.Collections.Generic.List{LogicLayer.OLocation},System.Nullable{System.Guid})">
            <summary>
            Gets a list of budget objects that cover *at least one* of 
            the selected list of locations.
            </summary>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudget.GetBudgetsByListOfLocations(System.Collections.Generic.List{LogicLayer.OLocation})">
            <summary>
            Gets a list of budgets at or under the specified
            list of locations.
            </summary>
            <param name="locations"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudget.GetCoveringBudgets(LogicLayer.OLocation,System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Gets a list of budget objects that cover the selected location.
            </summary>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OBudget.DefaultNumberOfMonthsPerBudgetPeriod">
            <summary>
            [Column] Gets or sets the number of months a
            budget period under this budget is valid for. 
            The default is 12.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudget.DefaultNumberOfMonthsPerInterval">
            <summary>
            [Column] Gets or sets the number of months
            an interval in a budget period.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudget.BudgetSpendingPolicy">
            <summary>
            [Column] Gets or sets the future budget spending policy.
            <list>
                <item>0 - Disallow spending from budget periods that have not been created. </item>
                <item>1 - Allow spending from budget periods that have not been created. </item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OBudget.BudgetDeductionPolicy">
            <summary>
            [Column] Gets or sets at which point in time the budget is deducted.
            <list>
                <item>0 - Deducted at the point of submission of any purchase object. </item>
                <item>1 - Deducted at the point of approval of any purchase object. </item>
            </list>
            </summary>
        </member>
        <member name="T:LogicLayer.TStoreRequest">
            <summary>    
            </summary>
        </member>
        <member name="T:LogicLayer.OStoreRequest">
            <summary>
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreRequest.ClearReservations">
            --------------------------------------------------------------
            <summary>
            Lock and unreserve all store items currently set up in the 
            store request
            
            Once this method is called, the application should not 
            update the store request anymore.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OStoreRequest.ValidateSufficientItemsForRequest">
            <summary>
            Validates if there are sufficient items in the store for check-out before
            committing the checkout. Returns true if there are sufficient items in the
            store, false, if at least one item is insufficient.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreRequest.ValidateSufficientItemForRequest(LogicLayer.OStoreRequestItem)">
            <summary>
            Validates if this item has sufficient amount for reserve/checkout.
            Returns true if there are sufficient items in the
            store, false, if it is insufficient.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreRequest.ValidateReturnAmount">
            <summary>
            Validates if the return amount exceed requested amount
            false, if at least one item is not valid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreRequest.ValidateReturnAmount(LogicLayer.OStoreRequestItem)">
            <summary>
            Validates if the return amount exceed requested amount
            false, if at least one item is not valid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreRequest.ValidateBinsNotLocked">
            <summary>
            Validates that none of the bins are locked.
            <para></para>
            Returns a list of store bins that are locked.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreRequest.HasDuplicateRequestItem(LogicLayer.OStoreRequestItem)">
            <summary>
            Check if there is a duplicate item in the list check-out items. An
            item is duplicate if another item with the same selected Catalogue and Bin
            is in the list.
            
            Returns false if no duplicates are found.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreRequest.ReserveItems">
            <summary>
            Reserve all items in this request.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreRequest.CheckOutItems">
            <summary>
            Check out all items in this request.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreRequest.ReturnItems">
            <summary>
            Returns items into the store.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreRequest.TaskLocations">
            <summary>
            Gets the list of locations associated with this task.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreRequest.TaskAmount">
            <summary>
            Gets the total amount of items that are to be checked in.
            </summary>
        </member>
        <member name="T:LogicLayer.TBudgetVariationLog">
            <summary>
            Created by TVO
            </summary>
            <summary>
            Created by TVO
            </summary>
        </member>
        <member name="T:LogicLayer.OBudgetVariationLog">
            <summary>
            Represents a variation log on the budget.
            </summary>
            <summary>
            Represents a variation log on the budget.
            </summary> 
        </member>
        <member name="M:LogicLayer.OBudgetVariationLog.SetBudgetVariationLogsStatusByRequestForQuotationID(System.Guid,System.Int32)">
            <summary>
            Sets the purchase budget transaction log's transaction types.
            </summary>
            <param name="purchaseBudgets"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetVariationLog.ClearBudgetVariationLogsByRequestForQuotationID(System.Guid)">
            <summary>
            Deactivates all budget transactions that belongs
            to the specified itemNumber, but it does not
            transfer the amount back to the originating
            purchase document.
            <para></para>
            This method is called when (a) an RFQ is rejected
            or closed, (b) a PO is rejected or closed, (c)
            an Invoice is rejected.
            </summary>
            <param name="purchaseBudgets"></param>
            <param name="itemNumber"></param>
        </member>
        <member name="P:LogicLayer.OBudgetVariationLog.VariationType">
            <summary>
            [Column] Gets or sets the type of variation.
            <list>
                <para>1 - Adjustment </para>
                <para>2 - Reallocation </para>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetVariationLog.BudgetID">
            <summary>
            [Column] Gets or sets the budget that this variation
            applies to.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetVariationLog.BudgetPeriodID">
            <summary>
            [Column] Gets or sets the budget period that this variation
            applies to.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetVariationLog.AccountID">
            <summary>
            [Column] Gets or sets the account that this variation
            applies to.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetVariationLog.IntervalNumber">
            <summary>
            [Column] Gets or sets the interval number of the budget period
            that this variation applies.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetVariationLog.VariationAmount">
            <summary>
            [Column] Gets or sets the value to adjust the budget by.
            A positive value indicates an variation upward, a negative
            value indicates an variation downward.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetVariationLog.DateOfVariation">
            <summary>
            [Column] Gets or sets the date the variation was committed.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetVariationLog.BudgetReallocationID">
            <summary>
            [Column] Gets or sets the foreign key to the 
            BudgetReallocation table that indicates the budget
            reallocation record that committed this variation.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetVariationLog.BudgetAdjustmentID">
            <summary>
            [Column] Gets or sets the foreign key to the 
            BudgetAdjustment table that indicates the budget
            adjustment record that committed this variation.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetVariationLog.RequestForQuotationID">
            <summary>
            [Column] Gets or sets the foreign key to the 
            RequestForQuotation table that indicates the budget
            adjustment record that committed this variation.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetVariationLog.VariationStatus">
            <summary>
            [Column] Gets or sets the status of variation.
            <list>
                <para>1 - Pending </para>
                <para>2 - Reallocation </para>
            </list>
            </summary>
        </member>
        <member name="T:LogicLayer.BudgetVariationType">
            <summary>
            Represents the different types of transactions.
            </summary>
        </member>
        <member name="T:LogicLayer.TPointTrigger">
            <summary>
            Summary description for OLocationType
            </summary>
        </member>
        <member name="M:LogicLayer.OPointTrigger.IsDeactivatable">
            <summary>
            Disallow delete if:
            <para></para>
            1. There is at least one point or one OPCAEEvent
            that uses this point trigger.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OLocationTypePoint.IsIncreasingMeterText">
            <summary>
            Gets the text indicating whether this point is
            an increasing meter.
            </summary>
        </member>
        <member name="T:LogicLayer.ONotification">
            <summary>
            </summary>
        </member>
        <member name="M:LogicLayer.OBackgroundServiceLog.ClearLogHistory(System.DateTime)">
            <summary>
            Deletes messages from the background service log table older than 
            n number of days, where n is a value set up in the Application Settings.
            </summary>
        </member>
        <member name="T:LogicLayer.TablesLogic">
            <summary>
            Contains all the declarations to instantiate the Schema classes.
            </summary>
            <summary>
            Contains all the declarations to instantiate the Schema classes.
            </summary>
            <summary>
            Contains all the declarations to instantiate the Schema classes.
            </summary>
            <summary>
            Contains all the declarations to instantiate the Schema classes.
            </summary>
        </member>
        <member name="T:Pop3.Pop3Credential">
            <summary>
            Summary description for Credentials.
            </summary>
        </member>
        <member name="T:LogicLayer.ORFQBudgetReallocationTo">
            <summary>
            Represents the money that will be reallocated from the specified
            budget account.
            </summary>
        </member>
        <member name="P:LogicLayer.ORFQBudgetReallocationTo.RFQBudgetReallocationToPeriodID">
            <summary>
            [Column] Gets or sets the foreign key to the 
            budget reallocation record that this detail belongs under.
            </summary>
        </member>
        <member name="P:LogicLayer.ORFQBudgetReallocationTo.AccountID">
            <summary>
            [Column] Gets or sets the budget account that this
            money is reallocated from.
            </summary>
        </member>
        <member name="P:LogicLayer.ORFQBudgetReallocationTo.Interval01Amount">
            <summary>
            [Column] Gets or sets the amount to reallocate in one of
            the 36 intervals in the budget period.
            </summary>
        </member>
        <member name="P:LogicLayer.ORFQBudgetReallocationTo.TotalAmount">
            <summary>
            [Column] Gets or sets the total amount reallocationed.
            </summary>
        </member>
        <member name="T:LogicLayer.TLocation">
            <summary>
            Summary description for OLocationType
            </summary>
            <summary>
            Summary description for OLocationType
            </summary>
            <summary>
            Summary description for OLocationType
            </summary>
        </member>
        <member name="M:LogicLayer.TLocation.GetAccessibleLocationCondition(LogicLayer.OUser,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Generates a condition that filters the location by the
            list of accessible location based on the the user's
            role name code.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LogicLayer.OLocation">
            <summary>
            Represents a location or a folder of locations. 
            The location is a hierarchical structure that may
            contain the top level location and its break down of
            sub locations. For example, a building as a top level
            property may be broken down into levels, and each
            level may then be broken down further into rooms and units.
            </summary>
        </member>
        <member name="M:LogicLayer.OLocation.IsDeactivable">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OLocation.GetLocationsByType(System.String,System.Boolean,System.Collections.Generic.List{LogicLayer.OPosition},System.Nullable{System.Guid})">
            <summary>
            Get all Location by type.
            </summary>
            <param name="typeName"></param>
            <param name="currentLocID"></param>
            <param name="includeInactiveLocation"></param>
            <param name="positions"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OLocation.GetEquipmentByEquipmentType(LogicLayer.OEquipmentType)">
            <summary>
            Get a list of equipment under the current location that are of
            a specified type
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OLocation.IsDeactivatable">
            <summary>
            Disallow delete if:
            1. There is at least one equipment tied to this location,
            2. There is at least one work tied to this location.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OLocation.Deactivating">
            <summary>
            Removes the attached store (as an issue location).
            </summary>
        </member>
        <member name="M:LogicLayer.OLocation.IsCyclicalReference">
            <summary>
            Tests if the object's parent is a cyclical reference back
            to itself.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OLocation.IsDuplicatePoint(LogicLayer.OPoint)">
            <summary>
            Validates that there is no other point with the same name and under here
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OLocation.Saving">
            <summary>
            Overrides the Saving method to automatically create
            a new Store (StoreType = Issue Location).
            </summary>
        </member>
        <member name="M:LogicLayer.OLocation.GetRootLocation">
            <summary>
            Get root location.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OLocation.FindLocation(System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OLocation.GetLocationByLocationType(LogicLayer.OLocationType)">
            <summary>
            Get a list of locations under the current location by a specified
            location type
            </summary>
            <param name="?"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OLocation.GetEquipmentTypes">
            <summary>
            Get a distinct list of equipment types under the current 
            location.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OLocation.GetLocationTypes">
            <summary>
            Get a distinct list of location types under the current 
            location.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OLocation.GetListOfApplicableContractToBeSurveyed(System.Nullable{System.Guid},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            
            </summary>
            <param name="SurveyGroupID"></param>
            <param name="PerformancePeriodFromInclusive"></param>
            <param name="PerformancePeriodToExclusive"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OLocation.GetPointsAndReadings">
            <summary>
            Get latest reading  under the current location.
            </summary>
            <param></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OLocation.GetOPCAEEvent">
            <summary>
            Get latest OPC AE Event  under the current location.
            </summary>
            <param></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OLocation.GetLocationByPath(System.String)">
            <summary>
            Extract LocationID from location hierachy string
            </summary>
            <param name="path"></param>
            <returns>Guid</returns>
        </member>
        <member name="M:LogicLayer.OLocation.IsLocationInList(LogicLayer.OLocation,System.String[],System.Int32)">
            <summary>
            Check if the location in the hierachy string
            </summary>
            <param name="loc"></param>
            <param name="strList"></param>
            <param name="locLevel"></param>
            <returns>Boolean</returns>
        </member>
        <member name="M:LogicLayer.OLocation.CreatePoints">
            <summary>
            Automatically create and add points
            based on the point templates set up in the
            location type.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.IsActiveText">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.FromAmosText">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.ParentPath">
            <summary>
            Returns the parent's name concatenated with this object's 
            name.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.RunningNumberCode">
            <summary>
            [Column] Gets or sets the running number prefix
            of this location.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.LocationTypeID">
            <summary>
            [Column] Gets or sets the foreign key to
            the LocationType table.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.IsPhysicalLocation">
            <summary>
            [Column] Gets or sets a value that indicates whether
            this is a folder or a physical location.
            <para></para>
            	<list>
            		<item>0 ?Folder</item>
            		<item>1 ?Physical Location</item>
            	</list>
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.LifeSpan">
            <summary>
            [Column] Gets or sets the lifespan of the location in
            number of years. This is applicable only if
            IsPhysicalLocation = 1.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.DateOfOwnership">
            <summary>
            [Column] Gets or sets the date the property was 
            acquired. This is applicable only if IsPhysicalLocation = 1.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.PriceAtOwnership">
            <summary>
            [Column] Gets or sets the price of the property when 
            it was acquired. This is applicable only if 
            IsPhysicalLocation = 1.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.GrossFloorArea">
            <summary>
            [Column] Gets or sets the gross floor area of the location
            in square meters. This is applicable only
            if IsPhysicalLocation = 1.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.NetLettableArea">
            <summary>
            [Column] Gets or sets the net lettable area of the
            location in square meters. This is applicable only if
            IsPhysicalLocation = 1.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.AddressCountry">
            <summary>
            [Column] Gets or sets the address of the location.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.AddressState">
            <summary>
            [Column] Gets or sets the address of the location.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.AddressCity">
            <summary>
            [Column] Gets or sets the address of the location.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.Address">
            <summary>
            [Column] Gets or sets the address of the location.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.CoordinateLeft">
            <summary>
            [Column] Gets or sets the left-coordinate of the
            location on the map.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.CoordinateRight">
            <summary>
            [Column] Gets or sets the top-coordinate of the
            location on the map.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.Children">
            <summary>
            Gets a list of OLocation objects representing the locations
            below this current one.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.Parent">
            <summary>
            Gets or sets the parent location of this current location.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.Equipment">
            <summary>
            Gets a list of OEquipment objects that exist in this 
            current location.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.Point">
            <summary>
            Gets a list of OPoint objects that exist in this 
            current location.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.Reading">
            <summary>
            Gets a list of OPoint objects that exist in this 
            current location.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.LocationType">
            <summary>
            Gets or sets the OLocationType object representing 
            the type of this current location.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.OPCAEEvents">
            <summary>
            Gets or sets the OOPCAEEvent object representing 
            the type of this current location.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocation.FastPath">
            <summary>
            Gets the path of the location by executing a database
            query against the database.
            </summary>
        </member>
        <member name="M:LogicLayer.Email.GetPOP3Mail">
            <summary>
            Gets POP3 email.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.Email.TrustAllCertificates(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Method to trust all certificates
            </summary>
            <param name="obj"></param>
            <param name="certificate"></param>
            <param name="chain"></param>
            <param name="errors"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.Email.GetExchange2007Email">
            <summary>
            Gets e-mail using Exchange 2007.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OVendorEvaluationChecklistItem.VendorEvaluationID">
            <summary>
            [Column] Gets or sets the foreign key to the Work table 
            that indicates the work that contains this checklist item.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorEvaluationChecklistItem.StepNumber">
            <summary>
            [Column] Gets or sets the step number of this checklist item.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorEvaluationChecklistItem.ChecklistType">
            <summary>
            [Column] Gets or sets a value that indicates the item type
            of this checklist.
            <para></para>
            <list>
            <item>0 - Choice: the user can select the response from a list of choices</item>
            <item>1 - Remarks: the user can input remarks</item>
            <item>2 - None: the user need not input any remarks or select any response.</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorEvaluationChecklistItem.ScoreDenominator">
            <summary>
            [Column] Gets or sets the score denominator of this
            checklist item. 
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorEvaluationChecklistItem.SelectedResponseID">
            <summary>
            [Column] Gets or sets the foreign key to the WorkChecklistItemResponse table 
            that indicates the response selected by the assigned technician
            or contractor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorEvaluationChecklistItem.Description">
            <summary>
            [Column] Gets or sets the description of action or inspection
            that the assigned users must perform as part of the checklist.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorEvaluationChecklistItem.VendorEvaluation">
            <summary>
            Gets or sets the OWork object that represents the work
            object that this checklist item is attached to.
            </summary>
        </member>
        <member name="T:LogicLayer.ORequestForQuotation">
            <summary>
            Represents a request for quotation that can be used to gather
            quotations from vendors.
            </summary>
            <summary>
            Represents a request for quotation that can be used to gather
            quotations from vendors.
            </summary>
            <summary>
            Represents a request for quotation that can be used to gather
            quotations from vendors.
            </summary>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ValidateRFQLineItemsNotGeneratedToPOforCCL(System.Collections.Generic.List{System.Guid})">
            <summary>
            Validates that the list of RFQ line item numbers and descriptions 
            that have not been generated into POs.
            </summary>
            <param name="purchaseRequestItemIds"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.CreateRFQFromWork(LogicLayer.OWork,System.Int32)">
            <summary>
            
            </summary>
            <param name="w"></param>
            <param name="rfqType"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.CreateRFQFromWorkCosts(System.Collections.Generic.List{LogicLayer.OWorkCost})">
            <summary>
            
            </summary>
            <param name="workCosts"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ListOfSupporters">
            <summary>
            Lists the of supporters.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.SendEmailToSupporters(System.String,LogicLayer.EnumSupportStatus)">
            <summary>
            
            </summary>
            <param name="messageTemplateCode"></param>
            <param name="triggeringEventName"></param>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.IsSupported">
            <summary>
            Determines whether this WJ is supported.
            </summary>
            <returns>
              <c>true</c> if this WJ is supported; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ResetSupporters">
            <summary>
            Workflow Policy: reset supporters status.
            </summary>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.Approve_Supporter">
            <summary>
            Workflow Policy: Set isApproved to 1
            </summary>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.CRVTenderAwardedRFQUpdateCRVVendor">
            <summary>
            Update the CRV Vendor Awarded Date
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.WJDetails(LogicLayer.ORequestForQuotation)">
             <summary>
            
             </summary>
             <param name="o"></param>
             <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.WJApprovers(LogicLayer.ORequestForQuotation)">
             <summary>
            
             </summary>
             <param name="o"></param>
             <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.WJQuotations(LogicLayer.ORequestForQuotation)">
             <summary>
            
             </summary>
             <param name="o"></param>
             <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.WJLineItems(LogicLayer.ORequestForQuotation)">
             <summary>
            
             </summary>
             <param name="o"></param>
             <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.WJBudgetSummaries(LogicLayer.ORequestForQuotation)">
             <summary>
            
             </summary>
             <param name="o"></param>
             <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.UpdateBudgetAmount">
            <summary>
            Method to update budget amount
            </summary>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ComputeLowestQuotation">
            <summary>
            Computes the lowest quotation and updates the value to all
            the quotations, so that we can compute the percentage difference.
            </summary>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.IsEqualReallocateAmount(System.String@)">
            <summary>
            Check the sub-total of each From Budget Period is equal to the sub-total Of the corresponding to Budget period
            and vice versa
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.IsReallocateAcrossBudgetPeriod(System.String@)">
            <summary>
            Check the Total Of From Budget Items is equal to Total Of To Budget Items
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.CreateRFQFromPRLineItemsWithBudget(System.Collections.Generic.List{LogicLayer.OPurchaseRequestItem})">
            --------------------------------------------------------------
            <summary>
            Create a single RFQ from a set of WJ line items and saves the
            RFQ into the database.
            </summary>
            <param name="prLineItems"></param>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.AddRFQLineItemsFromPRLineItemsWithBudget(LogicLayer.ORequestForQuotation,System.Collections.Generic.List{LogicLayer.OPurchaseRequestItem})">
            --------------------------------------------------------------
            <summary>
            Add a set of WJ items into an RFQ.
            </summary>
            <param name="items"></param>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.FindRFQBudgetReallocationToByAccountId(LogicLayer.ORFQBudgetReallocationToPeriod,System.Guid)">
            <summary>
            Find that the specified account ID
            in the list of amounts in this temp rfq budget reallocation to.
            </summary>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ComputeBudgetReallocationToPeriods">
            <summary>
            Computes the temporary list of BudgetReallocationTos
            summaries.
            </summary>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.FindRFQBudgetReallocationFromPeriod(System.Guid,System.Guid)">
             <summary>
            
             </summary>
             <param name="budgetId"></param>
             <param name="budgetPeriodId"></param>
             <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ValidateSufficientBudgetWithBudgetReallocation">
            <summary>
            Validates that there is sufficient amount in the budgets
            for the deduction.
            </summary>
            <returns>Returns a string of a list of budget periods and accounts
            that are insufficient. Returns an empty string otherwise.
            </returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.CheckSufficientAvailableAmountForReallocation">
            <summary>
            Checks for all available budgeted amount for the budget item should
            not be less than 0 after the reallocation (of both from)
            And make sure the item has not been inactivated
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.SubmitForApprovalForCapitaland">
            <summary>
            Submits for Request for Quotation for approval by doing: <br/>
            1. Creates the budget transaction logs. <br/>
            2. Creates the budget summaries and stamp them with the current
            budget available balance. <br/>
            <para></para>
            This method is called from the RFQ workflow after. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.CreateBudgetVariationLogs">
             <summary>
            
             </summary>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ApproveForCapitaland">
            <summary>
            Approves the Request for Quotation by doing the following:<br/>
            1. Update all budget transactions to indicated Approved.<br/>
            2. Create budget summaries if not already created.<br/>
            3. Stamp budget summaries with current budget balance at approval.<br/>
            <para></para>
            This method is called from the workflow. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.RejectForCapitaland">
            <summary>
            Rejects the Request for Quotation by doing the following:
            1. Cancels all budget transactions.
            2. Clears all budget summaries.
            <para></para>
            This method is called from the workflow. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.CancelForCapitaland">
            <summary>
            Cancels the Request for Quotation by doing the following:
            1. Unlink all RFQ line items from the WJ line items.
            2. Cancel all budget transactions.
            <para></para>
            This method is called from the RFQ workflow after. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.UpdateBudgetSummaryWithReallocation">
             <summary>
            
             </summary>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ValidateBudgetSpendingPolicy">
            <summary>
            Validates that the budget spending policy is adhered to, that is,
            budgets can be spent or not if they are not yet created for
            a finacial period.
            <para></para>
            Returns a list of budgets that failed because budget periods
            are not available.
            </summary>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.UpdateBudgetReallocation">
             <summary>
            
             </summary>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ComputeFromBudgetSummary">
             <summary>
            
             </summary>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.Clone">
            <summary>
            Clones a RFQ object. The budget distribution, however, is not cloned.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.UpdateLineItemsToRFQVendors(LogicLayer.ORequestForQuotationItem)">
             <summary>
            
             </summary>
             <param name="item"></param>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.RemoveLineItemsFromRFQVendors(LogicLayer.ORequestForQuotationItem)">
             <summary>
            
             </summary>
             <param name="item"></param>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ValidateBudgetAmountEqualsLineItemAmount">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.CreateChildRFQs">
             <summary>
            
             </summary>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.CreateRFQFromGroupRFQ(LogicLayer.ORequestForQuotation)">
             <summary>
            
             </summary>
             <param name="rfq"></param>
             <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ValidateReallocationAcrossGroups">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.IsNull(System.Nullable{System.Decimal},System.Decimal)">
             <summary>
            
             </summary>
             <param name="val"></param>
             <param name="defaultValue"></param>
             <returns></returns>
        </member>
        <member name="F:LogicLayer.ORequestForQuotation.tempPurchaseBudgetSummaries">
            <summary>
            A cached copy of the budget summary table that
            can be queried from the database
            </summary>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.Saving">
            --------------------------------------------------------------
            <summary>
            Called just before the object is saved.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ComputeTempBudgetSummaries">
            <summary>
            Computes the temporary list of budget
            summaries.
            </summary>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.SubmitForApproval">
            <summary>
            Submits for Request for Quotation for approval by doing: <br/>
            1. Creates the budget transaction logs. <br/>
            2. Creates the budget summaries and stamp them with the current
            budget available balance. <br/>
            <para></para>
            This method is called from the RFQ workflow after. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.Approve">
            <summary>
            Approves the Request for Quotation by doing the following:<br/>
            1. Update all budget transactions to indicated Approved.<br/>
            2. Create budget summaries if not already created.<br/>
            3. Stamp budget summaries with current budget balance at approval.<br/>
            <para></para>
            This method is called from the workflow. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.Reject">
            <summary>
            Rejects the Request for Quotation by doing the following:
            1. Cancels all budget transactions.
            2. Clears all budget summaries.
            <para></para>
            This method is called from the workflow. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.Cancel">
            <summary>
            Cancels the Request for Quotation by doing the following:
            1. Unlink all RFQ line items from the WJ line items.
            2. Cancel all budget transactions.
            <para></para>
            This method is called from the RFQ workflow after. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.Close">
            <summary>
            Closes the Request for Quotation by doing the following: <br/>
            1. Cancels all budget transactions. <br/>
            <para></para>
            This method is called from the workflow. It should
            not be called by the developer directly.
            </summary>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.Deactivating">
            --------------------------------------------------------------
            <summary>
            Deactivate all purchase request line items, when this
            purchase request is deactivated.
            <para></para>
            Then, releases all budgets.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ReorderItems(LogicLayer.ORequestForQuotationItem)">
            --------------------------------------------------------------
            <summary>
            Re-order the list of items in the checklist response set.
            </summary>
            <param name="i"></param>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.IsDuplicateVendorID(System.Guid)">
            --------------------------------------------------------------
            <summary>
            Check if the vendor ID is duplicate in the list of
            RequestForQuotationVendors
            </summary>
            <param name="vendorId"></param>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.IsDuplicateVendor(LogicLayer.ORequestForQuotationVendor)">
            <summary>
            Check if the vendor is duplicate in the list of
            RequestForQuotationVendors
            </summary>
            <param name="rfqVendor"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.GetVendorsWithSubmittedQuotations">
            <summary>
            Gets a list of vendors who have submitted quotations.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.AwardLineItemsToVendor(System.Guid,System.Collections.Generic.List{System.Guid},System.Nullable{System.DateTime})">
            <summary>
            Awards the specified line items to the vendor.
            </summary>
            <param name="vendorId"></param>
            <param name="rfqItemIds"></param>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ClearAwardLineItems(System.Collections.Generic.List{System.Guid})">
            <summary>
            Clears the line items award.
            </summary>
            <param name="rfqItemIds"></param>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.HasBeenAwarded">
            <summary>
            Gets a flag indicating if any of the items in the
            in the quotation has been awarded.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.CreateRequestForQuotationVendorItems(LogicLayer.ORequestForQuotationVendor)">
            <summary>
            Adds items into the vendor quotation based on
            items defined in the request for quotation.
            </summary>
            <param name="rfqVendor"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.CreateRequestForQuotationVendor(System.Nullable{System.Guid})">
            <summary>
            Create a new request for quotation object, and copy all
            RFQ line items to the RequestForQuotationVendorItems
            </summary>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.CreateRFQFromPRs(System.Collections.Generic.List{System.Guid})">
            --------------------------------------------------------------
            <summary>
            Create a single RFQ from a set of PRs
            </summary>
            <param name="prIds"></param>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.CreateRFQFromPRLineItems(System.Collections.Generic.List{LogicLayer.OPurchaseRequestItem})">
            --------------------------------------------------------------
            <summary>
            Create a single RFQ from a set of WJ line items and saves the
            RFQ into the database.
            </summary>
            <param name="prLineItems"></param>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.AddRFQLineItemsFromPRLineItems(LogicLayer.ORequestForQuotation,System.Collections.Generic.List{LogicLayer.OPurchaseRequestItem})">
            --------------------------------------------------------------
            <summary>
            Add a set of WJ items into an RFQ.
            </summary>
            <param name="items"></param>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.HasMaterialItems">
            <summary>
            Checks if there is at least one material item in the purchase.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ValidateSufficientBudget">
            <summary>
            Validates that there is sufficient amount in the budgets
            for the deduction.
            </summary>
            <returns>Returns a string of a list of budget periods and accounts
            that are insufficient. Returns an empty string otherwise.
            </returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.UpdateApplicablePurchaseSettings">
            <summary>
            Gets the most applicable purchase settings and store it
            in a temporary variable.
            </summary>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ValidateSufficientNumberOfQuotations">
            <summary>
            Validates that there are sufficient number of quotations
            for this request for qoutation.
            <para></para>
            This method returns
            <list>
                <item>0 - if there is insufficient quotations.</item>
                <item>1 - if there is sufficient quotations.</item>
                <item>-1 - if there is insufficient quotations, and a warning will be shown.</item>
            </list>
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.UpdateVendorAwardedItemsUnitPrice">
            <summary>
            Updates the awarded items' unit price of all
            the RFQ items in this RFQ. This method should
            be called after the user updates the quotation
            of any of the vendors.
            </summary>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.GetVendorItems">
            <summary>
            Gets a datatable of the quotation items, grouped
            either by vendor, or by individual line items.
            </summary>
            <param name="groupByVendor"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ValidateRFQLineItemsNotGeneratedToPO(System.Collections.Generic.List{System.Guid})">
            <summary>
            Validates that the list of RFQ line item numbers and descriptions
            that have not been generated into POs.
            </summary>
            <param name="purchaseRequestItemIds"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ValidateRFQLineItemsAwardedToSingleVendor(System.Collections.Generic.List{System.Guid})">
            <summary>
            Validates that RFQs line items are awarded to exactly 1 vendor.
            </summary>
            <param name="rfqIds"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ValidateRFQsHaveSameProperties(System.Collections.Generic.List{System.Guid})">
            <summary>
            Validates that RFQs indicated by the list of RFQ IDs
            have the same case associated with them.
            <para></para>
            Returns a flag to indicate
            </summary>
            <param name="rfqIds"></param>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ValidateRFQsAwarded(System.Collections.Generic.List{System.Guid})">
            <summary>
            Validates that RFQs indicated by the list of RFQ IDs
            that have been awarded.
            <para></para>
            Returns a list of RFQ numbers that have not been
            awarded.
            </summary>
            <param name="rfqIds"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ValidateRFQsAwardedToSingleVendor(System.Collections.Generic.List{System.Guid})">
            <summary>
            Validates that RFQs indicated by the list of RFQ IDs
            that have been awarded to a single vendor.
            <para></para>
            Returns a list of RFQ numbers that have not been
            awarded to a single vendor.
            </summary>
            <param name="rfqIds"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ValidateAtLeastOneItemAwarded">
            <summary>
            Validates to ensure that at least one item awarded to
            a vendor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ValidateRFQsDistributionMode(System.Collections.Generic.List{System.Guid})">
            <summary>
            validates that if there are more than 1 RFQs, then
            the budget distribution mode must be by individual
            line items.
            </summary>
            <param name="rfqIds"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotation.ComputeRemainingBudgetAmount(System.Nullable{System.Int32})">
            <summary>
            Computes the remaining budget amount that has not
            been created in the purchase budgets for the
            specified line item number.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.IsCharged">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.WorkID">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.IsRecoverable">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.RequestorCellPhone">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.RequestorFax">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.RequestorEmail">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.RequestorPhone">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.TenantID">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.TenantLeaseID">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.TenantLease">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.TenantContactID">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.Work">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.TotalChargeAmount">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.Background">
            <summary>
            [Column] Gets or Sets the Background
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.Scope">
            <summary>
            [Column] Gets or Sets the Scope
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.Evaluation">
            <summary>
            [Column] Gets or Sets the Evaluation
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.Warranty">
            <summary>
            [Column] Gets or Sets the Warranty
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.Campaign">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.hasWarranty">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.IsGroupWJ">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.WarrantyPeriod">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.WarrantyPeriodInterval">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.CancelledPurchaseOrderID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.BudgetGroupID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.RequestorID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.TransactionTypeGroupID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.BackgroundTypeID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.GroupRequestForQuotationID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.CampaignID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.GroupRequestForQuotation">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.ChildRequestForQuotation">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.GroupWJLocations">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.BudgetGroup">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.Requestor">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.TransactionTypeGroup">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.BackgroundType">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.AutoCalculateReallocationTo">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.RequestorName">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.IsPaymentPaidByPercentage">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.IsGroupApproval">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.IsDelegatedToHOD">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.RFQBudgetReallocationToPeriods">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.RFQBudgetReallocationFromPeriods">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.EmployerCompanyID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.RFQTitle">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.EmployerCompany">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.CancelledPurchaseOrder">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.RequestForQuotationPaymentSchedules">
             <summary>
            
             </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:LogicLayer.ORequestForQuotation.EmailMessageAttachments" -->
        <member name="P:LogicLayer.ORequestForQuotation.AwardedVendors">
            <summary>
            Gets List of vendor submitted quotation
            seperated by comma ','
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.IsGroupWJText">
            <summary>
            Gets IsGroupWJ text (Yes or No)
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.TaskAmount">
            <summary>
            Gets the total awarded amount of this request for quotation.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.TotalPurchaseBudgateAmount">
             <summary>
            
             </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:LogicLayer.ORequestForQuotation.TotalFromBudgetAmount" -->
        <member name="P:LogicLayer.ORequestForQuotation.TotalToBudgetAmount">
            <summary>
            Gets the total amount to be reallocated to the destination
            budget.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.ApproverList">
             <summary>
             Get ApprovalHierarchy for document template (WJPrintOut)
             </summary>
            
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.QuotationReceivedList">
            <summary>
            Get QuotationReceived for document template (WJPrintOut)
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.BuildingName">
            <summary>
            get BuildingName for WJPrintOut
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.AwardedIPTVendorMessageTitleIndication">
            <summary>
            Text to display to indicate that message sent to approver includes an ipt vendor in the awarded items
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.SubmitForApprovalDate">
            <summary>
            Get submit for approval datetime fro WJPrintOut
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.LastApprovalDate">
            <summary>
            Gets Last approval date (WJ Printout)
            Copy to PO date as well.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.BudgetSummaries">
            <summary>
            BudgetSummaries for WJPrintOut distinct Account
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.LocationID">
            <summary>
            [Column] Gets or sets the foreign key to the Location table
            that indicates the location this request for quotation is
            intended for.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.EquipmentID">
            <summary>
            [Column] Gets or sets the foreign key to the Equipment table
            that indicates the location this request for quotation is
            intended for.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.IsTermContract">
            <summary>
            [Column] Gets or sets a flag to indicate that this Request
            for Quotation is for a term contract.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.Description">
            <summary>
            [Column] Gets or sets the description for this request
            for quotation object.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.DateRequired">
            <summary>
            [Column] Gets or sets the date the materials or
            services are required.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.DateEnd">
            <summary>
            [Column] Gets or sets the date the
            required services should end.
            <para></para>
            This is applicable only if this Request for Quotation
            is for a term contract.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.PurchaseTypeID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table
            that indicates the purchase type.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.PurchaseAdministratorID">
            <summary>
            [Column] Gets or sets the foreign key to the User table
            that indicates the purchase administrator to follow
            up with this request for quotation.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.StoreID">
            <summary>
            [Column] Gets or sets the foreign key to the Store table
            that indicates the store the materials purchase are intended
            for.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.ShipToAddress">
            <summary>
            [Column] Gets or sets the address to ship the materials
            or perform the services at.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.ShipToAttention">
            <summary>
            [Column] Gets or sets the person in-charge who will
            attend to the receipt of the materials or services.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.BillToAddress">
            <summary>
            [Column] Gets or sets the address to bill to.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.BillToAttention">
            <summary>
            [Column] Gets or sets the person in-charge who will
            attend to the billing.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.AwardedJustification">
            <summary>
            [Column] Gets or sets a description for the justifcation
            of the award of the purchase to a selected vendor.
            This is provided by the purchase administrator
            of this request for quotation.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.BudgetDistributionMode">
            <summary>
            [Column] Gets or sets the budget distribution mode.
            <para></para>
            <list>
                <item>0 - Budget Distribution by Entire RFQ. </item>
                <item>1 - Budget Distribution by RFQ line items. </item>
            </list>
            <para></para>
            Note that when the budget distribution is by an entire
            RFQ, then the user will be allowed to copy only the entire
            RFQ to a new PO, but will not be allowed to copy
            individual line items to a new PO.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.IsSubmittedForApproval">
            <summary>
            [Column] Gets or sets a flag indicating that the
            request for quotation has been submitted for approval.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.IsApproved">
            <summary>
            [Column] Gets or sets a flag indicating that the
            request for quotation has been approved.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.ApprovalRemarks">
            <summary>
            [Column] Gets or sets a description for the
            approval of the award to a selected vendor.
            This is provided by the approver of this
            request for quotation.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.MinimumNumberOfQuotationsPolicy">
            <summary>
            [Column] Gets or sets a value indicating the policy
            of the system with respect to creating purchase orders
            from quotations.
            <para></para>
            <list>
                <item>0 - A minimum number of quotations is not required.</item>
                <item>1 - A minimum number of quotations is preferred. A warning is displayed if the minimum quotations is not satisfied.</item>
                <item>2 - A minimum number of quotations is required. </item>
            </list>
            <para></para>
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.MinimumNumberOfQuotations">
            <summary>
            [Column] Gets or sets the minimum number of quotations
            required before a Purchase Order can be created from a
            Request for Quotation. This value must be more than
            or equals to 1. At the very least, there must be at
            least 1 quotation in a Request for Quotation before
            any Purchase Order can be created anyway.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.MinimumApplicableRFQAmount">
            <summary>
            [Column] Gets or sets the minimum amount (inclusive)
            that will result in the minimum quotation policy taking effect.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.BudgetValidationPolicy">
            <summary>
            [Column] Gets or sets a value indicating
            the budget validation policy.
            <list>
                <item>0 - Budget consumption must be equal to line items. (default) </item>
                <item>1 - Budget consumption must be less than or equal to line items. </item>
                <item>2 - No validation. </item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.Case">
            <summary>
            Gets or sets the reference to the OCase object
            that represents the case this request for quotation
            is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.PurchaseType">
            <summary>
            Gets or sets the Purchase Type object the represents
            the purchase type of this request for quotation.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.Location">
            <summary>
            Gets or sets the OLocation object that represents
            the location this purchase request is intended for.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.Equipment">
            <summary>
            Gets or sets the OEquipment object that represents
            the equipment this purchase request is intended for.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.RequestForQuotationItems">
            <summary>
            Gets a one-to-many list of ORequestForQuotationItem objects that represents
            the list of request for quotation items that this request for quotation contains.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.RequestForQuotationVendors">
            <summary>
            Gets a one-to-many list of ORequestForQuotationVendor objects that represents
            the list of quotes provided by vendors.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.PurchaseBudgets">
            <summary>
            Gets a one-to-many list of OPurchaseBudget objects that represents
            the budget distribution for this request for quotation.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.PurchaseBudgetSummaries">
            <summary>
            Gets a one-to-many list of OPurchaseBudgetSummary objects that represents
            information about this Purchase Request's commitment to the budgets.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.AwardedQuotation">
            <summary>
            Gets or sets the ORequestForQuotationVendor object that represents
            the awarded quotation.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.Store">
            <summary>
            Gets or sets the OStore object that represents
            the store the materials purchase are intended
            for.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.PurchaseAdministrator">
            <summary>
            Gets or sets the OUser object that represents
            the purchase administrator to follow
            up with this request for quotation.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.PurchaseApprover">
            <summary>
            Gets or sets the OUser object that represents
            the approver who will approve the quotation
            given by the selected vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.NumberOfAwardedVendors">
            <summary>
            Determines if the number of vendors awarded to
            this quotation by counting the total number
            of distinct vendors for each item.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.TaskLocations">
            <summary>
            Gets the location indicated by this purchase request.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.TaskEquipments">
            <summary>
            Gets the equipment indicated by this purchase request.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.NumberOfQuotations">
            <summary>
            Gets the total number of quotations returned by the vendors
            invited to quote for the job.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.NumberOfQuotationsVendors">
            <summary>
            Gets the total number of vendors invited to quote for the job.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.BudgetDistributionModeText">
            <summary>
            Returns the text representing the
            budget distribution mode.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotation.TempPurchaseBudgetSummaries">
            <summary>
            A cached copy of the budget summary table. This
            is a temporary list of the budget summaries that
            provides a snapshot of the budget accounts when
            the RFQ object is before the pending approval state.
            </summary>
        </member>
        <member name="T:LogicLayer.EnumRecoverable">
            <summary>
            Enum for type of WJ indicate 
            the WJ is recoverable or non-recoverable.
            </summary>
        </member>
        <member name="T:LogicLayer.EnumBudgetDistributionTerm">
            <summary>
            Enum for budget destribution term
            </summary>
        </member>
        <member name="F:LogicLayer.EnumCRVTenderRFQSyncError.SUBMIT_FOR_APPROVE">
            <summary>
            Confirm CRV serial number in used succeed but facing error when update Tender.
            Can not release the CRV serial number.
            Need to run service to release the CRV serial number (set CRV serial number not in use) later.
            </summary>
        </member>
        <member name="F:LogicLayer.EnumCRVTenderRFQSyncError.REJECT_FOR_REWORK">
             <summary>
            
             </summary>
        </member>
        <member name="F:LogicLayer.EnumCRVTenderRFQSyncError.AWARD">
            <summary>
            CRV Tender unsucceed to update when awarded. Need to run service to update CRV tender later.
            </summary>
        </member>
        <member name="F:LogicLayer.EnumCRVTenderRFQSyncError.CANCEL">
            <summary>
            CRV Tender unsucceed to cancel. Need to run service to cancel CRV tender later.
            </summary>
        </member>
        <member name="F:LogicLayer.EnumCRVTenderRFQSyncError.CLOSE">
            <summary>
            CRV Tender unsucceed to close. Need to run service to close later.
            </summary>
        </member>
        <member name="T:LogicLayer.OPurchaseOrderItem">
            <summary>
            Represents a purchase order object as a legal document to a
            vendor to purchase materials or services.
            </summary>
            <summary>
            Represents 
            </summary>
            <summary>
            Represents the item requested in a purchase order object.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.ChargeAmount">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.RecoverableAmount">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.RecoverableAmountInSelectedCurrency">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.EstimatedUnitPrice">
            <summary>
            [Column] Gets or sets the EstimatedUnitPrice
            that indicates the purchase request that contains this item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.AdditionalDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.TaxCodeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.OriginalRequestForQuotationItemID">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.OriginalUnitPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.OriginalUnitPriceInSelectedCurrency">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.OriginalQuantity">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.TaxAmount">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.EstimatedSubtotal">
            <summary>
            Gets the sub total awarded for this
            line item. The sub-total is the unit price (in base currency) 
            multiplied by the quantity provided.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.SubtotalInSelectedCurrency">
            <summary>
            Gets the sub total awarded for this
            line item. The sub-total is the unit price (in selected currency) 
            multiplied by the quantity provided.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.CopiedFromRequestForQuotations">
            <summary>
            Gets the purchase request number or request for quotation number
            that this purchase order item was copied from.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.PurchaseOrderID">
            <summary>
            [Column] Gets or sets the foreign key to the PurchaseOrder table 
            that indicates the purchase order that contains this item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.ItemNumber">
            <summary>
            [Column] Gets or sets the item number of this purchase
            request item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.ItemType">
            <summary>
            [Column] Gets or sets a value that indicates the type
            this item belongs to.
            <para></para>
            <list>
              <item>0 - Material</item>
              <item>1 - Services</item>
              <item>2 - Others</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.ItemDescription">
            <summary>
            [Column] Gets or sets the description of this item.
            This description is filled up with the material's (catalogue)
            or service's (fixed rate) name. If ItemType = 2, however,
            this description is entered by the user manually through
            the user interface.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.CatalogueID">
            <summary>
            [Column] Gets or sets the foreign key to the Catalogue table 
            that indicates the material item requested.
            This is applicable if ItemType = 0.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.FixedRateID">
            <summary>
            [Column] Gets or sets the foreign key to the FixedRate table 
            that indicates the service item requested.
            This is applicable if ItemType = 1.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.UnitOfMeasureID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table 
            that indicates the unit of measure of this material
            or service. 
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.CurrencyID">
            <summary>
            [Column] Gets or sets the foreign key to the Currency table 
            that indicates the currency of the unit price of this
            purchase order line item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.UnitPrice">
            <summary>
            [Column] Gets or sets the unit price of this item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.UnitPriceInSelectedCurrency">
            <summary>
            [Column] Gets or sets the unit price of this item 
            in the system's base currency. This value is currently 
            always the same as the unit price.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.QuantityOrdered">
            <summary>
            [Column] Gets or sets the quantity of the material
            or service ordered from the vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.PurchaseRequestItemID">
            <summary>
            [Column] Gets or sets the foreign key to the PurchaseRequestItem table 
            that indicates the purchase request item this purchase order
            item was copied from.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.RequestForQuotationItemID">
            <summary>
            [Column] Gets or sets the foreign key to the RequestForQuotationItem table 
            that indicates the request from quotation item this purchase order
            item was copied from.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.ReceiptMode">
            <summary>
            Gets or sets the mode that this purchase order item should be
            received in.
            <list>
                <item>0 - Receive quantity </item>
                <item>1 - Receive dollar amount </item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.PurchaseOrder">
            <summary>
            Gets or sets the OPurchaseOrder object that represents
            the purchase order that contains this item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.UnitOfMeasure">
            <summary>
            Gets or sets the OCode object that represents
            the unit of measure of this material
            or service. 
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.Catalogue">
            <summary>
            Gets or sets the OCatalogue object that represents
            the material item requested.
            This is applicable if ItemType = 0.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.FixedRate">
            <summary>
            Gets or sets the OFixedRate object that represents
            the service item requested.
            This is applicable if ItemType = 1.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.Currency">
            <summary>
            Gets or sets the OCurrency object that represents 
            that currency of this line item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.PurchaseRequestItem">
            <summary>
            Gets or sets the OPurchaseRequestItem object that represents
            the purchase request item this purchase order
            item was copied from.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.RequestForQuotationItem">
            <summary>
            Gets or sets the ORequestForQuotationItem object that represents
            the request from quotation item this purchase order
            item was copied from.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.ReceiptModeText">
            <summary>
            Gets the text of the mode of receipt for this
            purchase order item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.QuantityDelivered">
            <summary>
            Gets the total quantity delivered for this item by
            computing the total receipts.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.DollarAmountDelivered">
            <summary>
            Gets the total quantity delivered for this item by
            computing the total receipts.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.Subtotal">
            <summary>
            Gets the sub total awarded for this
            line item. The sub-total is the unit price (in base currency) 
            multiplied by the quantity provided.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.ItemTypeText">
            <summary>
            Gets the localized text for the item type.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderItem.CopiedFromObjectNumber">
            <summary>
            Gets the purchase request number or request for quotation number
            that this purchase order item was copied from.
            </summary>
        </member>
        <member name="M:LogicLayer.TEquipment.GetAccessibleEquipmentCondition(LogicLayer.OUser,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Generates a condition that filters the equipment by the
            list of accessible equipment based on the the user's
            job code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.TEquipment.GetAccessibleEquipmentByAreaCondition(LogicLayer.OUser,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Generates a condition that filters the equipment by the
            list of accessible location.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.TEquipment.GetAccessibleEquipmentByAreaAndStoreCondition(LogicLayer.OUser,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Generates a condition that filters the equipment by the
            list of accessible location, and including those equipment
            in the store.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LogicLayer.OEquipment">
            <summary>
            Represents a equipment or a folder of equipment. 
            The equipment is a hierarchical structure that may
            contain the main equipment assembly and its sub-assemblies.
            Each equipment, regardless of its assembly structure,
            must be associated with a location.
            </summary>
            <summary>
            Represents a equipment or a folder of equipment. 
            The equipment is a hierarchical structure that may
            contain the main equipment assembly and its sub-assemblies.
            Each equipment, regardless of its assembly structure,
            must be associated with a location.
            </summary>
        </member>
        <member name="M:LogicLayer.OEquipment.IsDeactivatable">
            <summary>
            Disallow delete if:
            1. There is at least one work tied to this equipment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OEquipment.Deactivating">
            <summary>
            Deactivates the corresponding StoreBinItem.
            </summary>
        </member>
        <member name="M:LogicLayer.OEquipment.IsCyclicalReference">
            <summary>
            Tests if the object's parent is a cyclical reference back
            to itself.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OEquipment.GetRootEquipment">
            <summary>
            Get root equipment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OEquipment.FindEquipment(System.Boolean,System.String)">
            <summary>
            Find equipment by name and whether it is a physical 
            equipment or not.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OEquipment.GetEquipmentTypes">
            <summary>
            Get a distinct list of equipmenttypes under the current 
            equipment/system .
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OEquipment.GetOPCAEEvent">
            <summary>
            Get latest OPC AE Event  under the current equipment
            </summary>
            <param></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OEquipment.GetEquipmentByPath(System.String)">
            <summary>
            Extract EquipmentID from Equipment hierachy string
            </summary>
            <param name="path"></param>
            <returns>Guid</returns>
        </member>
        <member name="M:LogicLayer.OEquipment.IsEquipmentInList(LogicLayer.OEquipment,System.String[],System.Int32)">
            <summary>
            Check if the equipment in the hierachy string
            </summary>
            <param name="eqp"></param>
            <param name="strList"></param>
            <param name="eqpLevel"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OEquipment.IsDuplicatePoint(LogicLayer.OPoint)">
            <summary>
            Validates that there is no other point with the same name and under here
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OEquipment.Saving">
            <summary>
            Overrides the Saving method to automatically create
            the store batch tied to the equipment.
            </summary>
        </member>
        <member name="M:LogicLayer.OEquipment.CreatePoints">
            <summary>
            Automatically create and add points
            based on the point templates set up in the
            location type.
            </summary>
        </member>
        <member name="M:LogicLayer.OEquipment.ValidateEquipmentNotMovingToLockedBin">
            <summary>
            Validates to ensure that the equipment is not moving
            into a locked bin.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OEquipment.GenerateBarcodePrintOutData(System.Collections.ArrayList)">
             <summary>
             To generate a datatable that can be used by barcode print out template in RDL.
             </summary>
             <param name="p_al_EquipmentID"></param>
             <returns></returns>
            
        </member>
        <member name="M:LogicLayer.OEquipment.GetEquipmentByEquipmentType(LogicLayer.OEquipmentType)">
            <summary>
            Get a list of equipment under the current equipment/system 
            that are of a specified type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OEquipment.RunningNumberCode">
            <summary>
            [Column] Gets or sets the running number prefix
            of this location.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.EquipmentTypeID">
            <summary>
            [Column] Gets or sets the foreign key to the
            EquipmentType table.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.StoreBinItemID">
            <summary>
            [Column] Gets or sets the foreign key to the
            StoreBinItem table that indicates the store
            batch that this equipment is currently parked
            under. 
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.LocationID">
            <summary>
            [Column] Gets or sets the foreign key to the
            Location table.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.StoreID">
            <summary>
            [Column] Gets or sets the foreign key to the
            Store table.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.IsInStore">
            <summary>
            [Column] Gets or sets a flag to indicate if the
            Equipment is current in the store or issued
            out to a location.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.IsPhysicalEquipment">
            <summary>
            [Column] Gets or sets a value that indicates
            whether this is a physical equipment.
            <para></para>
            	<list>
            		<item>0 ?Equipment Folder (System)</item>
            		<item>1 ?Physical Equipment</item>
            	</list>
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.LifeSpan">
            <summary>
            [Column] Gets or sets the life span in the
            number of years of this equipment.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.DateOfManufacture">
            <summary>
            [Column] Gets or sets the date of manufacture 
            of this equipment.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.DateOfOwnership">
            <summary>
            [Column] Gets or sets the date of ownership of
            this equipment.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.PriceAtOwnership">
            <summary>
            [Column] Gets or sets the price of ownership of this equipment.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.SerialNumber">
            <summary>
            [Column] Gets or sets the serial number of
            this equipment.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.ModelNumber">
            <summary>
            [Column] Gets or sets the model number of
            this equipment.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.Barcode">
            <summary>
            [Column] Gets or sets the barcode of this
            equipment.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.WarrantyExpiryDate">
            <summary>
            [Column] Gets or sets the warranty expiry
            date of this equipment.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.Children">
            <summary>
            Gets a list of OEquipment objects that represents
            the list of next level equipment below this current
            equipment.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.Parent">
            <summary>
            Gets the OEquipment object that represents
            the parent equipment that this current
            equipment belongs under.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.Location">
            <summary>
            Gets the OLocation object that represents the
            location that this current equipment exists in.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.EquipmentType">
            <summary>
            Gets the OEquipmentType object that represents
            the equipment type this current equipment
            belongs to.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.Point">
            <summary>
            Gets a list of OPoint objects that exist in this 
            current equipment.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.OPCAEEvents">
            <summary>
            Gets or sets the OOPCAEEvent object representing 
            the type of this current location.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.EndReminderDays1">
            <summary>
            [Column] Gets or sets the number of 
            days left before the end of the 
            contract to send out a reminder e-mail.
            The user can specify up to 4 periods.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.EndReminderDays2">
            <summary>
            [Column] Gets or sets the number of 
            days left before the end of the 
            contract to send out a reminder e-mail.
            The user can specify up to 4 periods.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.EndReminderDays3">
            <summary>
            [Column] Gets or sets the number of 
            days left before the end of the 
            contract to send out a reminder e-mail.
            The user can specify up to 4 periods.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.EndReminderDays4">
            <summary>
            [Column] Gets or sets the number of 
            days left before the end of the 
            contract to send out a reminder e-mail.
            The user can specify up to 4 periods.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.LastReminderDate">
            <summary>
            [Column] Gets or sets the last date
            that a reminder was sent.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.CurrencyID">
            <summary>
            [Column] Gets or sets the Currency
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.PriceAtCurrency">
            <summary>
            [Column] Gets or sets the Price at the Currency
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.VolumeLicense">
            <summary>
            [Column] Gets or sets the number of bulk licenses
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.Designation">
            <summary>
            [Column] Gets or sets the Designation, Production/Testing environment (Capitaland-IT)
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.IsMissing">
            <summary>
            [Column] Gets or sets the availability 
            of this equipment
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipment.LocationStockTakeID">
            <summary>
            [Column] Gets or sets the LocationStockTakeID 
            of this equipment, indicating whether this equipment
            is created by a LocationStockTake
            </summary>
        </member>
        <member name="T:LogicLayer.Resources.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Account_Group">
            <summary>
              Looks up a localized string similar to Group.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Account_LineItem">
            <summary>
              Looks up a localized string similar to Line Item.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.BillToAMOSStatusText_NotPostedCancelled">
            <summary>
              Looks up a localized string similar to Not Posted (Cancelled).
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.BillToAMOSStatusText_NotPostedToAmos">
            <summary>
              Looks up a localized string similar to Not Posted to AMOS.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.BillToAMOSStatusText_PendingPosting">
            <summary>
              Looks up a localized string similar to Pending Posting to AMOS.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.BillToAMOSStatusText_PostedToAmos">
            <summary>
              Looks up a localized string similar to Posted To AMOS (Waiting for AMOS to process).
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.BillToAMOSStatusText_PostedToAmosFailed">
            <summary>
              Looks up a localized string similar to Posted to AMOS (FAILED).
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.BillToAMOSStatusText_PostedToAmosSuccessful">
            <summary>
              Looks up a localized string similar to Posted to AMOS (SUCCESSFUL).
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.BillToAMOSStatusText_UnableToPostDueToError">
            <summary>
              Looks up a localized string similar to Unable to post to AMOS due to error.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.BudgetDistributionMode_Entire">
            <summary>
              Looks up a localized string similar to Entire.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.BudgetDistributionMode_LineItems">
            <summary>
              Looks up a localized string similar to Line Items.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.BudgetReadjustment_InsufficientItem">
            <summary>
              Looks up a localized string similar to Following budget items do not have enough available amount to be revised : .
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.BudgetReallocation_InsufficientItem">
            <summary>
              Looks up a localized string similar to Following budget items do not have enough available amount to be transferred: .
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.BudgetValidationPolicy_BudgetConsumptionEqualsItems">
            <summary>
              Looks up a localized string similar to Budget = Line Items.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.BudgetValidationPolicy_BudgetConsumptionLessThanItems">
            <summary>
              Looks up a localized string similar to Budget &lt;= Line Items.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.BudgetValidationPolicy_NotRequired">
            <summary>
              Looks up a localized string similar to Budget Not Required.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.CheckItemType_Choice">
            <summary>
              Looks up a localized string similar to Choice.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.CheckItemType_None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.CheckItemType_Remarks">
            <summary>
              Looks up a localized string similar to Remarks.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.CostingType_AverageCosting">
            <summary>
              Looks up a localized string similar to Average Costing.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.CostingType_Expiry">
            <summary>
              Looks up a localized string similar to Expiry.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.CostingType_FIFO">
            <summary>
              Looks up a localized string similar to FIFO.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.CostingType_LIFO">
            <summary>
              Looks up a localized string similar to LIFO.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.CostingType_StandardCosting">
            <summary>
              Looks up a localized string similar to Standard Costing.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.CostType_AdhocRate">
            <summary>
              Looks up a localized string similar to Others.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.CostType_FixedRate">
            <summary>
              Looks up a localized string similar to Fixed Rate.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.CostType_Material">
            <summary>
              Looks up a localized string similar to Inventory.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.CostType_TaxCode">
            <summary>
              Looks up a localized string similar to Tax.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.CostType_Technician">
            <summary>
              Looks up a localized string similar to Technician.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.DashboardType_Basic">
            <summary>
              Looks up a localized string similar to Basic.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.DashboardType_Bubble">
            <summary>
              Looks up a localized string similar to Bubble.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.DashboardType_Gauge">
            <summary>
              Looks up a localized string similar to Gauge.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.DashboardType_Grid">
            <summary>
              Looks up a localized string similar to Grid.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.DashboardType_Pie">
            <summary>
              Looks up a localized string similar to Pie.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.DashboardType_Polar">
            <summary>
              Looks up a localized string similar to Polar.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.DashboardType_Radar">
            <summary>
              Looks up a localized string similar to Radar.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.DashboardType_Scatter">
            <summary>
              Looks up a localized string similar to Scatter.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Document_Acrobat">
            <summary>
              Looks up a localized string similar to Acrobat PDF.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Document_Excel">
            <summary>
              Looks up a localized string similar to Microsoft Excel.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Document_Image">
            <summary>
              Looks up a localized string similar to Jpeg Image.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Document_Static">
            <summary>
              Looks up a localized string similar to Static Page.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Document_Word">
            <summary>
              Looks up a localized string similar to Microsoft Word.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.EAMservice_ContinuePending">
            <summary>
              Looks up a localized string similar to Continue Pending.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.EAMservice_Paused">
            <summary>
              Looks up a localized string similar to Paused.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.EAMservice_PausePending">
            <summary>
              Looks up a localized string similar to Pause Pending.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.EAMservice_Running">
            <summary>
              Looks up a localized string similar to Running.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.EAMservice_StartPending">
            <summary>
              Looks up a localized string similar to Start Pending.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.EAMservice_Stop">
            <summary>
              Looks up a localized string similar to Stopped.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.EAMservice_StopPending">
            <summary>
              Looks up a localized string similar to Stop Pending.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Equipment_UnitOfMeasureNotDefined">
            <summary>
              Looks up a localized string similar to Unable to save equipment as the default unit of measure is not defined in the application settings..
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.EquipmentStatus_Active">
            <summary>
              Looks up a localized string similar to Active.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.EquipmentStatus_Confirmed">
            <summary>
              Looks up a localized string similar to Confirmed.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.EquipmentStatus_Damaged">
            <summary>
              Looks up a localized string similar to Damaged.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.EquipmentStatus_InRepair">
            <summary>
              Looks up a localized string similar to In Repair.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.EquipmentStatus_PendingAcceptance">
            <summary>
              Looks up a localized string similar to Pending Acceptance.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.EquipmentStatus_PendingWriteOff">
            <summary>
              Looks up a localized string similar to Pending Write Off.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.EquipmentStatus_Retired">
            <summary>
              Looks up a localized string similar to Retired.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.EquipmentStatus_WrittenOff">
            <summary>
              Looks up a localized string similar to Written Off.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Gender_Female">
            <summary>
              Looks up a localized string similar to F.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Gender_Male">
            <summary>
              Looks up a localized string similar to M.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.General_NA">
            <summary>
              Looks up a localized string similar to N.A..
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.General_No">
            <summary>
              Looks up a localized string similar to No.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.General_Yes">
            <summary>
              Looks up a localized string similar to Yes.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.InventoryCatalogType_Consumable">
            <summary>
              Looks up a localized string similar to Consumable.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.InventoryCatalogType_Equipment">
            <summary>
              Looks up a localized string similar to Equipment.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.InventoryCatalogType_NonConsumable">
            <summary>
              Looks up a localized string similar to Non-Consumable.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.InvoiceType_CreditMemo">
            <summary>
              Looks up a localized string similar to Credit Memo.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.InvoiceType_DebitMemo">
            <summary>
              Looks up a localized string similar to Debit Memo.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.InvoiceType_DirectExpense">
            <summary>
              Looks up a localized string similar to Direct Expense.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.InvoiceType_StandardInvoice">
            <summary>
              Looks up a localized string similar to Standard Invoice.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.ItemType_NonStocked">
            <summary>
              Looks up a localized string similar to Non-Stocked.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.ItemType_SpecialOrder">
            <summary>
              Looks up a localized string similar to Special Order.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.ItemType_Stocked">
            <summary>
              Looks up a localized string similar to Stocked.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.LocationStockTakeItemType_Equipment">
            <summary>
              Looks up a localized string similar to Equipment.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.LocationStockTakeItemType_NonConsumable">
            <summary>
              Looks up a localized string similar to NonConsumable.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.MatchType_DirectInvoice">
            <summary>
              Looks up a localized string similar to Direct Invoice.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.MatchType_InvoiceMatchedToPO">
            <summary>
              Looks up a localized string similar to PO-Matched Invoice .
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.MatchType_InvoiceMatchedToPOReceipt">
            <summary>
              Looks up a localized string similar to PO-Receipt-Matched Invoice.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Message_CarbonCopyBodyPrefix">
            <summary>
              Looks up a localized string similar to &lt;b&gt;THE FOLLOWING MESSAGE IS COPIED TO YOU FOR INFORMATION.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Message_CarbonCopySubjectPrefix">
            <summary>
              Looks up a localized string similar to Carbon-Copy: .
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.MinimumNumberOfQuotations_NotRequired">
            <summary>
              Looks up a localized string similar to Not Required.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.MinimumNumberOfQuotations_Preferred">
            <summary>
              Looks up a localized string similar to Preferred.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.MinimumNumberOfQuotations_Required">
            <summary>
              Looks up a localized string similar to Required.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.ModeOfForwarding_All">
            <summary>
              Looks up a localized string similar to All.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.ModeOfForwarding_Direct">
            <summary>
              Looks up a localized string similar to Direct.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.ModeOfForwarding_Hierarchical">
            <summary>
              Looks up a localized string similar to Hierarchical.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.ModeOfForwarding_HierarchicalWithLastRejectedAndNextRequiredApprovalSkipping">
            <summary>
              Looks up a localized string similar to Hierarchical (with Last Rejected and Next Required Approval Skipping).
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.ModeOfForwarding_HierarchicalWithLastRejectedSkipping">
            <summary>
              Looks up a localized string similar to Hierarchical (with Last Rejected Skipping).
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.ModeOfForwarding_None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.NO_SUBSCRIPTION_FOUND">
            <summary>
              Looks up a localized string similar to NO_SUBSCRIPTION_FOUND.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Point_AbsoluteMeter">
            <summary>
              Looks up a localized string similar to Absolute.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Point_Equipment">
            <summary>
              Looks up a localized string similar to Equipment.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Point_IncreasingMeter">
            <summary>
              Looks up a localized string similar to Increasing.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Point_Location">
            <summary>
              Looks up a localized string similar to Location.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Position_NoOne">
            <summary>
              Looks up a localized string similar to No one.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Priority_0">
            <summary>
              Looks up a localized string similar to 0 (Low).
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Priority_1">
            <summary>
              Looks up a localized string similar to 1 (Medium).
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Priority_2">
            <summary>
              Looks up a localized string similar to 2 (High).
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Priority_3">
            <summary>
              Looks up a localized string similar to 3 (Critical).
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.PurchaseItemType_Contract">
            <summary>
              Looks up a localized string similar to Contract.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.PurchaseItemType_Material">
            <summary>
              Looks up a localized string similar to Inventory.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.PurchaseItemType_Others">
            <summary>
              Looks up a localized string similar to Others.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.PurchaseItemType_Service">
            <summary>
              Looks up a localized string similar to Service.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.PurchaseOrder_ExchangeRate">
            <summary>
              Looks up a localized string similar to 1 {0} is equal to {1} {2}..
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.PurchaseOrder_InvoiceBudgetNotEqual">
            <summary>
              Looks up a localized string similar to Following invoice budget items have exceeded its original budget amount for the financial year:.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.PurchaseOrder_LetterOfAward">
            <summary>
              Looks up a localized string similar to Letter of Award.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.PurchaseOrder_PurchaseOrder">
            <summary>
              Looks up a localized string similar to Purchase Order.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.PurchaseOrder_RFQToPOPreferred">
            <summary>
              Looks up a localized string similar to A request for quotation should be raised before this PO..
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.PurchaseOrder_RFQToPORequired">
            <summary>
              Looks up a localized string similar to A request for quotation must be raised before this PO. You cannot submit this PO for approval..
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.ReceiptMode_Dollar">
            <summary>
              Looks up a localized string similar to Dollar.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.ReceiptMode_Quantity">
            <summary>
              Looks up a localized string similar to Quantity.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.ReportFieldControlType_ContextTree">
            <summary>
              Looks up a localized string similar to ContextTree.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.ReportFieldControlType_Date">
            <summary>
              Looks up a localized string similar to Date.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.ReportFieldControlType_DateTime">
            <summary>
              Looks up a localized string similar to Date Time.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.ReportFieldControlType_DropdownList">
            <summary>
              Looks up a localized string similar to Dropdown List.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.ReportFieldControlType_MonthYear">
            <summary>
              Looks up a localized string similar to Date Month Year.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.ReportFieldControlType_MultiSelectList">
            <summary>
              Looks up a localized string similar to MultiSelect List.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.ReportFieldControlType_RadioButtonList">
            <summary>
              Looks up a localized string similar to Radio Button List.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.ReportFieldControlType_TextBox">
            <summary>
              Looks up a localized string similar to Text Box.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.RequestForQuotation_AwardedIPTVendorMessageTitleIndication">
            <summary>
              Looks up a localized string similar to ***IPT Vendor Selected***.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.RequestForQuotation_EntireNotMatch">
            <summary>
              Looks up a localized string similar to Budget {0}.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.RequestForQuotation_LineNotMatch">
            <summary>
              Looks up a localized string similar to Line Item Number {0}.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.RequestForQuotation_Lowest">
            <summary>
              Looks up a localized string similar to Lowest.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.RequestForQuotation_MinimumQuotationsPreferred">
            <summary>
              Looks up a localized string similar to &lt;font style=&apos;color:Red; font-weight:Bold&apos;&gt;A minimum of {0} quotations is preferred for this request for quotation.&lt;/font&gt;.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.RequestForQuotation_MinimumQuotationsRequired">
            <summary>
              Looks up a localized string similar to &lt;font style=&apos;color:Red; font-weight:Bold&apos;&gt;A minimum of {0} quotations is required for this request for quotation. You cannot submit for approval until you satisfy this requirement.&lt;/font&gt;.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.RequestForQuotation_RFQ">
            <summary>
              Looks up a localized string similar to the WJ.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.RunningNumberGenerator_IncrementForever">
            <summary>
              Looks up a localized string similar to Increments Forever.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.RunningNumberGenerator_LocationEquipment0">
            <summary>
              Looks up a localized string similar to No Location/Equipment code added.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.RunningNumberGenerator_LocationEquipment1">
            <summary>
              Looks up a localized string similar to Either Location/Equipment code added.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.RunningNumberGenerator_LocationEquipment2">
            <summary>
              Looks up a localized string similar to Only Location code added.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.RunningNumberGenerator_ResetEveryMonth">
            <summary>
              Looks up a localized string similar to Resets Every Month.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.RunningNumberGenerator_ResetEveryYear">
            <summary>
              Looks up a localized string similar to Resets Every Year.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.RunningNumberGenerator_ResetEveryYearIncCurrentYearMonth">
            <summary>
              Looks up a localized string similar to Reset every year include current year/month.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Source_Direct">
            <summary>
              Looks up a localized string similar to Direct.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Source_OPCServer">
            <summary>
              Looks up a localized string similar to OPC.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Source_PDA">
            <summary>
              Looks up a localized string similar to PDA.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Source_Work">
            <summary>
              Looks up a localized string similar to Work.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.StockTake_AutoGeneratedAdjustment">
            <summary>
              Looks up a localized string similar to Auto-generated adjustment for Stocktake #0000000.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.StoreAdjustItem_Down">
            <summary>
              Looks up a localized string similar to Down.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.StoreAdjustItem_Up">
            <summary>
              Looks up a localized string similar to Up.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.StoreBinItem_UnableToAdjust">
            <summary>
              Looks up a localized string similar to Unable to adjust batch item as the resulting quantity is less than zero..
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.StoreType_IssueLocation">
            <summary>
              Looks up a localized string similar to Location.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.StoreType_Storeroom">
            <summary>
              Looks up a localized string similar to Store.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Survey_EvaluatedPartyError">
            <summary>
              Looks up a localized string similar to Error!.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Survey_EvaluatedPartyNull">
            <summary>
              Looks up a localized string similar to N.A..
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.SurveyPlanner_RemindRespondent_Body">
             <summary>
               Looks up a localized string similar to Dear User,
            
            Please be reminded to click on the following URL to complete the online evaluation form.
            
            {0}
            
            Please submit by end of {1}.
            
            Thank you.
            
            This is a computer-generated email, please do not reply to this email address. If you have any enquiries, please email to:
            
            moe_fdd_pdm_surveys@moe.gov.sg
            
            
            P.S.: Please copy the URL and paste it into your browser address bar if the online evaluation form can not be opened by clicking on the URL..
             </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.SurveyPlanner_RemindRespondent_Subject">
            <summary>
              Looks up a localized string similar to {0} (Gentle Reminder - For {1}).
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.SurveyPlanner_SurveyClosed_Body">
             <summary>
               Looks up a localized string similar to Dear User,
            
            The survey has been closed.
            
            Thank you.
            
            This is a computer-generated email, please do not reply to this email address. If you have any enquiries, please email to:
            
            moe_fdd_pdm_surveys@moe.gov.sg.
             </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.SurveyPlanner_SurveyClosed_Subject">
            <summary>
              Looks up a localized string similar to {0} (Closed -  For {1}).
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.SurveyPlanner_SurveyExtended_Body">
             <summary>
               Looks up a localized string similar to Dear User,
            
            We have extended the Survey Submission date to {0}.
            
            Please click on the following URL to complete the online evaluation form.
            
            {1}
            
            Please submit by end of {2}.
            
            Thank you.
            
            This is a computer-generated email, please do not reply to this email address. If you have any enquiries, please email to:
            
            moe_fdd_pdm_surveys@moe.gov.sg
            
            
            P.S.: Please copy the URL and paste it into your browser address bar if the online evaluation form can not be opened by clicking on the URL..
             </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.SurveyPlanner_SurveyExtended_Subject">
            <summary>
              Looks up a localized string similar to {0} (Survey Submission Date Extended - For {1}).
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.SurveyPlanner_SurveyStarted_Body">
             <summary>
               Looks up a localized string similar to Dear User,
            
            Please click on the following URL to complete the online evaluation form.
            
            {0}
            
            Please submit by end of {1}.
            
            Thank you.
            
            This is a computer-generated email, please do not reply to this email address. If you have any enquiries, please email to:
            
            moe_fdd_pdm_surveys@moe.gov.sg
            
            
            P.S.: Please copy the URL and paste it into your browser address bar if the online evaluation form can not be opened by clicking on the URL..
             </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.SurveyPlanner_SurveyStarted_Subject">
            <summary>
              Looks up a localized string similar to {0} (For {1}).
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.SurveyPortfolio_ContractedVendor">
            <summary>
              Looks up a localized string similar to Surveys for Services provided by Contracted Vendors.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.SurveyPortfolio_ContractedVendorByMA">
            <summary>
              Looks up a localized string similar to Surveys for Services provided by Contracted Vendors evaluated by Managing Agents.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.SurveyPortfolio_Error">
            <summary>
              Looks up a localized string similar to Error!.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.SurveyPortfolio_OtherReasons">
            <summary>
              Looks up a localized string similar to Surveys for Other Reasons.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TemplateType_Rdl">
            <summary>
              Looks up a localized string similar to Report Definition Language.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TemplateType_Rpt">
            <summary>
              Looks up a localized string similar to Crystal Reports.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Time_DaysPlural">
            <summary>
              Looks up a localized string similar to {0} days .
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Time_DaysSingular">
            <summary>
              Looks up a localized string similar to {0} day .
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Time_Future">
            <summary>
              Looks up a localized string similar to {0} later.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Time_HoursPlural">
            <summary>
              Looks up a localized string similar to {0} hours .
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Time_HoursSingular">
            <summary>
              Looks up a localized string similar to {0} hour .
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Time_MinutesPlural">
            <summary>
              Looks up a localized string similar to {0} minutes .
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Time_MinutesSingular">
            <summary>
              Looks up a localized string similar to {0} minute .
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Time_MomentsAgo">
            <summary>
              Looks up a localized string similar to moments.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Time_MonthPlural">
            <summary>
              Looks up a localized string similar to about {0} months.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Time_Now">
            <summary>
              Looks up a localized string similar to now.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Time_Past">
            <summary>
              Looks up a localized string similar to {0} ago.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Time_SecondsPlural">
            <summary>
              Looks up a localized string similar to {0} seconds .
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Time_SecondsSingular">
            <summary>
              Looks up a localized string similar to {0} second .
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Time_YearPlural">
            <summary>
              Looks up a localized string similar to about {0} years.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Time_YearSingular">
            <summary>
              Looks up a localized string similar to about {0} year.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TimeUnit_Days">
            <summary>
              Looks up a localized string similar to Days.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TimeUnit_Days1">
            <summary>
              Looks up a localized string similar to Days.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TimeUnit_Hours">
            <summary>
              Looks up a localized string similar to Hours.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TimeUnit_Hours1">
            <summary>
              Looks up a localized string similar to Hours.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TimeUnit_Minutes">
            <summary>
              Looks up a localized string similar to Minutes.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TimeUnit_Minutes1">
            <summary>
              Looks up a localized string similar to Minutes.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TimeUnit_Month">
            <summary>
              Looks up a localized string similar to Month.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TimeUnit_Months">
            <summary>
              Looks up a localized string similar to Months.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TimeUnit_Months1">
            <summary>
              Looks up a localized string similar to Months.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TimeUnit_Quarter">
            <summary>
              Looks up a localized string similar to Quarter.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TimeUnit_Week">
            <summary>
              Looks up a localized string similar to Week.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TimeUnit_Weeks">
            <summary>
              Looks up a localized string similar to Weeks.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TimeUnit_Weeks1">
            <summary>
              Looks up a localized string similar to Weeks.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TimeUnit_Year">
            <summary>
              Looks up a localized string similar to Year.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TimeUnit_Years">
            <summary>
              Looks up a localized string similar to Years.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TimeUnit_Years1">
            <summary>
              Looks up a localized string similar to Years.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TransactionType_Adjust">
            <summary>
              Looks up a localized string similar to Adjust.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TransactionType_CheckIn">
            <summary>
              Looks up a localized string similar to Check In.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TransactionType_CheckOut">
            <summary>
              Looks up a localized string similar to Check Out.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TransactionType_Issue">
            <summary>
              Looks up a localized string similar to Issue.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TransactionType_Receive">
            <summary>
              Looks up a localized string similar to Receive.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TransactionType_Return">
            <summary>
              Looks up a localized string similar to Return.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TransactionType_StoreTransfer">
            <summary>
              Looks up a localized string similar to Store-to-Store Transfer.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TriggeringEventName_Approve">
            <summary>
              Looks up a localized string similar to Approved.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TriggeringEventName_Approve_Supporter">
            <summary>
              Looks up a localized string similar to Supported.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.TriggeringEventName_Reject">
            <summary>
              Looks up a localized string similar to Rejected.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.UnitOfMeasureText_Hour">
            <summary>
              Looks up a localized string similar to Hour.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.WhereUsed_General">
            <summary>
              Looks up a localized string similar to General.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.WhereUsed_NotifyAssignedWorkflowRecipients">
            <summary>
              Looks up a localized string similar to Notify Assigned Workflow Recipients.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Work_Priority0">
            <summary>
              Looks up a localized string similar to 0 (Lowest).
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Work_Priority1">
            <summary>
              Looks up a localized string similar to 1.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Work_Priority2">
            <summary>
              Looks up a localized string similar to 2.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Strings.Work_Priority3">
            <summary>
              Looks up a localized string similar to 3 (Highest).
            </summary>
        </member>
        <member name="T:LogicLayer.TWork">
            <summary>
            Summary description for OVendor
            </summary>
            <summary>
            Summary description for OWork
            </summary>
            <summary>
            Summary description for OVendor
            </summary>
        </member>
        <member name="T:LogicLayer.OWork">
            <summary>
            Represents a work object, or a work instruction used to instruct an
            in-house team of maintenance staff or external contractors to carry
            out repair works and routine maintenance works.
            <para></para>
            It should be noted that all work objects are never associated with
            any costs outlay that the company has to bear. All costs associated
            with this work are indirect and are paid by other means. For example,
            costs of maintenance contractors are paid through upfront warranty
            or insurance-type of contracts; costs of in-house maintenance staff
            are paid through their regular salary; costs of materials are paid
            through purchase into stores.
            <para></para>
            Thus, costs associated with this work are considered costs of
            maintenance, and are not directly payable through the finance..
            </summary>
            <summary>
            Represents a work object, or a work instruction used to instruct an
            in-house team of maintenance staff or external contractors to carry
            out repair works and routine maintenance works.
            <para></para>
            It should be noted that all work objects are never associated with
            any costs outlay that the company has to bear. All costs associated
            with this work are indirect and are paid by other means. For example,
            costs of maintenance contractors are paid through upfront warranty
            or insurance-type of contracts; costs of in-house maintenance staff
            are paid through their regular salary; costs of materials are paid
            through purchase into stores.
            <para></para>
            Thus, costs associated with this work are considered costs of
            maintenance, and are not directly payable through the finance..
            </summary>
        </member>
        <member name="M:LogicLayer.OWork.AcknowledgeWork">
             <summary>
            
             </summary>
        </member>
        <member name="M:LogicLayer.OWork.ArriveWork">
             <summary>
            
             </summary>
        </member>
        <member name="M:LogicLayer.OWork.CompleteWork">
             <summary>
            
             </summary>
        </member>
        <member name="M:LogicLayer.OWork.Created">
            <summary>
            Occurs when the work object is first created.
            </summary>
        </member>
        <member name="M:LogicLayer.OWork.Saving">
            --------------------------------------------------------------
            <summary>
            Called just before the object is saved.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OWork.Deactivating">
            --------------------------------------------------------------
            <summary>
            Clear all reservations before deleting the work.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OWork.IsDuplicateWorkCost(LogicLayer.OWorkCost)">
            --------------------------------------------------------------
            <summary>
            Check if the work cost entered is a duplicate work cost.
            Returns true if so, false otherwise.
            </summary>
            <param name="workCost"></param>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OWork.UpdateChecklist">
            --------------------------------------------------------------
            <summary>
            Remove the existing checklist attached to this work order
            and update a new set of checklist items.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OWork.AddParameters(System.Collections.Generic.List{System.Guid},System.Boolean)">
            --------------------------------------------------------------
            <summary>
            Add parameters to this work order for input.
            </summary>
            <param name="idList"></param>
            <param name="isLocationTypeParameter"></param>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OWork.GetWorksDataTable(Anacle.DataFramework.ExpressionCondition)">
            --------------------------------------------------------------
            <summary>
            Get a data table of all the works currently attached to
            this scheduled work. Primarily used for Gantt chart display
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OWork.GetEligibleHelpdeskUsers">
            --------------------------------------------------------------
            <summary>
            Get a list of helpdesk users who are eligible to
            pick up this work and assign to a supervisor
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OWork.SetCallerDetailsToCurrentUser">
            --------------------------------------------------------------
            <summary>
            Set the work's caller details to the current user's details
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OWork.GetTechnicianUsers">
            --------------------------------------------------------------
            <summary>
            Get all technician users assigned to this work.
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OWork.SetServiceLevelLimits(LogicLayer.OServiceLevelDetail)">
            --------------------------------------------------------------
            <summary>
            Sets the acknowledgement, arrival and completion date/time
            limit based on the service level detail.
            </summary>
            <param name="serviceLevelDetail"></param>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OWork.CreateNewWorkOrderBasedOnSchedule">
            --------------------------------------------------------------
            <summary>
            Creates a new work order if there is a scheduled work that
            created this work, and the scheduled work is based on
            floating scheduling.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OWork.GetApplicableServiceLevelDetail(System.Int32)">
            --------------------------------------------------------------
            <summary>
            Get the applicable service level detail that applies to this
            work. The applicable service level detail is based on:
            - Type of Service
            - Location
            - Priority
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OWork.GetAcknowledgementTimeLimitInMinutes(System.Int32)">
            --------------------------------------------------------------
            <summary>
            Get the number of minutes that the n-th reminder should be
            sent if the work is not acknowledged.
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OWork.GetArrivalTimeLimitInMinutes(System.Int32)">
            --------------------------------------------------------------
            <summary>
            Get the number of minutes that the n-th reminder should be
            sent if the work is not arrived on-site.
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OWork.GetCompletionTimeLimitInMinutes(System.Int32)">
            --------------------------------------------------------------
            <summary>
            Get the number of minutes that the n-th reminder should be
            sent if the work is not completed.
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OWork.AddMinutes(System.DateTime,System.Nullable{System.Int32})">
            --------------------------------------------------------------
            <summary>
            Add minutes to the date time and return the resulting date/time.
            </summary>
            <param name="dateTime"></param>
            <param name="timeInMinutes"></param>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OWork.ClearReservations">
             --------------------------------------------------------------
             <summary>
             Lock and unreserve all store items currently set up in the
             work's work cost.
            
             Once this method is called, the application should not
             update the work cost anymore.
             </summary>
             --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OWork.ValidateSufficientStoreItems">
             --------------------------------------------------------------
             <summary>
             This method validates if there are sufficient store items
             in the store to meet the check-out requests of all work
             cost line items in this work order.
            
             An item can be checked-out without restrictions provided it
             was previously reserved (up to the quantity it was
             reserved). If, however, the quantity to be checked out,
             is more than the quantity reserved, or if there was
             no reservation at all, then this method checks to ensure
             that the store's physical balance - total reservations >=
             the additional items requested for check out. If the condition
             holds true, the check-out can proceed. If the condition
             is false, the workflow prevents the check-out, and throws
             a validation error.
            
             Rewrite another method, if the required logic is different.
             </summary>
             <returns></returns>
             --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OWork.ValidateAllStoreBinsSpecified">
            --------------------------------------------------------------
            <summary>
            Validate that for each work cost item that is a material,
            that the store bin and catalogue id must be specified.
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OWork.ValidateAllTechniciansSpecified">
            --------------------------------------------------------------
            <summary>
            Validate that for each work cost item that is a material,
            that the store bin and catalogue id must be specified.
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OWork.GetAssignedTechnicians">
            <summary>
            Gets a list of assigned technicians.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OWork.UpdateWorkCompleteFields">
            <summary>
            Completes the work by updating the percentage
            progress and the work completion date/time.
            <para></para>
            This method is called by the workflow when it
            enters the PendingClosure state.
            </summary>
        </member>
        <member name="M:LogicLayer.OWork.ValidateStoreBinsNotLocked">
            <summary>
            Validates that none of the store bins selected
            in the work cost are locked. This should only be
            called when the user is able to enter the actual
            costs of the work.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OWork.SaveCaseAsPendingExecution">
             <summary>
             2011.06.10, Kien Trung
             Create a new case if there is requestor selected.
            
             </summary>
        </member>
        <member name="M:LogicLayer.OWork.ValidateItemsNotGeneratedToRFQ(System.Collections.Generic.List{System.Guid})">
            <summary>
            Validates that the list of RFQ line item numbers and descriptions
            that have not been generated into POs.
            </summary>
            <param name="purchaseRequestItemIds"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OWork.ValidateInventoryItems(System.Boolean,LogicLayer.OWork)">
            <summary>
            Validates the inventory items.
            If IsCheckOut is set to true: will check if any inventory items have actualquantity > 0
            If IsCheckOut is set to false: will check if any inventory items have actualquantity = 0
            </summary>
            <param name="IsCheckOut">if set to <c>true</c> [is check out].</param>
            <param name="work">The work.</param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OWork.ReserveInventoryItems">
            <summary>
            Reserves the inventory items.
            </summary>
        </member>
        <member name="M:LogicLayer.OWork.Cancel">
            <summary>
            Cancels this Work.
            </summary>
        </member>
        <member name="M:LogicLayer.OWork.StoreCheckOutFromWork(LogicLayer.OWork,System.Collections.Generic.List{LogicLayer.OWorkCost})">
            <summary>
            Store check out from Work.
            </summary>
            <param name="work">The work.</param>
            <param name="lstWorkCost">The list work cost.</param>
        </member>
        <member name="P:LogicLayer.OWork.CallerTypeID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table
            that indicates the type of caller.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.CallerID">
            <summary>
            [Column] Gets or sets the foreign key to the User table
            that indicates the user who called to request for this
            work.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.CallerName">
            <summary>
            [Column] Gets or sets the name of the caller. When
            selected the caller in the user interface, this field
            gets automatically populated with the same field from
            the user record.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.CallerPhone">
            <summary>
            [Column] Gets or sets the contact of the caller. When
            selected the caller in the user interface, this field
            gets automatically populated with the same field from
            the user record.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.CallerCellPhone">
            <summary>
            [Column] Gets or sets the contact of the caller. When
            selected the caller in the user interface, this field
            gets automatically populated with the same field from
            the user record.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.CallerEmail">
            <summary>
            [Column] Gets or sets the contact of the caller. When
            selected the caller in the user interface, this field
            gets automatically populated with the same field from
            the user record.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.CallerFax">
            <summary>
            [Column] Gets or sets the contact of the caller. When
            selected the caller in the user interface, this field
            gets automatically populated with the same field from
            the user record.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.LocationID">
            <summary>
            [Column] Gets or sets the foreign key to the Location table
            that indicates the location this work is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.EquipmentID">
            <summary>
            [Column] Gets or sets the foreign key to the Equipment table
            that indicates the equipment this work is associated with.
            If this value is not null, then the LocationID must
            be the same as the equipment's LocationID at the time
            this work is created.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.ChecklistID">
            <summary>
            [Column] Gets or sets the foreign key to the Checklist table
            that indicates the checklist that is attached to this work.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.Priority">
            <summary>
            [Column] Gets or sets a value to indicate the priority
            of this work. The higher the number, the higher the priority.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.WorkDescription">
            <summary>
            [Column] Gets or sets the description of the work.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.TypeOfWorkID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table
            that indicates the type of work this work is classified
            under.
            <para></para>
            Type of work usually refers to a broad classification
            like corrective maintenance, preventive maintenance, etc.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.TypeOfServiceID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table
            that indicates the type of service this work is
            classified under.
            <para></para>
            Type of service usually refers to a
            broad classification of nature of the problem, for
            example: Lighting; Electrical; Mechanical; Escalator;
            Lift, etc.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.TypeOfProblemID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table
            that indicates the type of problem this work is
            classified under.
            <para></para>
            Type of problem usually refers to a
            detailed classification of nature of the problem related
            to the type of service, for example, where type of service
            is Light, type of problem can be one of the following:
            Light bulb blown; Lights flickering; whereas under Lifts,
            the type of problem can be one of the following:
            Lift door jammed; lift broken down; lift buttons
            malfunctioning; etc.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.SupervisorID">
            <summary>
            [Column] Gets or sets the foreign key to the User table
            that indicates the user who will be responsible for
            overseeing the progress of the work, and closing it
            as well.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.ApproverID">
            <summary>
            [Column] Gets or sets the foreign key to the User table
            that indicates the user who will be responsible for
            approving the work, if the estimated cost of the work
            goes beyond the 'work cost limit' of the supervisor of
            this work.
            <para></para>
            Note that in the default Anacle.EAM the work can only
            be submitted for approval only if it goes into planning
            stage, and the total estimated cost of work exceeds the
            supervisor's work cost limit.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.ScheduledStartDateTime">
            <summary>
            [Column] Gets or sets the date/time this work is
            scheduled to start.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.ScheduledEndDateTime">
            <summary>
            [Column] Gets or sets the date/time this work is
            scheduled to end.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.ActualStartDateTime">
            <summary>
            [Column] Gets or sets the actual starting date/time this work.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.ActualEndDateTime">
            <summary>
            [Column] Gets or sets the actual end date/time this work.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.ResolutionDescription">
            <summary>
            [Column] Gets or sets a description on how the problem
            was resolved.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.CauseOfProblemID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table
            that indicates cause of the problem this work is classified
            under.
            <para></para>
            The cause of problem refers to the classification of the
            diagnosis related to the type of problem. For example,
            if the type of problem as 'Lighting not working,' the
            cause of problem could be due to one of the following:
            Power Failure, Lighting Bulb Blown, Power Not Turned On.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.ResolutionID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table
            that indicates the resolution to the problem this work is
            classified under.
            <para></para>
            The resolution refers to the classification of the
            action taken to fix the problem. For example,
            if the type of problem as 'Power Failure,' the
            resolution could one of the following: Reset Fuse,
            Reset Generator, Contacted Power Company, etc.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.PercentageComplete">
            <summary>
            [Column] Gets or sets a value that indicates how
            much of the work is complete (in percentage).
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.ContractID">
            <summary>
            [Column] Gets or sets the foreign key to the Contract table
            that indicates the contract that this work is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.IsChargedToCaller">
            <summary>
            [Column] Gets or sets a value that indicates whether this work
            should be charged to the caller. This is normally used in
            tenant / landlord scenarios where works to a unit
            may incur a charge that can be recovered from the tenant.
            <para></para>
            <list>
              <item>0 - No, this work will not be charged to the caller.</item>
              <item>1 - Yes, this work will be charged to the caller.</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.IsEquipmentDown">
            <summary>
            [Column] Gets or sets a value that indicates whether the equipment'
            associated with the work was shut down or out of operation during
            the duration of the work. This allows us to track the down time
            of the equipment.
            <para></para>
            <list>
              <item>0 - No, the equipment was not shut down or out of operation.</item>
              <item>1 - Yes, the equipment was shut down or out of operation.</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.GeneratedByPointID">
            <summary>
            [Column] Gets or sets the foreign key to the Point
            table that represents the breached point that generated
            this work.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.GeneratedByReadingID">
            <summary>
            [Column] Gets or sets the foreign key to the Reading
            table that represents the reading that breached
            the point that generated this work.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.GeneratedByOPCAEEventID">
            <summary>
            [Column] Gets or sets the foreign key to the OPCAEEvent
            table that represents the event trigger that generated this work.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.GeneratedByOPCAEEventHistoryID">
            <summary>
            [Column] Gets or sets the foreign key to the OPCAEEventHitosyr
            table that represents the event history that generated this work.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.EquipmentDownStartDateTime">
            <summary>
            [Column] Gets or sets the date/time the equipment that was shut
            down or out of operation. This is applicable only if
            IsEquipmentDown = 1.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.EquipmentDownEndDateTime">
            <summary>
            [Column] Gets or sets the date/time the equipment that brought
            back up into operation. This is applicable only if IsEquipmentDown = 1.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.AcknowledgementDateTime">
            <summary>
            [Column] Gets or sets the date/time this work was acknowledged.
            Note in the default Anacle.EAM, that the acknowledgement date/time
            can be set by a user who has access to this work during the
            work in progress and pending closure statuses.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.AcknowledgementDateTimeLimit">
            <summary>
            [Column] Gets or sets the date/time this work must be acknowledged
            by, before the work is considered to have failed the service
            level limit for acknowledgement.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.ArrivalDateTime">
            <summary>
            [Column] Gets or sets the date/time the contractor or in-house
            maintenance team arrived on-site.
            Note in the default Anacle.EAM, that the arrival date/time
            can be set by a user who has access to this work during the
            work in progress and pending closure statuses.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.ArrivalDateTimeLimit">
            <summary>
            [Column] Gets or sets the date/time this work the contractor
            or in-house maintenance team must arrive on-site.
            by, before the work is considered to have failed the service
            level limit for arrival.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.CompletionDateTime">
            <summary>
            [Column] Gets or sets the date/time this work was completed.
            Note in the default Anacle.EAM, that the completion date/time
            can be set by a user who has access to this work during the
            work in progress and pending closure statuses.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.CompletionDateTimeLimit">
            <summary>
            [Column] Gets or sets the date/time this work must be completed.
            by, before the work is considered to have failed the service
            level limit for completion.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.Case">
            <summary>
            Gets or sets the reference to the OCase object
            that represents the case this purchase order
            is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.TypeOfWork">
            <summary>
            Gets or sets the OCode object that represents the
            type of work this work is classified under.
            <para></para>
            Type of work usually refers to a broad classification
            like corrective maintenance, preventive maintenance, etc.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.TypeOfService">
            <summary>
            Gets or sets the O object that represents the type of service this work is
            classified under.
            <para></para>
            Type of service usually refers to a
            broad classification of nature of the problem, for
            example: Lighting; Electrical; Mechanical; Escalator;
            Lift, etc.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.TypeOfProblem">
            <summary>
            Gets or sets the O object that represents
            the type of problem this work is
            classified under.
            <para></para>
            Type of problem usually refers to a
            detailed classification of nature of the problem related
            to the type of service, for example, where type of service
            is Light, type of problem can be one of the following:
            Light bulb blown; Lights flickering; whereas under Lifts,
            the type of problem can be one of the following:
            Lift door jammed; lift broken down; lift buttons
            malfunctioning; etc.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.CauseOfProblem">
            <summary>
            Gets or sets the O object that represents
            the problem this work is classified
            under.
            <para></para>
            The cause of problem refers to the classification of the
            diagnosis related to the type of problem. For example,
            if the type of problem as 'Lighting not working,' the
            cause of problem could be due to one of the following:
            Power Failure, Lighting Bulb Blown, Power Not Turned On.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.Resolution">
            <summary>
            Gets or sets the O object that represents
            the resolution to the problem this work is
            classified under.
            <para></para>
            The resolution refers to the classification of the
            action taken to fix the problem. For example,
            if the type of problem as 'Power Failure,' the
            resolution could one of the following: Reset Fuse,
            Reset Generator, Contacted Power Company, etc.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.CallerType">
            <summary>
            Gets or sets the O object that represents the type of the caller
            Caller type can be Internal or External Or Resident
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.Supervisor">
            <summary>
            Gets or sets the O object that represents
            the user who will be responsible for
            overseeing the progress of the work, and closing it
            as well.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.Approver">
            <summary>
            Gets or sets the O object that represents
            the user who will be responsible for
            approving the work, if the estimated cost of the work
            goes beyond the 'work cost limit' of the supervisor of
            this work.
            <para></para>
            Note that in the default Anacle.EAM the work can only
            be submitted for approval only if it goes into planning
            stage, and the total estimated cost of work exceeds the
            supervisor's work cost limit.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.Location">
            <summary>
            Gets or sets the OLocation object that represents the location
            this work is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.Equipment">
            <summary>
            Gets or sets the OLocation object that represents the equipment
            this work is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.Checklist">
            <summary>
            Gets or sets the O object that represents
            the checklist that is attached to this work.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.Contract">
            <summary>
            Gets or sets the O object that represents
            the contract that this work is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.SchedulerCounter">
            <summary>
            [Column] Gets or sets a value that indicates
            the cycle number of this work, with reference to the
            scheduled work object that generated this work.
            <para></para>
            This is useful to determine the checklist to use
            a floating schedule where the works are generated
            only when the previous work is completed.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.ScheduledWorkID">
            <summary>
            [Column] Gets or sets the foreign key to the ? table
            that indicates the scheduled work that generated this
            work. This value is non null only if this work
            was generated from a scheduled work.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.WorkCost">
            <summary>
            Gets a one-to-many list of OWorkCost objects that represents
            a list of maintenance costs that this work will incur or
            has incurred.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.WorkChecklistItems">
            <summary>
            Gets a one-to-many list of OWorkChecklistItem objects that represents
            a list of checklist steps (either actions or inspections) that the
            contractor or personnel assigned to the work is expected to perform.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.WorkParameterReadings">
            <summary>
            Gets a one-to-many list of OWorkParameterReading objects that represents
            parameters readings that the contractor or personnel assigned to the
            work is expected to perform.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.ScheduledWork">
            <summary>
            Gets or sets the OScheduledWork object that represents
            the scheduled work that generated this
            work. This value is non null only if this work
            was generated from a scheduled work.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.Parent">
            <summary>
            Gets or sets the OWork object that represents
            the parent work object that this current work is
            related to.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.Children">
            <summary>
            Gets a one-to-many list of OWork objects that represents
            a list of works that this current work is related to.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.Caller">
            <summary>
            Gets or sets the OUser object that represents the user
            the user who called to request for this
            work.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.TaskTypeOfService">
            <summary>
            Gets the type of service associated with this work.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.TotalEstimatedCost">
            --------------------------------------------------------------
            <summary>
            Get the total estimated cost.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="P:LogicLayer.OWork.TotalActualCost">
            --------------------------------------------------------------
            <summary>
            Get the total actual cost.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="P:LogicLayer.OWork.AssignedTechniciansNames">
            --------------------------------------------------------------
            <summary>
            Get a comma separated list of technician names. This method
            is used for notification messages, to show the list of
            assigned technicians.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="P:LogicLayer.OWork.ChargeToCallerText">
            <summary>
            For template
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.ReportedDateTime">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OWork.ChargeTypeID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OWork.TenantContactID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OWork.TenantLeaseID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OWork.RequestorID">
            <summary>
            [Column] Gets or sets the foreign key to the user table.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.RequestorName">
            <summary>
            [Column] Gets or sets the requestor name.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.RequestorCellPhone">
            <summary>
            [Column] Gets or sets the requestor cell phone.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.RequestorFax">
            <summary>
            [Column] Gets or sets the requestor fax number.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.RequestorEmail">
            <summary>
            [Column] Gets or sets the requestor email address.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.RequestorPhone">
            <summary>
            [Column] Gets or sets the requestor phone number.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.Requestor">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OWork.TenantLease">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OWork.TenantContact">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OWork.ChargeType">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OWork.WorkClassification">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OWork.ActualTypeOfWorkID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OWork.ActualTypeOfServiceID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OWork.ActualTypeOfProblemID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OWork.BillToAMOSStatus">
            <summary>
            Gets or sets Bill To Amos Status
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.AMOSErrorMessage">
            <summary>
            Gets or sets AMOS Error Message.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.LastestBillID">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OWork.RequestForQuotations">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OWork.NotifyWorkSupervisor">
            <summary>
            [Column] Gets or sets the foreign key to the User table
            that indicates the user who called to request for this
            work.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.EventToTrigger">
            <summary>
            [Column] Gets or sets the event to trigger when the
            Work is created from a Case.
            </summary>
        </member>
        <member name="P:LogicLayer.OWork.TaskAmount">
            <summary>
            Returns the total charge out amount.
            </summary>
        </member>
        <member name="T:LogicLayer.OUtilityValue">
            <summary>
            Represents a line item entry that contains the
            reading of a location type parameter.
            </summary>
        </member>
        <member name="P:LogicLayer.OUtilityValue.UtilityID">
            <summary>
            [Column] Gets or sets the foreign key to the Utility table 
            that indicates the utility entry object containing this
            record.
            </summary>
        </member>
        <member name="P:LogicLayer.OUtilityValue.LocationTypeUtilityID">
            <summary>
            [Column] Gets or sets the foreign key to the LocationTypePoint table 
            that indicates the parameter this reading / value is for.
            </summary>
        </member>
        <member name="P:LogicLayer.OUtilityValue.Value">
            <summary>
            [Column] Gets or sets the value of the reading for this
            record.
            </summary>
        </member>
        <member name="P:LogicLayer.OUtilityValue.Utility">
            <summary>
            Gets or sets the OUtility object that represents
            the utility entry object containing this
            record.
            </summary>        
        </member>
        <member name="P:LogicLayer.OUtilityValue.LocationTypeUtility">
            <summary>
            Gets or sets the OLocationTypeUtility object that represents
            the parameter this reading / value is for.
            </summary>
        </member>
        <member name="T:LogicLayer.TStoreItem">
            <summary>
            Summary description for OStoreItem
            Catalogue item that could be store in the store.
            Actual item with its quantity will be reflected in the storebin object
            </summary>
        </member>
        <member name="T:LogicLayer.OStoreItem">
            <summary>
            Represents a record containing information about the item 
            that its containing store currently keeps. This information
            include the cost accounting method (FIFO/LIFO) and whether
            or not the item is stocked, or non-stocked.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreItem.IsRemovable">
            <summary>
            Disallow removing from the store if:
            <para></para>
            1. There are transactions against the store item. 
            <para></para>
            Returns true if deactivable, false otherwise. The 
            UIGridview makes use of this field to hide and show the
            DeleteObject button accordingly.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:LogicLayer.OStoreItem.HasItems(System.Guid)">
            <summary>
            Checks to see if the store bin with the specified storeBinId
            has any items currently held in the bin.
            </summary>
            <param name="storeBinId"></param>
            <returns></returns>
        </member>
        <member name="F:LogicLayer.OStoreItem.IsLowInventory">
            <summary>
            A flag that indicates if the inventory level
            of this item has fallen below the reorder threshold.
            <para></para>
            NOTE: This flag is updated only by the OStore.DetermineLowInventory()
            method.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreItem.Saving">
            <summary>
            Overrides the saving method to update the StoreBinItems
            with the same CatalogueID as this StoreItem to update their
            unit prices, if the Costing Type of this StoreItem has 
            been set up as Standard Costing.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItem.LastNotificationDate">
            <summary>
            [Column] Gets or sets the last date/time a reminder 
            notification was sent when the quantity this item fell below 
            threshold.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItem.StoreID">
            <summary>
            [Column] Gets or sets the foreign key to the Store that 
            indicates the store that this store item record belongs to.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItem.CatalogueID">
            <summary>
            [Column] Gets or sets the foreign key to the CatalogueID
            table to indicate the catalogue the item in this record belongs
            to.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItem.CostingType">
            <summary>
            [Column] Gets or sets the costing type, or the accounting method of an item of this catalogue in this store.
            <para></para>
            	<list>
            		<item>0 / StoreItemCostingType.FIFO: First-in-first-out </item>
            		<item>1 / StoreItemCostingType.LIFO: Last-in-first-out</item>
            		<item>3 / StoreItemCostingType.StandardCosting: Standard costing</item>
            		<item>4 / StoreItemCostingType.AverageCosting: Average costing</item>
            	</list>
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItem.ItemType">
            <summary>
            [Column] Gets or sets a value to indicate whether this item is checked for low-inventory.
            <para></para>
            	<list>
            		<item>0 / StoreItemType.Stocked: If the quantity for this item falls below threshold, it can be re-ordered.</item>
            		<item>1 / StoreItemType.NonStocked: This item will never be re-ordered even if it falls to zero.</item>
            	</list>
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItem.StandardCostingUnitPrice">
            <summary>
            [Column] Gets or sets the standard unit price of this 
            item applicable if the costing type is Standard Costing.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItem.ReorderDefault">
            <summary>
            [Column] Gets or sets the quantity to re-order if the 
            quantity of this item falls below threshold.
            </summary>
            
        </member>
        <member name="P:LogicLayer.OStoreItem.ReorderThreshold">
            <summary>
            [Column] Gets or sets the threshold, so that if the 
            quantity of this item in the store falls below this threshold, 
            it is considered to be low, and a re-order can take place.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItem.Catalogue">
            <summary>
            Gets or sets the OCatalogue object that represents the 
            catalogue the item in this record belongs to.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItem.Store">
            <summary>
            Gets or sets the OStore object that represents the store
            that this store item record belongs to.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItem.StoreItemTransactions">
            <summary>
            Gets a one-to-many list of O objects that represents a list of 
            transactions for the items of this record's catalogue in this store.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItem.CostingTypeText">
            <summary>
            Gets the localized costing type text for display on-screen.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItem.ItemTypeText">
            <summary>
            Gets the localized item type text for display on-screen.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItem.TotalPhysicalQuantity">
            <summary>
            Gets the total physical quantity of this item in this store.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItem.TotalPhysicalCost">
            <summary>
            Gets the total physical quantity of this item in this store.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItem.TotalAvailableQuantity">
            <summary>
            Gets the total available quantity of this item in this store.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItem.HasLowInventory">
            <summary>
            Checks if the inventory level (available quantity)
            has fallen below the reorder threshold.
            </summary>
        </member>
        <member name="T:LogicLayer.StoreItemCostingType">
            <summary>
            Contains a set of values that enumerate the 
            various costing types supported by the system.
            </summary>
        </member>
        <member name="F:LogicLayer.StoreItemCostingType.FIFO">
            <summary>
            First-in first-out.
            </summary>
        </member>
        <member name="F:LogicLayer.StoreItemCostingType.LIFO">
            <summary>
            Last-in first-out.
            </summary>
        </member>
        <member name="F:LogicLayer.StoreItemCostingType.Expiry">
            <summary>
            First-expire first-out. 
            </summary>
        </member>
        <member name="F:LogicLayer.StoreItemCostingType.StandardCosting">
            <summary>
            Standard costing.
            </summary>
        </member>
        <member name="F:LogicLayer.StoreItemCostingType.AverageCosting">
            <summary>
            Average costing.
            </summary>
        </member>
        <member name="M:LogicLayer.Extensions.Is(System.String,System.String[])">
            <summary>
            Checks if the source string is contained in any of the items
            as specified in the items.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.Extensions.TranslateObjectType(System.String)">
            <summary>
            Translates the object type based on resource file
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.Extensions.TranslateWorkflowState(System.String)">
            <summary>
            Translates the workflow state based on resource file
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OMessage.SendSms(System.String,System.String)">
            <summary>
            Send an SMS to one or many recipients. You can indicate
            multiple recipients by separating the cellphone numbers
            in the recipients parameter with a comma or semi-colon.
            </summary>
            <param name="recipients"></param>
            <param name="message"></param>
        </member>
        <member name="M:LogicLayer.OMessage.SendMail(System.String,System.String,System.String,System.String)">
            <summary>
            Send an e-mail to one or many recipients in text format.
            You can indicate multiple recipients by separating the 
            e-mail addresses in the recipients parameter with a comma 
            or semi-colon.
            </summary>
            <param name="recipients"></param>
            <param name="sender"></param>
            <param name="subjectHeader"></param>
            <param name="message"></param>
        </member>
        <member name="M:LogicLayer.OMessage.SendMail(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Send an e-mail to one or many recipients in text or HTML format.
            You can indicate multiple recipients by separating the 
            e-mail addresses in the recipients parameter with a comma 
            or semi-colon.
            </summary>
            <param name="recipients"></param>
            <param name="sender"></param>
            <param name="subjectHeader"></param>
            <param name="message"></param>
        </member>
        <member name="M:LogicLayer.OMessage.SendMail(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Send an e-mail to one or many recipients in text or HTML format.
            You can indicate multiple recipients by separating the 
            e-mail addresses in the recipients parameter with a comma 
            or semi-colon.
            </summary>
            <param name="recipients"></param>
            <param name="sender"></param>
            <param name="subjectHeader"></param>
            <param name="message"></param>
        </member>
        <member name="M:LogicLayer.OMessage.SendMail(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Nullable{System.Int32},LogicLayer.OMessageAttachment[])">
            <summary>
            Send an e-mail to one or many recipients in text or HTML format.
            You can indicate multiple recipients by separating the 
            e-mail addresses in the recipients parameter with a comma 
            or semi-colon.
            </summary>
            <param name="recipients"></param>
            <param name="sender"></param>
            <param name="subjectHeader"></param>
            <param name="message"></param>
        </member>
        <member name="M:LogicLayer.OMessage.SendMail(System.String,System.String,System.String,System.String,System.Boolean,LogicLayer.OMessageAttachment[])">
            <summary>
            Send an e-mail to one or many recipients in text or HTML format.
            You can indicate multiple recipients by separating the 
            e-mail addresses in the recipients parameter with a comma 
            or semi-colon.
            </summary>
            <param name="recipients"></param>
            <param name="sender"></param>
            <param name="subjectHeader"></param>
            <param name="message"></param>
        </member>
        <member name="M:LogicLayer.OMessage.ClearMessageHistory(System.DateTime)">
            <summary>
            Deletes messages from the message history table older than 
            n number of days, where n is a value set up in the Application Settings.
            <para></para>
            This method is called from the application Login page.
            </summary>
        </member>
        <member name="P:LogicLayer.OMessage.NumberOfAttachments">
            <summary>
            Gets or sets a flag indicating whether the message has attachments
            </summary>
        </member>
        <member name="P:LogicLayer.OMessage.IsSuccessfulText">
            <summary>
            Gets a yes/no text indicating whether the message
            was successfully sent out.
            </summary>
        </member>
        <member name="P:LogicLayer.OMessage.MessagePriority">
            <summary>
            
            </summary>
        </member>
        <member name="T:LogicLayer.EnumMessagePriority">
            <summary>
            This is to indicate Importance of email Message.
            </summary>
        </member>
        <member name="T:LogicLayer.TApprovalProcess">
            <summary>
            Summary description for OApprovalProcess
            </summary>
            <summary>
            Summary description for OApprovalProcess
            </summary>
        </member>
        <member name="T:LogicLayer.OApprovalProcess">
            <summary>
            Represents an approval process specific to a persistent object
            type and a state within its workflow. This approval process
            specifies approval hierarchies applicable to the persistent object
            depending on the location/equipment specified in the persistent
            object.
            </summary>
        </member>
        <member name="M:LogicLayer.OApprovalProcess.IsDeactivatable">
            <summary>
            Disallow deleting if:
            <para></para>
            1. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OApprovalProcess.GetAllApprovalProcesses">
            <summary>
            Returns a list of all active approval processes in the system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OApprovalProcess.GetApprovalProcesses_original(LogicLayer.LogicLayerPersistentObject)">
            <summary>
            Gets a list of approval process details object by the
            specified approval process code and applicable to the 
            persistent object.
            </summary>
            <param name="logicLayerPersistentObject"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OApprovalProcess.GetApprovalHierarchyLevels(LogicLayer.LogicLayerPersistentObjectBase,System.Collections.Generic.List{LogicLayer.OApprovalHierarchyLevel},System.Nullable{System.Int32}@)">
            <summary>
            Gets the approval hierarclies applicable to the specified
            persistent object. This table shows
            the list of approvers that the task represented by
            the persistent object will be routed to. 
            </summary>
            <param name="logicLayerPersistentObject"></param>
            <returns>
            0 - Approval is required.
            1 - This task will be approved by this user.
            2 - There is no approval required (only for when 
            forwarding mode = None)
            3 - Approval is required, but no approver is found.
            </returns>
        </member>
        <member name="M:LogicLayer.OApprovalProcess.LinkApprovalProcessLimits">
            <summary>
            Links the notification process timings to the notification
            hierarchy levels.
            </summary>
        </member>
        <member name="M:LogicLayer.OApprovalProcess.CheckApprovalLimitValue(LogicLayer.OApprovalProcess)">
            <summary>
            
            </summary>
            <param name="AppProcess"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OApprovalProcess.GetApprovalProcesses(LogicLayer.LogicLayerPersistentObject)">
            <summary>
            Gets a list of approval process details object by the
            specified approval process code and applicable to the
            persistent object after filtering those whose
            FLEE conditions return true.
            </summary>
            <param name="logicLayerPersistentObject"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OApprovalProcess.GetApprovalProcessesRegardlessOfFLEECondition(LogicLayer.LogicLayerPersistentObject)">
            <summary>
            Gets a list of approval process details object by the
            specified approval process code and applicable to the
            persistent object.
            </summary>
            <param name="logicLayerPersistentObject"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OApprovalProcess.MinimalApprovalLevel(System.Decimal)">
             <summary>
            
             </summary>
             <param name="amount"></param>
             <returns></returns>
        </member>
        <member name="M:LogicLayer.OApprovalProcess.ValidateNonDefaultApprovalProcessLimits">
            <summary>
            Validates that if the non-default timings are
            used, that all process timings are in
            increasing order, with no gaps in between.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OApprovalProcess.GetApprovalProcessForBudgetReallocation(LogicLayer.LogicLayerPersistentObject,LogicLayer.OAccount,LogicLayer.OAccount)">
            <summary>
            Gets the approval process for budget reallocation (included within WJ reallocation).
            </summary>
            <param name="fromAcc">From acc.</param>
            <param name="toAcc">To acc.</param>
            <param name="conditionLocation">The condition location.</param>
            <param name="conditionEquipment">The condition equipment.</param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OApprovalProcess.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:LogicLayer.OApprovalProcess.LocationID">
            <summary>
            [Column] Gets or sets the foreign key to the
            Location table that represents the location
            this approval process applies to.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalProcess.EquipmentID">
            <summary>
            [Column] Gets or sets the foreign key to the
            Equipment table that represents the equipment
            this approval process applies to.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalProcess.ObjectTypeName">
            <summary>
            [Column] Gets or sets the type name of the persistent
            object that this approval process applies to. 
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalProcess.ApprovalProcessID">
            <summary>
            [Column] Gets or sets the Foreign key to the ApprovalProcess table.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalProcess.ModeOfForwarding">
            <summary>
            [Column] Gets or sets the mode of forwarding for the approval
            process at this location/equipment.
            <para></para>
            The mode of forwarding determines how the object will be
            assigned to the users/roles in the approval hierarchy.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalProcess.Description">
            <summary>
            [Column] Gets or sets the description of
            this approval process detail.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalProcess.UseDefaultLimits">
            <summary>
            [Column] Gets or sets a flag indicating whether
            the default approval limits set in the approval
            hierarchy should be used.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalProcess.ApprovalHierarchyID">
            <summary>
            [Column] Gets or sets the Foreign key to the ApprovalHierarchy table.
            This is compulsory when the ModeOfApproval = 1
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalProcess.FLEECondition">
            <summary>
            [Column] Gets or sets the Fast Lightweight Expression Evaluator
            condition that returns a flag indicating whether this approval process 
            is applicable to the object.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalProcess.ApprovalHierarchy">
            <summary>
            Gets or sets the OApprovalHierarchy object representing
            the hierarchy of users/roles and their approval limits
            that will be used for approving objects.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalProcess.ApprovalProcessLimits">
            <summary>
            Gets a reference to a list of OApprovalHierarchy objects 
            representing the approval limits applicable to this
            approval process.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalProcess.Location">
            <summary>
            Gets or sets the OLocation object representing the
            location to which this approval process applies.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalProcess.Equipment">
            <summary>
            Gets or sets the OEquipment object representing the
            equipment to which this approval process applies.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalProcess.ModeOfForwardingText">
            <summary>
            Gets the text representing the mode of approval.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalProcess.AuditObjectDescription">
            <summary>
            Returns a string indicating a summarized description of
            this object that is to appear in the audit trail.
            </summary>
        </member>
        <member name="T:LogicLayer.ApprovalModeOfForwarding">
            <summary>
            Enumerates the different modes of approval forwarding.
            </summary>
        </member>
        <member name="F:LogicLayer.ApprovalModeOfForwarding.None">
            <summary>
            This indicates that the task will not be forwarded
            to any user/role and will be considered approved.
            </summary>
        </member>
        <member name="F:LogicLayer.ApprovalModeOfForwarding.Direct">
            <summary>
            This indicates that the task will be forwarded to
            the first user/role authorized to approve this
            task based on its amount.
            </summary>
        </member>
        <member name="F:LogicLayer.ApprovalModeOfForwarding.Hierarchical">
            <summary>
            This indicates that the task will be forwarded
            in a hierarchical manner from the first user/role
            in the approval hierarchy to the first user/role
            authorized to approve the task. Each assigned
            approver must approve the task before the next
            approver will be assigned the task for approval.
            </summary>
        </member>
        <member name="F:LogicLayer.ApprovalModeOfForwarding.HierarchicalWithLastRejectedSkipping">
            <summary>
            This indicates that the task will be forwarded
            in a hierarchical manner from the first user/role
            in the approval hierarchy to the first user/role
            authorized to approve the task. Each assigned
            approver must approve the task before the next
            approver will be assigned the task for approval.
            <para></para>
            However, if the task is rejected and resubmitted
            for approval, it starts off at the level that
            was rejected.
            </summary>
        </member>
        <member name="F:LogicLayer.ApprovalModeOfForwarding.All">
            <summary>
            This indicates that the task will be forwarded
            to the users/roles from the first in the hierarchy
            to the first authorized to approve the task all at
            once. When an assigned user approves the task, 
            it will be assigned to the all persons/roles from
            the next level to the first authorized to approve
            the task.
            </summary>
        </member>
        <member name="T:LogicLayer.ApprovalResult">
            <summary>
            Enumerates a list of approval results returned
            by the OApprovalProcessDetail.GetApprovalHierarchyLevels.
            </summary>
        </member>
        <member name="F:LogicLayer.ApprovalResult.ApprovalRequired">
            <summary>
            Indicates that approval is required, and the
            results returned contains the list of the
            approval hierarchy levels.
            </summary>
        </member>
        <member name="F:LogicLayer.ApprovalResult.Approved">
            <summary>
            Indicates that the task will be approved
            by the current user.
            </summary>
        </member>
        <member name="F:LogicLayer.ApprovalResult.NoApprovalRequired">
            <summary>
            Indicates that the task does not require
            any approval.
            </summary>
        </member>
        <member name="F:LogicLayer.ApprovalResult.NoApproversFound">
            <summary>
            Indicates that the task requires approval,
            but no appropriate approvers are found configured
            in the approval process.
            </summary>
        </member>
        <member name="F:LogicLayer.ApprovalResult.UnableToSubmit">
            <summary>
            Indicated that the task requires approval,
            but the person is not authorized.
            </summary>
        </member>
        <member name="F:LogicLayer.ApprovalResult.UnableToApprove">
            <summary>
            Indicates the task cannot be approved
            By the person due to the task has been approved by him/her
            </summary>
        </member>
        <member name="T:LogicLayer.ApprovalLimit">
            <summary>
            Declares some special approval limits with special meaning.
            </summary>
        </member>
        <member name="T:LogicLayer.OUserWebPartsPersonalization">
            <summary>
            Represents WebPart personalization used by ASP.NET
            to persist webparts personalization data.
            </summary>
        </member>
        <member name="M:LogicLayer.OUserWebPartsPersonalization.GetPersonalization(System.String,System.String,System.String)">
            <summary>
            Gets the personalization object with the specified
            application name, path and user name.
            </summary>
            <param name="applicationName"></param>
            <param name="path"></param>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUserWebPartsPersonalization.DeletePersonalization(System.String,System.String,System.String)">
            <summary>
            Physically removes the personalization object with 
            the specified application name, path and user name
            from the database.
            </summary>
            <param name="applicationName"></param>
            <param name="path"></param>
            <param name="userName"></param>
        </member>
        <member name="P:LogicLayer.OUserWebPartsPersonalization.ApplicationName">
            <summary>
            [Column] Gets or sets the application name
            that this personalization data is meant for.
            </summary>
        </member>
        <member name="P:LogicLayer.OUserWebPartsPersonalization.Path">
            <summary>
            [Column] Gets or sets the path of the page
            that this personalization data is meant for.
            </summary>
        </member>
        <member name="P:LogicLayer.OUserWebPartsPersonalization.UserName">
            <summary>
            [Column] Gets or sets the name of the user
            that this personalization data is meant for.
            <para></para>
            When the scope of the personalization data
            is non-user-specific, the UserName field
            can be an empty string.
            </summary>
        </member>
        <member name="P:LogicLayer.OUserWebPartsPersonalization.Bytes">
            <summary>
            [Column] Gets or sets the data bytes.
            </summary>
        </member>
        <member name="T:LogicLayer.TStoreStockTakeBinItem">
            <summary>
            Summary description for OStoreStockTakeItem
            </summary>
        </member>
        <member name="F:LogicLayer.TStoreStockTakeBinItem.PhysicalQuantity">
            <summary>
            Captures the physical quantity of the catalogue item at stock take start.
            </summary>
        </member>
        <member name="T:LogicLayer.OPurchaseBudgetSummary">
            <summary>
            Represents the budget distributions in a purchase request, request for quotation
            or a purchase order object.
            </summary>
            <summary>
            Represents the budget distributions in a purchase request, request for quotation
            or a purchase order object.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseBudgetSummary.UpdateBudgetSummariesAfterApproval(System.Collections.Generic.List{LogicLayer.OBudgetTransactionLog},Anacle.DataFramework.DataList{LogicLayer.OPurchaseBudgetSummary})">
            <summary>
            [Column] Updates the set of budget summaries with the latest 
            available figures.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseBudgetSummary.CreateBudgetSummariesForSubmission(System.Collections.Generic.List{LogicLayer.OBudgetTransactionLog})">
            <summary>
            [Column] Creates a set of budget summaries and stamps
            the available balances at this current point in time.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OPurchaseBudgetSummary.PurchaseRequestID">
            <summary>
            [Column] Gets or sets the foreign key to the PurchaseRequest table 
            that indicates the purchase request that contains this item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudgetSummary.RequestForQuotationID">
            <summary>
            [Column] Gets or sets the foreign key to the RequestForQuotation table 
            that indicates the request for quotation that contains this item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudgetSummary.PurchaseOrderID">
            <summary>
            [Column] Gets or sets the foreign key to the PurchaseOrder table 
            that indicates the request for quotation that contains this item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudgetSummary.BudgetID">
            <summary>
            [Column] Gets or sets the foreign key to the Budget table 
            that indicates the budget that the amount will be committed
            against.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudgetSummary.BudgetPeriodID">
            <summary>
            [Column] Gets or sets the foreign key to the BudgetPeriod table 
            that indicates the budget period that the amount will be committed
            against. When the BudgetPeriodID is null, it means that the
            amount is being committed against a budget period that has not
            been opened yet.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudgetSummary.AccountID">
            <summary>
            [Column] Gets or sets the foreign key to the Budget table 
            that indicates the account of the budget that the amount 
            will be committed against.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudgetSummary.TotalAvailableAdjusted">
            <summary>
            [Column] Gets or sets the total budget available by taking
            sum of the opening balance and the reallocations and 
            adjustments, before any consumption.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudgetSummary.TotalAvailableBeforeSubmission">
            <summary>
            [Column] Gets or sets the total budget available before
            the WJ/RFQ/PO has been raised.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudgetSummary.TotalAvailableAtSubmission">
            <summary>
            [Column] Gets or sets the total budget available at 
            the point when the WJ/RFQ/PO was submitted to for approval.
            This value includes the consumption from this WJ/RFQ/PO.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudgetSummary.TotalAvailableAfterApproval">
            <summary>
            [Column] Gets or sets the total budget available at 
            the point when the WJ/RFQ/PO was approved.
            This value includes the consumption from this WJ/RFQ/PO.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudgetSummary.Budget">
            <summary>
            [Column] Gets or sets the OBudget object that
            represents the budget in this summary.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudgetSummary.BudgetPeriod">
            <summary>
            [Column] Gets or sets the OBudgetPeriod object that
            represents the budget period in this summary.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudgetSummary.Account">
            <summary>
            [Column] Gets or sets the OAccount object that
            represents the account in this summary.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudgetSummary.TotalReallocation">
            <summary>
            [Column] Gets or sets the total reallocation at 
            the point when the WJ/RFQ/PO was approved.
            This value includes the consumption from this WJ/RFQ/PO.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudgetSummary.TotalAvailableAfterDeduction">
            <summary>
            [Column] Gets or sets the total available at 
            the point when the WJ/RFQ/PO was submitted.
            This value is the balance after the consumption from this RFQ.
            </summary>
        </member>
        <member name="T:LogicLayer.OApplicationSettingService">
            <summary>
            Represents a settings for the running of a service.
            </summary>
        </member>
        <member name="M:LogicLayer.OApplicationSettingService.Saving">
            <summary>
            
            </summary>
        </member>
        <member name="M:LogicLayer.OApplicationSettingService.GetMinimumDate(System.DateTime,System.Collections.Generic.List{System.DateTime})">
            <summary>
            Gets the minimum date AFTEr the current time.
            </summary>
            <param name="possibleDateTimes"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OApplicationSettingService.GetHoursAndMinutes(System.String)">
            <summary>
            Gets the hours and minutes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OApplicationSettingService.GetDayOfWeek(System.String)">
            <summary>
            Gets the day of the week.
            </summary>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OApplicationSettingService.GetStartOfWeek(System.DateTime)">
            <summary>
            Gets the date of the start of the week 
            (assuming the start of the week is on sunday)
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OApplicationSettingService.GetDayOfMonth(System.DateTime,System.Int32)">
            <summary>
            Gets the date of the month, given the date of the first
            day of the month, the day number.
            </summary>
            <param name="firstDayOfMonth"></param>
            <param name="dayOfMonth"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OApplicationSettingService.GetNextDateTime">
            <summary>
            Gets the next time to run this service.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSettingService.ApplicationSettingID">
            <summary>
            [Column] Gets or sets the foreign key
            to the application setting table that
            represents the application setting
            object that contains this settings
            for a service.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSettingService.ServiceName">
            <summary>
            [Column] Gets or sets the service name.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSettingService.IsEnabled">
            <summary>
            [Column] Gets or sets a flag indicating
            whether the service is enabled.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSettingService.TimerInterval">
            <summary>
            [Column] Gets or sets the timer interval.
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSettingService.BackgroundServiceRun">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OApplicationSettingService.HasErrorMessage">
            <summary>
            
            </summary>
        </member>
        <member name="T:LogicLayer.ONotificationHierarchy">
            <summary>
            Represents a hierarchy of users or roles to
            which notifications will be sent when 
            action on workflow objects are not performed in time.
            </summary>
        </member>
        <member name="M:LogicLayer.ONotificationHierarchy.IsDeactivatable">
            <summary>
            Disallow delete if:
            <para></para>
            1. Any of the notification processes uses this notification
            hierarchy.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ONotificationHierarchy.Saving">
            <summary>
            Overrides the saving method to:
            <para></para>
            1. Update the Notification level numbers of each of the Notification hierarchy level
               objects.
            </summary>
        </member>
        <member name="M:LogicLayer.ONotificationHierarchy.GetAllNotificationHierarchies">
            <summary>
            Gets all Notification hierarchies.
            </summary>
        </member>
        <member name="M:LogicLayer.ONotificationHierarchy.UpdateNotificationLevels">
            <summary>
            Sort the Notification hierarchy level objects and assign
            a sequential running number start from 1.
            </summary>
        </member>
        <member name="M:LogicLayer.ONotificationHierarchy.FindNotificationHierarchyLevelByLevel(System.Int32)">
            <summary>
            Finds the ONotificationHierarchyLevel in this object so that its NotificationLevel = level
            <para></para>
            This method is used in the hierarchical-forwarding scenario.
            </summary>
            <param name="level">The Notification hierarchy level, in the order
            of the Notification limit. The first Notification hierarchy level is
            1, the second is 2, and so on.</param>
            <returns>Returns the ONotificationHierarchyLevel object.</returns>
        </member>
        <member name="P:LogicLayer.ONotificationHierarchy.NotificationHierarchyLevels">
            <summary>
            Gets a list of ONotificationHierarchyLevel objects
            that contains the list of users or roles
            to which notifications will be sent.
            </summary>
        </member>
        <member name="M:LogicLayer.ExcelWriter.GenerateExcelFile(System.Data.DataTable,System.String,System.String,System.Int32)">
            <summary>
            Generates excel file from input data table.
            Format header background to red or yellow to indicate compulsory columns or  non-compulsory columns respectively.
            </summary>
            <param name="table"></param>
            <param name="filePath"></param>
            <param name="workSheetName"></param>
            <param name="compulsory"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ExcelWriter.ExportDataTableToCsv(System.Data.DataTable,System.String)">
            <summary>
            Generates CSV File from input datatable.
            </summary>
            <param name="dtReports"></param>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="T:LogicLayer.ExcelReader">
            <summary>
            This class contains methods to load an Excel file from the disk.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:LogicLayer.ExcelReader.TrustAllCertificates(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)" -->
        <member name="M:LogicLayer.ExcelReader.LoadExcelFile(System.String)">
            <summary>
            Loads an Excel file from disk and returns the first sheet as a DataTable.
            </summary>
            <param name="excelFileName"></param>
            <returns></returns>
        </member>
        <member name="T:LogicLayer.TBudgetReallocation">
            <summary>
            </summary>
            <summary>
            Created by TVO
            </summary>
        </member>
        <member name="T:LogicLayer.OBudgetReallocation">
            <summary>
            Represents a budget reallocation record that 
            </summary>
        </member>
        <member name="M:LogicLayer.OBudgetReallocation.PendingApproval">
            <summary>
            Called by the workflow.
            </summary>
        </member>
        <member name="M:LogicLayer.OBudgetReallocation.Commit">
            <summary>
            Copy BudgetReallocation to BudgetVariationLog
            </summary>
        </member>
        <member name="M:LogicLayer.OBudgetReallocation.ComputeTotal">
            <summary>
            Computes the total for each reallocation from/to items.
            </summary>
        </member>
        <member name="M:LogicLayer.OBudgetReallocation.ValidateFromAccountIdDoesNotExist(System.Guid)">
            <summary>
            Validates that the specified account ID does not exist
            in the list of amounts in this budget.
            </summary>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetReallocation.ValidateToAccountIdDoesNotExist(System.Guid)">
            <summary>
            Validates that the specified account ID does not exist
            in the list of amounts in this budget.
            </summary>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetReallocation.CheckSufficientAvailableAmount">
            <summary>
            Checks for all available budgeted amount for the budget item should 
            not be less than 0 after the reallocation (of both from)
            And make sure the item has not been inactivated
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetReallocation.IsEqualReallocateAmount">
            <summary>
            Check the Total Of From Budget Items is equal to Total Of To Budget Items
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetReallocation.IsDeactivatable">
            <summary>
            Returns true if the IsCommitted flag is set to 1.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.TotalFromBudgetAmount">
            <summary>
            Gets the total amount to be reallocated from the source budget.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.TotalToBudgetAmount">
            <summary>
            Gets the total amount to be reallocated to the destination 
            budget.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.TaskAmount">
            <summary>
            Gets the total task amount.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.TaskLocations">
            <summary>
            Gets a list of locations applicable to
            the budget that this adjustment will commit
            against.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header01From">
            <summary>
            HeaderText of Interval01Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header02From">
            <summary>
            HeaderText of Interval02Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header03From">
            <summary>
            HeaderText of Interval03Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header04From">
            <summary>
            HeaderText of Interval04Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header05From">
            <summary>
            HeaderText of Interval05Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header06From">
            <summary>
            HeaderText of Interval06Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header07From">
            <summary>
            HeaderText of Interval07Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header08From">
            <summary>
            HeaderText of Interval08Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header09From">
            <summary>
            HeaderText of Interval09Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header10From">
            <summary>
            HeaderText of Interval10Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header11From">
            <summary>
            HeaderText of Interval11Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header12From">
            <summary>
            HeaderText of Interval12Amount for Template for Reallocation From
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header01To">
            <summary>
            HeaderText of Interval01Amount for Template for Reallocation To
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header02To">
            <summary>
            HeaderText of Interval02Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header03To">
            <summary>
            HeaderText of Interval03Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header04To">
            <summary>
            HeaderText of Interval04Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header05To">
            <summary>
            HeaderText of Interval05Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header06To">
            <summary>
            HeaderText of Interval06Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header07To">
            <summary>
            HeaderText of Interval07Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header08To">
            <summary>
            HeaderText of Interval08Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header09To">
            <summary>
            HeaderText of Interval09Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header10To">
            <summary>
            HeaderText of Interval10Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header11To">
            <summary>
            HeaderText of Interval11Amount for Template
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocation.Header12To">
            <summary>
            HeaderText of Interval12Amount for Template
            </summary>
        </member>
        <member name="T:LogicLayer.TSurveyReminder">
            <summary>
            Summary description for OSurveyReminder
            </summary>
            <summary>
            Summary description for OSurveyReminder
            </summary>
        </member>
        <member name="M:LogicLayer.OSurveyReminder.Saving">
            --------------------------------------------------------------
            <summary>
            Set the survey number format
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="T:LogicLayer.TApprovalHierarchyLevel">
            <summary>
            Represents one level in the approval hierarchy.
            </summary>
            <summary>
            Represents one level in the approval hierarchy.
            </summary>
            <summary>
            Represents one level in the approval hierarchy.
            </summary>
        </member>
        <member name="T:LogicLayer.OApprovalHierarchyLevel">
            <summary>
            Represents one level in the approval hierarchy.
            </summary>
            <summary>
            Represents one level in the approval hierarchy.
            </summary>
            <summary>
            Represents one level in the approval hierarchy.
            </summary>
        </member>
        <member name="F:LogicLayer.OApprovalHierarchyLevel.UseDefaultEvent">
            <summary>
            Gets or sets a flag indicating whether
            or not the default approval Event defined
            in this approval hierarchy level should be
            used.
            </summary>
        </member>
        <member name="F:LogicLayer.OApprovalHierarchyLevel.UsersToBeAssigned">
            <summary>
            Gets the list of users who will be the
            assigned approvers to the task at this
            level. This is a temporary variable that 
            holds the actual list of users to be assigned 
            to the task.
            </summary>
        </member>
        <member name="F:LogicLayer.OApprovalHierarchyLevel.UseDefaultLimit">
            <summary>
            Gets or sets a flag indicating whether
            or not the default approval limit defined
            in this approval hierarchy level should be
            used.
            </summary>
        </member>
        <member name="F:LogicLayer.OApprovalHierarchyLevel.TempApprovalProcessLimit">
            <summary>
            This is a temporary link to the OApprovalProcessLimit
            object associated with this approval hierarchy level.
            This link is not saved into the database, but allows the user to 
            update the non-default approval limits in the user interface.
            </summary>
        </member>
        <member name="F:LogicLayer.OApprovalHierarchyLevel.isRouted">
            <summary>
            A flag that indicates whether
            the task will be routed to this 
            approval hierarchy level.
            </summary>
        </member>
        <member name="M:LogicLayer.OApprovalHierarchyLevel.ValidateUserOrRoleOrPositionSpecified">
            <summary>
            Validates that at least one user or one job has been specified.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OApprovalHierarchyLevel.IsAuthorizedUserAtThisLevel(LogicLayer.OUser,LogicLayer.LogicLayerPersistentObject)">
            <summary>
            Checks if the specified user is an authorized user at
            this approval hierarchy level.
            </summary>
            <param name="user">The user to check if he/she is authorized
            at this level.</param>
            <param name="task">The task containing information about
            the location/equipment/type of service in order to
            determine the positions that can be assigned at this
            level.</param>
            <returns>Returns true if the specified user is an
            authorized user at this level, false otherwise.</returns>
        </member>
        <member name="M:LogicLayer.OApprovalHierarchyLevel.ValidateNumberOfUsersMoreThanNumberOfApprovalsRequired">
            <summary>
            Validates that if the role is not set up for this level, that
            the number of users must be equal to or more than the 
            number of approvals required.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OApprovalHierarchyLevel.CopyUsersToUsersToBeAssigned">
            <summary>
            Copies the list of users set up in the approval hierarchy
            to the temporary list.
            </summary>
        </member>
        <member name="M:LogicLayer.OApprovalHierarchyLevel.RemoveUsersToBeAssigned(System.Guid)">
            <summary>
            Copies the list of users set up in the approval hierarchy
            to the temporary list.
            </summary>
        </member>
        <member name="M:LogicLayer.OApprovalHierarchyLevel.CopyPositionsToPositionsToBeAssigned">
            <summary>
            Copies the list of users set up in the approval hierarchy
            to the temporary list.
            </summary>
        </member>
        <member name="M:LogicLayer.OApprovalHierarchyLevel.RemovePositionsToBeAssigned(System.Guid)">
            <summary>
            Copies the list of users set up in the approval hierarchy
            to the temporary list.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalHierarchyLevel.AuditObjectDescription">
            <summary>
            Returns a string indicating a summarized description of
            this object that is to appear in the audit trail.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalHierarchyLevel.CarbonCopyPositions">
            <summary>
            Gets the list of users who will be the
            assigned approvers to the task at this
            level.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalHierarchyLevel.SecretaryPositions">
            <summary>
            Gets the list of users who will be the
            assigned approvers to the task at this
            level.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalHierarchyLevel.PositionNames">
            <summary>
            Gets a comma-separated list of job names.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalHierarchyLevel.CarbonCopyPositionNames">
            <summary>
            Gets a comma-separated list of user names.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalHierarchyLevel.SecretaryPositionNames">
            <summary>
            Gets a comma-separated list of user names.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalHierarchyLevel.ApprovalHierarchyID">
            <summary>
            [Column] Gets or sets the foreign key to the 
            ApprovalHierarchy table that represents that
            approval hierarchy under which this approval
            hierarchy level belongs to.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalHierarchyLevel.ApprovalLevel">
            <summary>
            [Column] Gets or sets the numeric approval
            level of this approval hierarchy level. 
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalHierarchyLevel.ApprovalLimit">
            <summary>
            [Column] Gets or sets the default approval limit in
            the base currency for this approval level.
            <para></para>
            This approval limit can be overriden by the
            approval process's approval limit should the user
            indicate not to use the default approval limit.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalHierarchyLevel.NumberOfApprovalsRequired">
            <summary>
            [Column] Gets or sets the number of approvals
            required before the approval proceeds to the next
            level. 
            <para></para>
            This is not applicable if the mode of forwarding of
            the approval process that uses this approval hierarchy 
            is to 'All'.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalHierarchyLevel.Users">
            <summary>
            Gets the list of users who will be the
            assigned approvers to the task at this
            level.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalHierarchyLevel.Positions">
            <summary>
            Gets the list of users who will be the
            assigned approvers to the task at this
            level.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalHierarchyLevel.Roles">
            <summary>
            Gets the list of roles that will be used
            to determine the appropriate positions to
            be assigned to this task at this level.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalHierarchyLevel.FinalApprovalLimit">
            <summary>
            Gets a value indicating the final approval limit.
            This final approval limit is taken from the
            TempApprovalProcessLimit.ApprovalLimit if UseDefaultLimit is false, 
            and taken from this object's ApprovalLimit if UseDefaultLimit is true.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalHierarchyLevel.IsRouted">
            <summary>
            Gets or sets a flag that indicates whether
            the task will be routed to this 
            approval hierarchy level. This field is not
            a database column and will only be set by
            the OApprovalProcessDetail.GetApprovalHierarchyLevels
            method.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalHierarchyLevel.UserNames">
            <summary>
            Gets a comma-separated list of user names.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalHierarchyLevel.UsersToBeAssignedNames">
            <summary>
            Gets a comma-separated list of user names.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalHierarchyLevel.RoleNames">
            <summary>
            Gets a comma-separated list of job names.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalHierarchyLevel.PositionNamesWithUserNames">
            <summary>
            Gets a comma-separated list of position names and the assigned users.
            </summary>
        </member>
        <member name="T:LogicLayer.TActivity">
            <summary>
            Represents the schema for the Activity table.
            </summary>
            <summary>
            Represents the schema for the Activity table.
            </summary>
            <summary>
            Represents the schema for the Activity table.
            </summary>
        </member>
        <member name="T:LogicLayer.OActivity">
            <summary>
            Represents the current activity or a task of an object.
            </summary>
            <summary>
            Represents the current activity or a task of an object.
            </summary>
            <summary>
            Represents the current activity or a task of an object.
            </summary>
        </member>
        <member name="M:LogicLayer.OActivity.GetOutstandingTasksAtDate(LogicLayer.OUser,System.DateTime,System.String)">
            <summary>
            Gets all outstanding tasks assigned to the user and applicable
            to 
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OActivity.GetOutstandingActivitiesForInbox(LogicLayer.OUser,System.DateTime,System.String,System.String,System.String)">
            <summary>
            Queries the database and returns a table of activities assigned to the
            currently logged on user. This table is to be used
            and bound to the inbox gridTasks grid view.
            </summary>
            <param name="userBase">The OUserBase object of the currently logged on user.</param>
            <param name="dateTime">The date/time at which point to query the table.</param>
            <returns>A DataTable of tasks.</returns>
        </member>
        <member name="M:LogicLayer.OActivity.GetOutstandingTasksGroupedByObjectTypeAndStatus(LogicLayer.OUser,System.DateTime)">
            <summary>
            Gets the total number of of outstanding tasks grouped by
            object type and the status.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OActivity.GetOutstandingTasksGroupedByObjectTypeAndStatus(LogicLayer.OUser,System.DateTime,System.String[])">
            <summary>
            Gets the total number of of outstanding tasks grouped by
            object type and the status.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OActivity.GetDistinctUserForActivities">
            <summary>
            caleb. Get Distinct Users for activities
            Have to return userList for framework method signature
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OActivity.IsAssignedToUser(LogicLayer.OUser)">
            <summary>
            Determines if this activity is assigned to the 
            specified user, or to one of the positions 
            held by the specified user.
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OActivity.GetStatuses(System.String)">
            <summary>
            Gets a distinct list of statuses applicable to the
            specified object type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OActivity.GetMonthActivities(LogicLayer.OUser,System.Int32,System.Int32)">
            <summary>
            Gets a list of activities that should appear in month view
            calendar for the specified month in a DataTable form.
            </summary>
            <param name="userBase">The UserBase object of the user
            who is currently logged on.</param>
            <param name="year">The year that the calendar will display.</param>
            <param name="month">The month that the calendar will display</param>
            <returns>A DataTable of activities.</returns>
        </member>
        <member name="M:LogicLayer.OActivity.GetOutstandingActivitiesForInbox_Orignal(LogicLayer.OUser,System.DateTime,System.String,System.String,System.String)">
            <summary>
            Queries the database and returns a table of activities assigned to the
            currently logged on user. This table is to be used
            and bound to the inbox gridTasks grid view.
            </summary>
            <param name="userBase">The OUserBase object of the currently logged on user.</param>
            <param name="dateTime">The date/time at which point to query the table.</param>
            <returns>A DataTable of tasks.</returns>
        </member>
        <member name="M:LogicLayer.OActivity.GetCalendarTaskCount(LogicLayer.OUser,System.DateTime)">
            <summary>
            
            </summary>
            <param name="startDate"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OActivity.GetTaskTypeTable">
            <summary>
            Queries the database and returns a table of task type 
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OActivity.GetOutstandingTasksGroupedByObjectTypeAndStatus_Original(LogicLayer.OUser,System.DateTime)">
            <summary>
            Gets the total number of of outstanding tasks grouped by
            object type and the status.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OActivity.GetOutstandingTasksAtDate_Orginal(LogicLayer.OUser,System.DateTime,System.String)">
            <summary>
            Gets all outstanding tasks assigned to the user and applicable
            to 
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OActivity.IsLate">
            <summary>
            Returns an integer to indicate whether this activity is late.
            </summary>
            <returns>Returns 1 if late, 0 otherwise.</returns>
        </member>
        <member name="M:LogicLayer.OActivity.CheckAssignment(LogicLayer.OUser,System.Nullable{System.Guid})">
            <summary>
            Returns a flag indicating if an object
            is or is not assigned to the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OActivity.GetAssignmentHash(LogicLayer.OUser,System.Collections.Generic.List{System.Guid})">
            <summary>
            Returns a hashtable of boolean flags indicating if an object
            is or is not assigned to the current user. This is used by
            the search panel to find out the list of tasks assigned to 
            the current user, by using a single query.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OActivity.SaveTaskReassignment(LogicLayer.OActivity,System.Collections.Generic.List{LogicLayer.OUser},System.Collections.Generic.List{LogicLayer.OPosition},System.Collections.Generic.List{LogicLayer.OPosition})">
            <summary>
            Removes the current assigned users and/or positions
            Assigns the specified users and/or positions 
            </summary>
            <param name="act"></param>
            <param name="users"></param>
            <param name="positions"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OActivity.ApprovedOnBehalfOfUser">
            <summary>
            Gets or sets the name of the user this task was
            approved on behalf of.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.CarbonCopyUsers">
            <summary>
            Gets a list of users who have copied this task.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.SecretaryPositions">
            <summary>
            Gets a list of users who are assigned to this task.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.CurrentStateName">
            <summary>
            [Column] Gets or sets the current status name of the task.
            Developers are encouraged to use CurrentStateName to obtain
            the status name of the task instead of ObjectName,
            which was the Anacle.EAM v5.2 behavior.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.TriggeringEventName">
            <summary>
            [Column] Gets or sets the name of the task.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.TaskName">
            <summary>
            [Column] Gets or sets the name of the task.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.TaskNumber">
            <summary>
            [Column] Gets or sets the task number of the task. This can be used to indicate the
            Purchase Order number for a Purchase Order object, the Work
            number for a Work object.
            </summary> 
        </member>
        <member name="P:LogicLayer.OActivity.Description">
            <summary>
            [Column] Gets or sets the description of the task.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.TaskPreviousComments">
            <summary>
            [Column] Gets or sets the comments given by the previously
            assigned user of the task.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.TaskCurrentComments">
            <summary>
            [Column] Gets or sets the comments given by the currently
            assigned user of the task.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.TaskAmount">
            <summary>
            [Column] Gets or sets the amount in the base currency
            associated with this task. This value will only
            be updated during the SetStateAndAssign or 
            SetStateAndAssignApprovers activity.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.ObjectTypeName">
            <summary>
            [Column] Gets or sets the .NET type name of the object.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.AttachedObjectID">
            <summary>
            [Column] Gets or sets the ObjectID of the PersistentObject that this activity
            is related to.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.Priority">
            <summary>
            [Column] Gets or sets the priority of the task. This will appear in the
            user's inbox of tasks as the priority.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.ScheduledStartDateTime">
            <summary>
            [Column] Gets or sets the date and time this task is scheduled to start.
            This affects when the task will appear in the user's inbox. If
            this date and time is set to the future, then the task will only
            appear after that point in time.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.ScheduledEndDateTime">
            <summary>
            [Column] Gets or sets the date and time this task is scheduled to end.
            This affects how the task appears in the user's inbox. If this
            date and time is in the past, then the task will be highlight
            in the user's inbox as outstanding.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.WorkflowInstanceID">
            <summary>
            [Column] Gets or sets the WorkflowInstanceID as generated from the
            Workflow Engine.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.WorkflowVersionNumber">
            <summary>
            [Column] Gets or sets the WorkflowVersionNumber as used by the
            Workflow Engine.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.ApprovalProcessID">
            <summary>
            [Column] Gets or sets the foreign key to the ApprovalProcessDetail table. 
            When performing a workflow transition in the user interface,
            the objectPanel will pop-up a workflow dialog for the user
            to select the appropriate approval process detail. The selection
            will populate this property.
            <para></para>
            Otherwise, this property must be set before calling Transit into 
            an event that leads to an approval state.
            <para></para>
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.PreviousApprovalLevel">
            <summary>
            [Column] Gets or sets the previous approval level in the
            approval hierarchy. 
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.CurrentApprovalLevel">
            <summary>
            [Column] Gets or sets the current approval level in the
            approval hierarchy. 
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.LastApprovalLevel">
            <summary>
            [Column] Gets or sets the last level this task was approved.
            This value is always updated when after an approval, and is
            never reset to 1 when the task is rejected.
            <para></para>
            This is used for the if the Mode of Forwarding is 
            Hierarchical with Skipping, so that a rejected task re-submitted
            for approval continues on at the previously approved level.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.NotificationID">
            <summary>
            [Column] Gets or sets the foreign key to the Notification
            table that indicates the notification process tied
            to this object.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.NumberOfApprovalsAtCurrentLevel">
            <summary>
            [Column] Gets or sets the number of approvals
            already given at the current level.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.NumberOfApprovalsRequiredAtCurrentLevel">
            <summary>
            [Column] Gets or sets the number of approvals
            required at the current level.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.SkipToLastRejectedLevel">
            <summary>
            [Column] Gets or sets a flag to indicate that the
            approval should skip to the last level that rejected
            this task.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.Users">
            <summary>
            Gets a list of users who are assigned to this task.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.ApprovedUsers">
            <summary>
            Gets a list of users who have approved this task.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.ApprovedPositions">
            <summary>
            Gets a list of position who have approved this task.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.Positions">
            <summary>
            Gets a list positions that are assigned to this task.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.ApprovalProcess">
            <summary>
            Gets or sets the OApprovalProcess object that
            represents the approval process selected by
            the user on the user interface to indicate the
            approval hierarchy to be used for the approval of
            this object.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.ApprovalHierarchy">
            <summary>
            Gets or sets the OApprovalHierarchy object 
            that represents the hierarchy of users/roles configured
            to approve this object.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivity.Notification">
            <summary>
            Gets or sets the ONotification object that
            represents the notification details.
            </summary>
        </member>
        <member name="T:LogicLayer.TStoreTransfer">
            <summary>
            Summary description for OStoreTransfer
            </summary>
        </member>
        <member name="T:LogicLayer.OStoreTransfer">
            <summary>
            Represents a transfer form that contains a list of items that
            are to be transfer from one store to another.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreTransfer.IsDeactivatable">
            <summary>
            Disallow delete if:
            <para></para>
            1. The Check-In has been committed into the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreTransfer.HasDuplicateTransferItem(LogicLayer.OStoreTransferItem)">
             <summary>
             Check if there is a duplicate item in the list check-out items. An
             item is duplicate if another item with the same selected Catalogue and Bin
             is in the list.
            
             Returns false if no duplicates are found.
             </summary>
             <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreTransfer.ValidateItemsFromAndToStore">
            <summary>
            Validates that all items originate from the
            specified store and are to be transferred to
            the specified store.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreTransfer.ValidateSufficientItemsForTransfer">
            <summary>
            Validates if there are sufficient items in the store for transfer before
            committing the transfer. Returns true if there are sufficient items in the
            store, false, if at least one item is insufficient.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreTransfer.Commit">
            <summary>
            Commits the transfer. Once this method is called, no items in the StoreTransferItems list
            should be modified.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreTransfer.Cancel">
            <summary>
            Cancel the check-in and saves to the database.
            The cancellation can take place only if there are
            no other transactions on the store bin items other
            than the one that was created by the check in.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreTransfer.ValidateCancellable">
            <summary>
            Validates and checks that this check in can be cancelled,
            that is, there must be no other transactions other than
            the one created by the check in.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreTransfer.ValidateBinsNotLocked">
            <summary>
            Validates that none of the bins are locked.
            <para></para>
            Returns a list of store bins that are locked.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OStoreTransfer.FromStoreType">
            <summary>
            [Column] Gets or sets a flag indicating the
            type of the store items will be transferred from:
            <para>
            </para>
            <list>
                <item>0 - Physical Store; </item>
                <item>1 - Issue Location; </item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransfer.FromLocationID">
            <summary>
            [Column] Gets or sets the foreign key to the Location table
            that indicates the issue location to transfer items from.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransfer.FromStoreID">
            <summary>
            [Column] Gets or sets the foreign key to the Store table
            that indicates the store to transfer items from.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransfer.ToStoreType">
            <summary>
            [Column] Gets or sets a flag indicating the
            type of the store items will be transferred to:
            <para>
            </para>
            <list>
                <item>0 - Physical Store; </item>
                <item>1 - Issue Location; </item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransfer.ToLocationID">
            <summary>
            [Column] Gets or sets the foreign key to the Location table
            that indicates the issue location to transfer items to.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransfer.ToStoreID">
            <summary>
            [Column] Gets or sets the foreign key to the Store table
            that indicates the store to transfer items to.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransfer.Description">
            <summary>
            [Column] Gets or sets the description of the transfer.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransfer.IsCommitted">
            <summary>
            [Column] Gets or sets a flag indicating whether
            this transfer has been committed.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransfer.FromStore">
            <summary>
            Gets or sets the OStore object that represents
            the store to transfer items from.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransfer.ToStore">
            <summary>
            Gets or sets the OStore object that represents
            the store to transfer items to.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransfer.StoreTransferItems">
            <summary>
            Gets a one-to-many list of OStoreTransferItem objects
            that represents the items to be transfer.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransfer.TaskLocations">
            <summary>
            Gets the list of locations associated with this task.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransfer.TaskAmount">
            <summary>
            Gets the total amount of items that are to be checked in.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransfer.FromStoreTypeText">
            <summary>
            Gets the translated text of the from-store type.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransfer.FromStoreText">
            <summary>
            Gets the name of the store / location.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransfer.ToStoreTypeText">
            <summary>
            Gets the translated text of the to-store type.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransfer.ToStoreText">
            <summary>
            Gets the name of the store / location.
            </summary>
        </member>
        <member name="T:LogicLayer.OStoreItemReservation">
            <summary>
            This class is not in use.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreItemReservation.ReserveItem">
            <summary>
            Try to reserve an item from the store. If successful, set the
            IsReservationSuccessful flag to 1 and return true. Otherwise,
            set the IsReservationSuccessful flag to 0 and return false.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreItemReservation.UnreserveItem">
            <summary>
            Unreserves the item from the store by adjusting the corresponding
            StoreBinItems' available quantity upwards.
            </summary>
        </member>
        <member name="T:LogicLayer.StaggerProperty">
            --------------------------------------------------------------
            <summary>
            For stagger sorting.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="T:LogicLayer.StaggerPropertyComparer">
            --------------------------------------------------------------
            <summary>
            Comparator class that implements the sorting.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OReportTemplate.DeleteTemplate(System.Guid,System.Guid)">
            <summary>
            Delete the report template. It first check if the user has the right to delete the report template, if have it will delete the template
            return true if successfully deleted, otherwise false
            </summary>
            <param name="templateID"></param>
            <param name="userID"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OReportTemplate.IsEditableTemplate(System.Guid,System.Guid)">
            <summary>
            Check if the template is editable by the current user
            </summary>
            <param name="templateID"></param>
            <param name="userID"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OReportTemplate.GetViewableReportTemplates(System.Guid,System.Guid)">
            <summary>
            return all the templates created for this report(only templates that are viewable by the current user
            </summary>
            <param name="ReportID"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OReportTemplate.SaveTemplateObject(LogicLayer.OReportTemplate,Anacle.UIFramework.UIDragDropGrid)">
            <summary>
            saving a template object
            </summary>
            <param name="template"></param>
            <param name="ReportObject"></param>
            <param name="ReportID"></param>
            <param name="TemplateName"></param>
            <param name="IsPublic"></param>
            <param name="UserID"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OReportTemplate.ValidateReportTemplate(LogicLayer.OReportTemplate)">
            <summary>
            template Name cannot be empty and cannot be the same to existing template name of the same report
            return 1 if the name is duplicated (return as integer instead of boolean is to cater for future enhancement where additional field could be added in and need validation
            return 0 if the template is valid
            </summary>
            <param name="TemplateName"></param>
        </member>
        <member name="M:LogicLayer.OReportTemplate.IsTemplateNameDuplicate(LogicLayer.OReport,System.String)">
            <summary>
            Validate template name. Report template name can not be same to existing template name of the same report.
            </summary>
            <param name="report"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OReportTemplate.DeserializeReportObject(Anacle.UIFramework.UIDragDropGrid,System.String)">
            <summary>
            
            </summary>
            <param name="ReportObject"></param>
            <param name="ReportXML"></param>
        </member>
        <member name="M:LogicLayer.OReportTemplate.DeserializeColumnCollection(System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="cols"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OReportTemplate.SerializeReportObject(Anacle.UIFramework.UIDragDropGrid)">
            <summary>
            convert the report properties into xml format to be kept in database. Return a string in xml format contain the setting of the report
            </summary>
        </member>
        <member name="M:LogicLayer.OReportTemplate.SerializeReportColumn(System.Xml.XmlTextWriter,Anacle.UIFramework.DragDropGridColumn)">
            <summary>
            Each column will be represented by one element. and the properties of the column are represented as attribues of the element
            </summary>
        </member>
        <member name="M:LogicLayer.OReportTemplate.IsTemplateNameDuplicated(LogicLayer.OReport,System.String,LogicLayer.OReportTemplate)">
            <summary>
            Validate input name against template name of the passed in report object.
            </summary>
            <param name="report"></param>
            <param name="name"></param>
            <param name="excludeTemplate"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OReportTemplate.TemplateType">
            <summary>
            [Columns] Gets or sets the format of report template. 
            0: rdl; 1: crystal
            </summary>
        </member>
        <member name="T:LogicLayer.OCalendarHoliday">
            <summary>
            Represents a record containing information about a holiday
            in a calendar.
            </summary>
            <summary>
            Represents a record containing information about a holiday
            in a calendar.
            </summary>
        </member>
        <member name="P:LogicLayer.OCalendarHoliday.CalendarID">
            <summary>
            [Column] Foreign database key to the OCalendar object.
            </summary>
        </member>
        <member name="P:LogicLayer.OCalendarHoliday.HolidayDate">
            <summary>
            [Column] Date of the holiday.
            </summary>
        </member>
        <member name="P:LogicLayer.OCalendarHoliday.Calendar">
            <summary>
            Gets or sets the OCalendar object that contains this holiday.
            </summary>
        </member>
        <member name="T:LogicLayer.TBudgetAdjustmentDetail">
            <summary>
            Created by TVO
            </summary>
        </member>
        <member name="M:LogicLayer.OBudgetAdjustmentDetail.ValidateTotal">
            <summary>
            Validates that the total of opening balances
            for all intervals equals the opening balance
            total.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetAdjustmentDetail.IsZeroAdjustment">
            <summary>
            Tests to check if the adjustment is a zero adjustment.
            Returns true if so, false otherwise.
            <para></para>
            The adjustment detail is considered a zero adjustment if
            all the IntervalNAmount fields are all zero.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustmentDetail.BudgetAdjustmentID">
            <summary>
            [Column] Gets or sets the foreign key to the 
            budget adjustment record that this detail belongs under.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustmentDetail.AccountID">
            <summary>
            [Column] Gets or sets the budget account that this
            adjustment is made to.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustmentDetail.Interval01Amount">
            <summary>
            [Column] Gets or sets the amount to adjust in one of
            the 36 intervals in the budget period.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustmentDetail.TotalAmount">
            <summary>
            [Column] Gets or sets the total amount adjusted.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustmentDetail.BudgetAdjustment">
            <summary>
            Gets the reference to an OBudgetAdjustment object that
            represents the budget adjustment record that this 
            detail belongs under.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetAdjustmentDetail.Account">
            <summary>
            Gets the reference to an OAccount object that 
            represents the budget account code that this
            adjustment is made to.
            </summary>
        </member>
        <member name="T:LogicLayer.Events.IAnacleEvents">
            <summary>
            Represents a series of events that can be triggered
            on a workflow instance.
            <para></para>
            These events exist for the purpose of providing a
            name to the events, but provide no additional
            business logic to them.
            </summary>
            <summary>
            Represents a series of events that can be triggered
            on a workflow instance.
            <para></para>
            These events exist for the purpose of providing a
            name to the events, but provide no additional 
            business logic to them.
            </summary>
        </member>
        <member name="T:LogicLayer.TSurveyPlannerUpdate">
            <summary>
            Summary description for OSurveyPlannerExtension
            </summary>
        </member>
        <member name="T:LogicLayer.OPurchaseBudget">
            <summary>
            Represents the budget distributions in a purchase request, request for quotation
            or a purchase order object.
            </summary>
            <summary>
            Represents the budget distributions in a purchase request, request for quotation
            or a purchase order object.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseBudget.CreateBudgetTransactionLogs(Anacle.DataFramework.DataList{LogicLayer.OPurchaseBudget},System.Int32,System.Collections.Generic.List{LogicLayer.OBudgetTransactionLog},System.Collections.Generic.List{LogicLayer.OBudgetTransactionLog})">
            <summary>
            Creates a list of budget transaction logs from the 
            specified list of purchase budget distributions and returns
            the list through the newTransactionLogs parameter. If
            there are any existing transaction logs that are modified,
            they will be returned through the modifiedTransactionLogs
            parameter.
            <para></para>
            This method does not save any of the created or modified
            transaction logs into the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseBudget.CreateCreditDebitMemoBudgetTransactionLogs(Anacle.DataFramework.DataList{LogicLayer.OPurchaseBudget},System.Int32,System.Collections.Generic.List{LogicLayer.OBudgetTransactionLog})">
            <summary>
            Creates a list of budget transaction logs from the 
            specified list of purchase budget distribution. Unlike
            the CreateBudgetTransactionLogs
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseBudget.GetBudgetTransactionLogs(Anacle.DataFramework.DataList{LogicLayer.OPurchaseBudget})">
            <summary>
            Gets all budget transaction logs.
            </summary>
            <param name="purchaseBudgets"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseBudget.SetBudgetTransactionLogsTransactionType(Anacle.DataFramework.DataList{LogicLayer.OPurchaseBudget},System.Int32)">
            <summary>
            Sets the purchase budget transaction log's transaction types.
            </summary>
            <param name="purchaseBudgets"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseBudget.SetBudgetTransactionLogsTransactionTypeAndTransferToNonCommitted(Anacle.DataFramework.DataList{LogicLayer.OPurchaseBudget},System.Int32)">
            <summary>
            Sets the purchase budget transaction log's transaction types.
            </summary>
            <param name="purchaseBudgets"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseBudget.TransferPurchaseBudgets(Anacle.DataFramework.DataList{LogicLayer.OPurchaseBudget},System.Nullable{System.Int32})">
            <summary>
            Transfer all budget transactions that belongs
            to the specified itemNumber to another document.
            <para></para>
            This mehtod is called when an RFQ is copied to a PO.
            </summary>
            <param name="purchaseBudgets"></param>
            <param name="itemNumber"></param>
        </member>
        <member name="M:LogicLayer.OPurchaseBudget.ValidateBudgetPeriodsActiveAndOpened(Anacle.DataFramework.DataList{LogicLayer.OPurchaseBudget})">
            <summary>
            Validates to ensure that all the purchase budgets in a list 
            will commit against budget periods that do not yet exist,
            or budget periods that are not closed.
            <para></para>
            This method will return the list of budget periods that
            fail this validation.
            </summary>
            <returns>
            Returns the list of budget periods that
            fail this validation
            </returns>
        </member>
        <member name="M:LogicLayer.OPurchaseBudget.GetAccrualDateToCommitToNonClosedBudget(System.Collections.ArrayList,System.DateTime)">
            <summary>
            Get the accrual date that commits to a budget that is not created,
            or not closed.
            </summary>
            <param name="budgetPeriods"></param>
            <param name="currentAccrualDate"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseBudget.TransferPartialPurchaseBudgets(Anacle.DataFramework.DataList{LogicLayer.OPurchaseBudget},System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            Transfers partial budget transaction log amounts to another 
            document. This method is used to transfer PO budget commitments
            to an invoice (which can be a partial amount of the PO). 
            <para></para>
            Once the partial amounts have been deducted from the previous
            document's transaction logs, new PurchaseBudget objects with
            the transaction logs will be created for this document.
            <para></para>
            This mehtod is called when a PO is matched to an Invoice.
            </summary>
            <param name="purchaseBudgets"></param>
            <param name="itemNumber"></param>
        </member>
        <member name="M:LogicLayer.OPurchaseBudget.ClearBudgetTransactionLogs(Anacle.DataFramework.DataList{LogicLayer.OPurchaseBudget})">
            <summary>
            Deactivates all budget transactions that belongs
            to the specified itemNumber, but it does not
            transfer the amount back to the originating
            purchase document.
            <para></para>
            This method is called when (a) an RFQ is rejected
            or closed, (b) a PO is rejected or closed, (c)
            an Invoice is rejected.
            </summary>
            <param name="purchaseBudgets"></param>
            <param name="itemNumber"></param>
        </member>
        <member name="M:LogicLayer.OPurchaseBudget.UndoTransferBudgetTransactionLogs(Anacle.DataFramework.DataList{LogicLayer.OPurchaseBudget})">
            <summary>
            Deactivates all budget transactions that belongs
            to the specified itemNumber, and
            transfer the amount back to the originating
            purchase document.
            <para></para>
            This method is called when (a) an RFQ is cancelled, 
            (b) a PO is cancelled, (c) an Invoice is cancelled.
            </summary>
            <param name="purchaseBudgets"></param>
        </member>
        <member name="M:LogicLayer.OPurchaseBudget.ValidateBudgetAccountsAreActive(Anacle.DataFramework.DataList{LogicLayer.OPurchaseBudget})">
            <summary>
            Validates the ensure that the selected budget accounts
            are valid before submitting the RFQ for approval and returns
            a list of inactive budget periods and accounts, if any.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseBudget.CreateBudgetTransactionLogsAndSummaries(Anacle.DataFramework.DataList{LogicLayer.OPurchaseBudget},Anacle.DataFramework.DataList{LogicLayer.OPurchaseBudgetSummary},System.Int32)">
            <summary>
            Creates the budget transaction logs and budget summaries.
            </summary>
            <param name="purchaseBudgets"></param>
            <param name="transactionType"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OPurchaseBudget.PurchaseBudgetID">
            <summary>
            [Column] Gets or sets the foreign key to the PurchaseBudget table 
            that indicates the source purchase budget that generated
            this purchase budget.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudget.PurchaseInvoiceID">
            <summary>
            [Column] Gets or sets the foreign key to the PurchaseInvoice table 
            that indicates the purchase invoice that contains this item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudget.PurchaseRequestID">
            <summary>
            [Column] Gets or sets the foreign key to the PurchaseRequest table 
            that indicates the purchase request that contains this item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudget.RequestForQuotationID">
            <summary>
            [Column] Gets or sets the foreign key to the RequestForQuotation table 
            that indicates the request for quotation that contains this item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudget.PurchaseOrderID">
            <summary>
            [Column] Gets or sets the foreign key to the PurchaseOrder table 
            that indicates the request for quotation that contains this item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudget.ItemNumber">
            <summary>
            [Column] Gets or sets the item number of the purchase request item,
            request for quotation item, or the purchase order item that
            this budget applies to. If the budget is applied to the entire
            WJ/RFQ/PO, then this will be left as null.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudget.BudgetID">
            <summary>
            [Column] Gets or sets the foreign key to the Budget table 
            that indicates the budget that the amount will be committed
            against.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudget.AccountID">
            <summary>
            [Column] Gets or sets the foreign key to the Budget table 
            that indicates the account of the budget that the amount 
            will be committed against.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudget.StartDate">
            <summary>
            [Column] Gets or sets the start date that the amount
            will be committed to the budget.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudget.EndDate">
            <summary>
            [Column] Gets or sets the end date that the amount
            will be committed to the budget.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudget.AccrualFrequencyInMonths">
            <summary>
            [Column] Gets or sets the frequency in 
            the number months that the amount accrued between
            the start and end date.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudget.Amount">
            <summary>
            [Column] Gets or sets the amount that the budget
            will be committed to the budget.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudget.TransferFromBudgetTransactionLogID">
            <summary>
            [Column] Gets or sets the foreign key to
            the BudgetTransactionLog table that indicates
            the log entry that the amount wil be deducted from.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudget.TransferFromPurchaseBudgetID">
            <summary>
            [Column] Gets or sets the foreign key to
            the PurchaseBudget table that indicates
            the purchase budget of the original purchase document
            that all transactions for the current purchase document 
            will be created from.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudget.PurchaseRequest">
            <summary>
            Gets or sets the OPurchaseRequest object that represents
            the purchase request that contains this item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudget.Budget">
            <summary>
            Gets or sets the OBudget object the represents that
            budget that the amount will be committed
            against.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudget.Account">
            <summary>
            Gets or sets the OAccount object that represents the
            account of the budget that the amount 
            will be committed against.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudget.LocationID">
            <summary>
            [Column] Gets or sets the foreign key to the PurchaseBudget table 
            that indicates the source purchase budget that generated
            this purchase budget.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseBudget.AccrualDateModifiedDueToBudgetClosed">
            <summary>
            [Column] Indicates that the accrual date was modified to commit to
            the following year's budget because previous year budget was closed.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorPrequalificationVendor.OperatingAddressCountry">
            <summary>
            [Column] Gets or sets the operating address of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorPrequalificationVendor.OperatingAddressState">
            <summary>
            [Column] Gets or sets the operating address of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorPrequalificationVendor.OperatingAddressCity">
            <summary>
            [Column] Gets or sets the operating address of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorPrequalificationVendor.OperatingAddress">
            <summary>
            [Column] Gets or sets the operating address of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorPrequalificationVendor.OperatingCellPhone">
            <summary>
            [Column] Gets or sets the operating contact of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorPrequalificationVendor.OperatingEmail">
            <summary>
            [Column] Gets or sets the operating contact of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorPrequalificationVendor.OperatingFax">
            <summary>
            [Column] Gets or sets the operating contact of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorPrequalificationVendor.OperatingPhone">
            <summary>
            [Column] Gets or sets the operating contact of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorPrequalificationVendor.OperatingContactPerson">
            <summary>
            [Column] Gets or sets the operating contact of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorPrequalificationVendor.BillingAddressCountry">
            <summary>
            [Column] Gets or sets the billing address of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorPrequalificationVendor.BillingAddressState">
            <summary>
            [Column] Gets or sets the billing address of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorPrequalificationVendor.BillingAddressCity">
            <summary>
            [Column] Gets or sets the billing address of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorPrequalificationVendor.BillingAddress">
            <summary>
            [Column] Gets or sets the billing address of this 
            vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorPrequalificationVendor.BillingCellPhone">
            <summary>
            [Column] Gets or sets the billing contact of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorPrequalificationVendor.BillingEmail">
            <summary>
            [Column] Gets or sets the billing contact of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorPrequalificationVendor.BillingFax">
            <summary>
            [Column] Gets or sets the billing contact of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorPrequalificationVendor.BillingPhone">
            <summary>
            [Column] Gets or sets the billing contact of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorPrequalificationVendor.BillingContactPerson">
            <summary>
            [Column] Gets or sets the billing contact of this vendor.
            </summary>
        </member>
        <member name="T:LogicLayer.TStoreTransferItem">
            <summary>
            Summary description for OStoreTransfer
            Transfer item from one store to another. It represent one check in and one check out object
            </summary>
        </member>
        <member name="T:LogicLayer.OStoreTransferItem">
            <summary>
            Represents the record containing information about the 
            item to be transferred.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreTransferItem.ComputeEstimatedUnitCost">
            <summary>
            Computes the estimated unit cost of the check out items.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransferItem.StoreTransferID">
            <summary>
            [Column] Gets or sets the foreign key to the StoreTransfer table 
            that indicates the transfer object that contains this record.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransferItem.CatalogueID">
            <summary>
            [Column] Gets or sets the foreign key to the Catalogue table 
            that indicates the catalogue of the item to transfer.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransferItem.FromStoreBinID">
            <summary>
            [Column] Gets or sets the foreign key to the StoreBin table 
            that indicates the bin to transfer the item from.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransferItem.ToStoreBinID">
            <summary>
            [Column] Gets or sets the foreign key to the StoreBin table 
            that indicates the bin to transfer the item to.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransferItem.StoreBinItemID">
            <summary>
            [Column] Gets or sets the foreign key to the
            StoreBinItem object.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransferItem.EstimatedUnitCost">
            <summary>
            [Column] Gets or sets the estimated unit cost
            of the item to transfer.
            <para></para>
            This estimated unit cost is used only for determining
            who in the approval hierarchy to send to for approval.
            <para></para>
            The actual unit cost of items checked out will be known
            once the transfer is approved and committed.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransferItem.Quantity">
            <summary>
            [Column] Gets or sets the quantity (in the base unit)
            of the item to transfer.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransferItem.StoreTransfer">
            <summary>
            Gets or sets the OStoreTransfer object that represents
            the transfer object that contains this record.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransferItem.Catalogue">
            <summary>
            Gets or sets the OCatalogue object that represents
            the catalogue of the item to transfer.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransferItem.FromStoreBin">
            <summary>
            Gets or sets the OStoreBin object that represents
            the bin to transfer the item from.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransferItem.ToStoreBin">
            <summary>
            Gets or sets the OStoreBin object that represents
            the bin to transfer the item to.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransferItem.StoreBinItem">
            <summary>
            Gets or sets the OStoreBinItem object that represents
            the bin to transfer the item to.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreTransferItem.SubTotal">
            <summary>
            Gets the sub-total as the unit price multiplied
            by the quantity.
            </summary>
        </member>
        <member name="T:LogicLayer.TLocationStockTakeItem">
            <summary>
            Summary description for OStoreStockTakeItem
            </summary>
        </member>
        <member name="F:LogicLayer.TLocationStockTakeItem.PhysicalQuantity">
            <summary>
            Captures the physical quantity of the catalogue item at stock take start.
            </summary>
        </member>
        <member name="T:LogicLayer.OPurchaseOrderReceiptItem">
            <summary>
            Represents the record that contains information
            about the quantity of the item received from
            the vendor. This is associated one of the line
            items of the purchase order line items.
            </summary>
            <summary>
            Represents the record that contains information
            about the quantity of the item received from
            the vendor. This is associated one of the line
            items of the purchase order line items.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseOrderReceiptItem.Saving">
            <summary>
            Check in as a store item, if the purchase order item was
            of a material type.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceiptItem.PurchaseOrderReceiptID">
            <summary>
            [Column] Gets or sets the foreign key to the PurchaseOrderReceipt table 
            that indicates the receipt that contains this item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceiptItem.PurchaseOrderItemID">
            <summary>
            [Column] Gets or sets the foreign key to the PurchaseOrderItem table 
            that indicates the item in the purchase order this receipt item
            is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceiptItem.UnitPrice">
            <summary>
            [Column] Gets or sets the unit price or the dollar amount 
            delivered for this item. This is editable if the receipt 
            mode of the item is dollar amount.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceiptItem.QuantityDelivered">
            <summary>
            [Column] Gets or sets the quantity delivered for this item.
            This is editable if the receipt mode of the item is quantity.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceiptItem.ExpiryDate">
            <summary>
            [Column] Gets or sets the expiry date of this batch of
            items if applicable. When checking in materials into the store,
            this value will be copied to the item batch's details.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceiptItem.LotNumber">
            <summary>
            [Column] Gets or sets the lot number of this batch of
            items if applicable. When checking in materials into the store,
            this value will be copied to the item batch's details.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceiptItem.EquipmentName">
            <summary>
            [Column] Gets or sets the name of the equipment
            that will be checked-in.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceiptItem.EquipmentParentID">
            <summary>
            [Column] Gets or sets the foreign key to the
            Equipment table that indicates the equipment that
            this equipment to be checked-in belongs under.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceiptItem.EquipmentModelNumber">
            <summary>
            [Column] Gets or sets the model number of the
            equipment to be checked-in.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceiptItem.EquipmentSerialNumber">
            <summary>
            [Column] Gets or sets the serial number of the
            equipment to be checked-in.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceiptItem.EquipmentWarrantyExpiryDate">
            <summary>
            [Column] Gets or sets the warranty expiry date of the
            equipment to be checked-in.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceiptItem.EquipmentDateOfManufacture">
            <summary>
            [Column] Gets or sets the date of manufacture of the
            equipment to be checked-in.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceiptItem.EquipmentBarcode">
            <summary>
            [Column] Gets or sets the barcode of the equipment
            to be checked in.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceiptItem.PurchaseOrderReceipt">
            <summary>
            Gets or sets the O object that represents
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceiptItem.PurchaseOrderItem">
            <summary>
            Gets or sets the OPurchaseOrderItem object that 
            represents the purchase order this receipt item
            is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceiptItem.EquipmentParent">
            <summary>
            Gets or sets a reference to the OEquipment object
            that represents the parent equipment a
            new equipment should be classified under.
            </summary>
        </member>
        <member name="T:LogicLayer.TCurrencyExchangeRate">
            <summary>
            Summary description for OChecklist
            </summary>
        </member>
        <member name="M:LogicLayer.OCurrencyExchangeRate.IsRemovable">
            <summary>
            Allow deactivation only if the object is new
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OCurrencyExchangeRate.CurrencyID">
            <summary>
            [Column] Gets or sets the foreign key to the Currency
            table that represents the currency that this exchange
            rate is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OCurrencyExchangeRate.EffectiveStartDate">
            <summary>
            [Column] Gets or sets the effective start date that this
            exchange rate application from.
            </summary>
        </member>
        <member name="P:LogicLayer.OCurrencyExchangeRate.EffectiveEndDate">
            <summary>
            [Column] Gets or sets the effective end date that this
            exchange rate application to.
            </summary>
        </member>
        <member name="P:LogicLayer.OCurrencyExchangeRate.ForeignToBaseExchangeRate">
            <summary>
            [Column] Gets or sets the exchange rate, or the factor 
            used to multiply an amount in the foreign currency to obtain
            the amount in the base currency.
            <para></para>
            For example, if the system's base currency is SGD, and
            we are defining 0.89 as the foreign-to-base exchange rate
            for NZD, that means 1 NZD will buy us 0.89 SGD.
            </summary>
        </member>
        <member name="T:LogicLayer.TCode">
            <summary>
            Summary description for OCode
            </summary>
            <summary>
            Summary description for OCode
            </summary>
            <summary>
            Summary description for OCode
            </summary>
        </member>
        <member name="T:LogicLayer.OCode">
            <summary>
            Represents codes that can be attached to other objects for 
            categorization. Examples of codes are work types, types of service, 
            caller types, vendor classification. 
            <para></para>
            Code Types are declared hierarchically, and so the hierarchical structure
            of the type of Code objects will also follow the Code Types.
            <para></para>
            As these codes can be entered by the user at the front end through the 
            Code module, there should be as little logic tied to these codes as 
            possible.
            </summary>
            <summary>
            Represents codes that can be attached to other objects for 
            categorization. Examples of codes are work types, types of service, 
            caller types, vendor classification. 
            <para></para>
            Code Types are declared hierarchically, and so the hierarchical structure
            of the type of Code objects will also follow the Code Types.
            <para></para>
            As these codes can be entered by the user at the front end through the 
            Code module, there should be as little logic tied to these codes as 
            possible.
            </summary>
        </member>
        <member name="M:LogicLayer.OCode.GetPurchaseGroupTypes(LogicLayer.OUser,System.String,System.Nullable{System.Guid})">
            <summary>
            
            </summary>
            <param name="user"></param>
            <param name="objectType"></param>
            <param name="includingPurchaseGroupTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCode.GetAccessiblePurchaseTypes(LogicLayer.OUser,System.String)">
            <summary>
            
            </summary>
            <param name="user"></param>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCode.GetPurchaseTypes(LogicLayer.OUser,System.Nullable{System.Guid},System.String,System.Nullable{System.Guid})">
            <summary>
            
            </summary>
            <param name="user"></param>
            <param name="purchaseGroupId"></param>
            <param name="objectType"></param>
            <param name="includingPurchaseTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCode.IsDeactivatable">
            <summary>
            Disallows delete if the code is being used in a work,
            or a work cost
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCode.IsCyclicalReference">
            <summary>
            Tests if the object's parent is a cyclical reference back
            to itself.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCode.GetRootCodes">
            <summary>
            Get all root codes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCode.FindCodes(System.String)">
            <summary>
            Get all root codes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCode.GetCodesByType(System.String,System.Nullable{System.Guid})">
            <summary>
            Get all codes by type.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCode.GetCodesByTypeOrderByParentPath(System.String)">
            <summary>
            Get all codes by type and order it by the parent's name 
            concatenant with the current code's name.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCode.GetTableCodesWithPath(System.String)">
            <summary>
            Get all codes with full path and order by path
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCode.GetCodesByTypeOrderByParentPathAsDataTable(System.String)">
            <summary>
            Get all codes by type and order it by the parent's name 
            concatenant with the current code's name.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCode.GetCodesByTypeAndParentID(System.String,System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Get all codes given a specific type and parent ID.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCode.GetCodesByParentID(System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Get all codes given a specific type and parent ID.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCode.GetAccessibleTypesOfService(LogicLayer.OUser,System.String)">
            <summary>
            Gets a list of types of services accessible by the user 
            when adding or editing the specified object type. If the positions
            allows access to all types of services, then this returns null.
            </summary>
            <param name="user"></param>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCode.GetWorkTypes(LogicLayer.OUser,System.String,System.Nullable{System.Guid})">
            <summary>
            Get accessible work types based on the roleNameCode list.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCode.GetTypeOfServices(LogicLayer.OUser,System.Nullable{System.Guid},System.String,System.Nullable{System.Guid})">
            <summary>
            Get accessible types of services based on the specified 
            user, workTypeId and a list of roleNameCode
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OCode.CodeTypeID">
            <summary>
            [Column] Gets or sets the foreign key to the CodeType table 
            that indicates the code type this code is associated with. The 
            OCodeType is used to differentiate the different classes of 
            codes. For example, the application may have codes that 
            belong to 'VendorClassification', 'WorkType', 'LoanType', etc.
            </summary>
        </member>
        <member name="P:LogicLayer.OCode.Identifier">
            <summary>
            [Column] This is currently not used.
            </summary>
        </member>
        <member name="P:LogicLayer.OCode.RunningNumberCode">
            <summary>
            [Column] Gets or sets a running number code that 
            can be added to an Equipment if set up
            in the Running Number Generator.
            </summary>
        </member>
        <member name="P:LogicLayer.OCode.Children">
            <summary>
            Gets a one-to-many list of OCode objects that represents 
            the next level code types under this current one.
            </summary>
        </member>
        <member name="P:LogicLayer.OCode.Parent">
            <summary>
            Gets or sets the OCode object that represents the parent 
            code under which this current one belongs to.
            </summary>
        </member>
        <member name="P:LogicLayer.OCode.CodeType">
            <summary>
            Gets or sets the OCodeType object that represents the code 
            type this code is associated with. The OCodeType is used to 
            differentiate the different classes of codes. For example, the 
            application may have codes that belong to  
            'VendorClassification', 'WorkType', 'LoanType', etc.
            </summary>
        </member>
        <member name="P:LogicLayer.OCode.ParentPath">
            <summary>
            Returns the parent's name concatenated with this object's 
            name.
            </summary>
        </member>
        <member name="T:LogicLayer.CRVVendorService.VendorService">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.#ctor">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.SubscribeVendor(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.SubscribeVendorAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.SubscribeVendorAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.UnSubscribeVendor(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.UnSubscribeVendorAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.UnSubscribeVendorAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.IsVendorSubscribed(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.IsVendorSubscribedAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.IsVendorSubscribedAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.GetOutdatedAndNewVendorList(System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.GetOutdatedAndNewVendorListAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.GetOutdatedAndNewVendorListAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.SearchVendor(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.SearchVendorAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.SearchVendorAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.GetVendor(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.GetVendorAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.GetVendorAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.ConfirmVendorRetrieved(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.ConfirmVendorRetrievedAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.ConfirmVendorRetrievedAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.GetTradeTypeCodesByVendorType(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.GetTradeTypeCodesByVendorTypeAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.GetTradeTypeCodesByVendorTypeAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.GetVendorClassificationCodes(System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.GetVendorClassificationCodesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.GetVendorClassificationCodesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.GetVendorTypeCodes(System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.GetVendorTypeCodesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.GetVendorTypeCodesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVVendorService.VendorService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVVendorService.VendorService.SubscribeVendorCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVVendorService.VendorService.UnSubscribeVendorCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVVendorService.VendorService.IsVendorSubscribedCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVVendorService.VendorService.GetOutdatedAndNewVendorListCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVVendorService.VendorService.SearchVendorCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVVendorService.VendorService.GetVendorCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVVendorService.VendorService.ConfirmVendorRetrievedCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVVendorService.VendorService.GetTradeTypeCodesByVendorTypeCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVVendorService.VendorService.GetVendorClassificationCodesCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVVendorService.VendorService.GetVendorTypeCodesCompleted">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.Vendor">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Vendor.ObjectID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Vendor.ObjectNumber">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Vendor.CompanyRegistrationNumber">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Vendor.SBU">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Vendor.IncCountry">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Vendor.RegAddressBlockHouseNo">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Vendor.RegAddressStreetName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Vendor.RegAddressUnitNo">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Vendor.RegAddressBuildingname">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Vendor.RegCountry">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Vendor.RegAddressCity">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Vendor.RegAddressPostalCode">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Vendor.OperatingAddressBlockHouseNo">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Vendor.OperatingAddressStreetName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Vendor.OperatingAddressUnitNo">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Vendor.OperatingAddressBuildingname">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Vendor.OpsCountry">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Vendor.OperatingAddressCity">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Vendor.OperatingAddressPostalCode">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Vendor.Status">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Vendor.ModifiedDateTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Vendor.VendorVersion">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.VendorVersion">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorVersion.ObjectID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorVersion.ObjectName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorVersion.VendorLocalName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorVersion.ModifiedDateTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorVersion.VendorTradeTypes">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorVersion.CRVVendorSpecs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorVersion.VendorFinancialStatuses">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.VendorTradeType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorTradeType.ObjectID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorTradeType.VendorTypeID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorTradeType.TradeTypeID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorTradeType.ModifiedDateTime">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.Code">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Code.ObjectID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Code.ObjectName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Code.ModifiedDateTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.Code.Description">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.VendorFinancialStatus">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorFinancialStatus.ObjectID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorFinancialStatus.Year">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorFinancialStatus.Currency">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorFinancialStatus.AuthorisedCapital">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorFinancialStatus.PaidUpCapital">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorFinancialStatus.LatestShareholderFund">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorFinancialStatus.CurrentAssetOverLiabilities">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorFinancialStatus.TurnOver">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorFinancialStatus.NetProfitOverLossAfterTax">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorFinancialStatus.DebtRatio">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorFinancialStatus.InventoryTurnover">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorFinancialStatus.InterestCoverRatio">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorFinancialStatus.ModifiedDateTime">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.VendorSpecification">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorSpecification.ObjectID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorSpecification.VendorTypeID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorSpecification.VendorClassID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.VendorSpecification.ModifiedDateTime">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.SubscribeVendorCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.SubscribeVendorCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.SubscribeVendorCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.UnSubscribeVendorCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.UnSubscribeVendorCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.UnSubscribeVendorCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.IsVendorSubscribedCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.IsVendorSubscribedCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.IsVendorSubscribedCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.GetOutdatedAndNewVendorListCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.GetOutdatedAndNewVendorListCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.GetOutdatedAndNewVendorListCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.SearchVendorCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.SearchVendorCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.SearchVendorCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.GetVendorCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.GetVendorCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.GetVendorCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.ConfirmVendorRetrievedCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.ConfirmVendorRetrievedCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.ConfirmVendorRetrievedCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.GetTradeTypeCodesByVendorTypeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.GetTradeTypeCodesByVendorTypeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.GetTradeTypeCodesByVendorTypeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.GetVendorClassificationCodesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.GetVendorClassificationCodesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.GetVendorClassificationCodesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.GetVendorTypeCodesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVVendorService.GetVendorTypeCodesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVVendorService.GetVendorTypeCodesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.TWorkCost">
            <summary>
            Summary description for OVendor
            </summary>
            <summary>
            Summary description for OVendor
            </summary>
            <summary>
            Summary description for OVendor
            </summary>
        </member>
        <member name="T:LogicLayer.OWorkCost">
            <summary>
            Represents the maintenance cost that will be incurred or
            has been incurred by the work.
            </summary>
            <summary>
            Represents the maintenance cost that will be incurred or
            has been incurred by the work.
            </summary>
            <summary>
            Represents the maintenance cost that will be incurred or
            has been incurred by the work.
            </summary>
        </member>
        <member name="M:LogicLayer.OWorkCost.IsDeactivatable">
            <summary>
            This object is only deactivable if it has not been saved,
            or if this is not a Material cost type.
            
            Returns true if deactivable, false otherwise. The 
            UIGridview makes use of this field to hide and show the
            DeleteObject button accordingly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OWorkCost.Saving">
            <summary>
            This method is overriden to check-out items from the store
            when saving this work cost.
            
            The application must be responsible for validating that
            the check-out is possible (given the physical balances in
            the store vs the number reserved items, etc).
            </summary>
        </member>
        <member name="M:LogicLayer.OWorkCost.HandlRemovedItems">
            <summary>
            Handles items removed from the work cost.
            </summary>
        </member>
        <member name="M:LogicLayer.OWorkCost.HandleCheckOut">
            <summary>
            If this is a store item, checks if there was a change in the
            actual quantity. Perform check-in/out if so.
            
            Where applicable, this method must always be called BEFORE
            calling HandleReservation();
            </summary>
        </member>
        <member name="M:LogicLayer.OWorkCost.HandleReservation">
            <summary>
            If this is a store item, checks if there was a change in the
            estimated quantity. Perform reservation if so.
            
            Where applicable, this method must always be called AFTER
            calling HandleCheckOut();
            </summary>
        </member>
        <member name="M:LogicLayer.OWorkCost.RecomputeEstimatedAndActualTotal">
            <summary>
            Recompute the estimated and actual total. This should
            only be called after the cost has been updated.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.WorkID">
            <summary>
            [Column] Gets or sets the foreign key to the Work table 
            that indicates the work object that this cost item applies to.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.CostType">
            <summary>
            [Column] Gets or sets a value that indicates the type of
            the cost this cost item is classified under.
            <para></para>
            <list>
              <item>0 - Craft and technician.</item>
              <item>1 - Obsolete, not used anymore.</item>
              <item>2 - Others.</item>
              <item>3 - Material</item>        /// </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.StoreID">
            <summary>
            [Column] Gets or sets the foreign key to the Store table 
            that indicates the store that the material will be
            checked out from. This is applicable only if CostType = 3.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.StoreBinID">
            <summary>
            [Column] Gets or sets the foreign key to the StoreBin table 
            that indicates the bin that the material will be
            checked out from. This is applicable only if CostType = 3.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.StoreBinReservationID">
            <summary>
            [Column] Gets or sets the foreign key to the StoreBinReservation table 
            that indicates the record used to indicate the reservation
            of the material at the store bin. This is applicable only 
            if CostType = 3.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.CatalogueID">
            <summary>
            [Column] Gets or sets the foreign key to the Catalogue table 
            that indicates the record used to indicate the catalogue
            of the material that will be used in the work.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.CraftID">
            <summary>
            [Column] Gets or sets the foreign key to the Craft table 
            that indicates the craft of the technician that will 
            be assigned to this work. This is applicable only 
            if CostType = 0.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.UserID">
            <summary>
            [Column] Gets or sets the foreign key to the User table 
            that indicates the in-house maintenance technician who
            will be assigned to this work. This is applicable only 
            if CostType = 0.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.FixedRateID">
            <summary>
            [Column] This is obsolete and not in use.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.PartID">
            <summary>
            [Column] This is obsolete and not in use.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.UnitOfMeasureID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table 
            that indicates the unit of measure of this cost item.
            When CostType = 3 for material check-outs, this 
            indicates the unit that the material will be checked
            out of the store in.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.CostDescription">
            <summary>
            [Column] Gets or sets the description that of this cost
            item.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.EstimatedOvertime">
            <summary>
            [Column] Gets or sets a value that indicates whether 
            the technician is expected to work overtime for this
            work. 
            <para></para>
            <list>
              <item>0 - No, technician is not expected to work overtime.</item>
              <item>1 - Yes, technician is expected to work overtime.</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.EstimatedUnitCost">
            <summary>
            [Column] Gets or sets the estimated unit cost of this cost
            item. If CostType = 0, this represents the estimated hourly
            rate of technicians of the specified craft.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.EstimatedQuantity">
            <summary>
            [Column] Gets or sets estimated quantity required
            to complete maintenance of works created by this
            work.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.EstimatedQuantityPrevious">
            <summary>
            [Column] Gets or sets the estimated quantity
            previously saved into the database.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.EstimatedCostFactor">
            <summary>
            [Column] Gets or sets a cost factor applied to the cost
            to give the final cost.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.EstimatedCostTotal">
            <summary>
            [Column] Gets or sets the estimated total for this cost
            item. This can be computed by taking EstimatedUnitCost x
            EstimatedCostFactor x EstimatedQuantity.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.ActualOvertime">
            <summary>
            [Column] Gets or sets a value that indicates whether 
            the technician has worked overtime for this
            work. 
            <para></para>
            <list>
              <item>0 - No, technician has not worked overtime.</item>
              <item>1 - Yes, technician has worked overtime.</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.ActualUnitCost">
            <summary>
            [Column] Gets or sets the actual unit cost of this cost
            item. If CostType = 0, this represents the actual hourly
            rate of technicians of the specified craft.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.ActualQuantity">
            <summary>
            [Column] Gets or sets actual quantity required
            to complete maintenance of works created by this
            work.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.ActualQuantityPrevious">
            <summary>
            [Column] Gets or sets actual quantity previously saved.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.ActualCostFactor">
            <summary>
            [Column] Gets or sets a cost factor applied to the cost
            to give the final cost.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.ActualCostTotal">
            <summary>
            [Column] Gets or sets the actual total for this cost
            item. This can be computed by taking ActualUnitCost x
            ActualCostFactor x ActualQuantity.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.ChargeOut">
            <summary>
            [Column] Gets or sets the amount to charge the caller
            for this work. This is applicable only if the Work's
            IsChargedToCaller = 1.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.Store">
            <summary>
            Gets or sets the OStore object that represents the
            store that the material will be checked out from.
            This is applicable only if CostType = 3.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.StoreBin">
            <summary>
            Gets or sets the O object that represents
            the bin that the material will be
            checked out from. This is applicable only if CostType = 3.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.StoreBinReservation">
            <summary>
            Gets or sets the OStoreBinReservation object 
            that represents the record used to indicate the reservation
            of the material at the store bin. This is applicable only 
            if CostType = 3.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.Catalogue">
            <summary>
            Gets or sets the OCatalogue object that representsthe catalogue
            of the material that will be used in the work.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.Craft">
            <summary>
            Gets or sets the OCraft object that represents craft of
            the technician that will be assigned to this work. 
            This is applicable only if CostType = 0.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.Technician">
            <summary>
            Gets or sets the OUser object that represents
            the in-house maintenance technician who
            will be assigned to this work. This is applicable only 
            if CostType = 0.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.FixedRate">
            <summary>
            [Column] This is obsolete and not in use.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.UnitOfMeasure">
            <summary>
            Gets or sets the O object that represents
            the unit of measure of this cost item.
            When CostType = 3 for material check-outs, this 
            indicates the unit that the material will be checked
            out of the store in.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.EstimatedSubTotal">
            <summary>
            Gets the estimated subtotal of this work.
            This is computed by taking EstimatedUnitCost x
            EstimatedCostFactor x EstimatedQuantity.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.ActualSubTotal">
            <summary>
            Gets the actual subtotal of this work.
            This is computed by taking ActualUnitCost x
            ActualCostFactor x ActualQuantity.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.CraftStore">
            <summary>
            Gets the name of the craft (if CostType = 0) or the
            name of the store (if CostType = 3).
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.CostTypeName">
            <summary>
            Gets the localized text for the type of cost.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCost.UnitOfMeasureText">
            <summary>
            Gets the localized text for the 'hour' if CostType = 0
            (craft/technician). Otherwise, gets the selected unit 
            of measure's name.
            </summary>
        </member>
        <member name="T:LogicLayer.TUnitConversionTo">
            <summary>
            Summary description for OChecklist
            </summary>
        </member>
        <member name="T:LogicLayer.OUnitConversionTo">
            <summary>
            Represents a set of conversions to a target unit, together with
            the conversion factor from the base unit.
            </summary>
        </member>
        <member name="M:LogicLayer.OUnitConversionTo.CountDecimals(System.Decimal)">
            <summary>
            Count the number of decimals in the specified value.
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUnitConversionTo.ValidateConversionHasLessThanFourDecimalPlaces">
            <summary>
            Validates the ensure that the conversion has no 
            more than 4 decimal places that may cause computations
            to corrupt.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OUnitConversionTo.ToUnitOfMeasureID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table that indicates the unit of measure to convert the base unit to.
            </summary>
        </member>
        <member name="P:LogicLayer.OUnitConversionTo.ConversionFactor">
            <summary>
            [Column] Gets or sets the conversion factor, the factor to multiply to 
            convert a value in the 'from' unit of measure to the 'to' unit of 
            measure.
            <para></para>
            For example, if the base unit is kilogram and the quantity is 1, then 
            the conversion factor from 'kg' to 'g' is 1000. Therefore, 1 kg is 
            1000g.
            </summary>
        </member>
        <member name="P:LogicLayer.OUnitConversionTo.ToUnitOfMeasure">
            <summary>
            Gets or sets the OCode object that represents the unit of measure to convert the base unit to.
            </summary>
        </member>
        <member name="T:LogicLayer.OPurchaseOrderReceipt">
            <summary>
            Represents a single receipt performed against a purchase order.
            A purchase order may have multiple receipts, each receiving the
            materials and services ordered in part or in full. When 
            a receipt of material items is committed, the material items
            will be checked in to the store as inventory.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceipt.PurchaseOrderID">
            <summary>
            [Column] Gets or sets the foreign key to the PurchaseOrder table 
            that indicates the purchase order this receipt is performed
            against.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceipt.DateOfReceipt">
            <summary>
            [Column] Gets or sets the date the items was received.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceipt.StoreID">
            <summary>
            [Column] Gets or sets the foreign key to the Store table 
            that indicates the store that material items will
            be checked in to.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceipt.StoreBinID">
            <summary>
            [Column] Gets or sets the foreign key to the StoreBin table 
            that indicates the bin that material items will
            be checked in to.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceipt.DeliveryOrderNumber">
            <summary>
            [Column] Gets or sets the delivery order number associated
            with this receipt.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceipt.Description">
            <summary>
            [Column] Gets or sets the description of this receipt.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceipt.Store">
            <summary>
            Gets or sets the OStore object that represents
            that material items will be checked in to.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceipt.StoreBin">
            <summary>
            Gets or sets the OStoreBin object that represents
            the bin that material items will be checked in to.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceipt.PurchaseOrder">
            <summary>
            Gets or sets the OPurchaseOrder object that represents
            the purchase order this receipt is performed
            against.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseOrderReceipt.PurchaseOrderReceiptItems">
            <summary>
            Gets a one-to-many list of OPurchaseOrderReceiptItem 
            objects that represents a list of items and the quantity
            received for this purchass order.
            </summary>
        </member>
        <member name="T:LogicLayer.OChecklistItem">
            <summary>
            Represents an item that specifies an action to be performed 
            or an item that must be inspected. Examples of checklist items
            are "Clean the air-conditioning filter," or "Check if the
            EXIT signs of the buildings meet the statutory requirements." 
            <para>
            </para>
            The user who performs the actions in a checklist may then
            indicate a response either by choosing it from a list of
            choices, or by typing a free-text comment.
            </summary>
        </member>
        <member name="P:LogicLayer.OChecklistItem.ChecklistID">
            <summary>
            [Column] Gets or sets the foreign key to the Checklist table.
            </summary>
        </member>
        <member name="P:LogicLayer.OChecklistItem.ChecklistResponseSetID">
            <summary>
            [Column] Gets or sets the foreign key to the 
            ChecklistResponseSet table. 
            <para></para>
            If the ChecklistType of this object is set to 0, or 
            ChecklistItemType.Choice, then this field must not be null.
            </summary>
        </member>
        <member name="P:LogicLayer.OChecklistItem.StepNumber">
            <summary>
            [Column] Gets or sets the step number of the checklist item.
            </summary>
        </member>
        <member name="P:LogicLayer.OChecklistItem.ChecklistType">
            <summary>
            [Column] Gets or sets the item type for this checklist item.
            <para></para>
            <list>
            <item>0 - Choice: the user can select the response from a list of choices</item>
            <item>1 - Remarks: the user can input remarks</item>
            <item>2 - None: the user need not input any remarks or select any response.</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OChecklistItem.Checklist">
            <summary>
            Gets or sets the checklist that contains this checklist item.
            </summary>
        </member>
        <member name="P:LogicLayer.OChecklistItem.ChecklistResponseSet">
            <summary>
            Gets the ChecklistResponseSet object associated with this
            checklist item.
            </summary>
        </member>
        <member name="P:LogicLayer.OChecklistItem.ChecklistTypeString">
            <summary>
            Gets the checklist item type as a localized text.
            </summary>
        </member>
        <member name="P:LogicLayer.OChecklistItem.IsOverallText">
            <summary>
            Gets the checklist item IsOverall in text.
            </summary>
        </member>
        <member name="P:LogicLayer.OChecklistItem.IsMandatoryFieldText">
            <summary>
            Gets the checklist item IsMandatoryField in text.
            </summary>=
        </member>
        <member name="F:LogicLayer.ChecklistItemType.Choice">
            <summary>
            Indicates that the checklist item consists of a choice of answers.
            </summary>
        </member>
        <member name="F:LogicLayer.ChecklistItemType.Remarks">
            <summary>
            Indicates that the checklist item requires only remarks for input.
            </summary>
        </member>
        <member name="F:LogicLayer.ChecklistItemType.None">
            <summary>
            Indicates that the checklist item does not require any input.
            </summary>
        </member>
        <member name="F:LogicLayer.ChecklistItemType.MultipleSelections">
            <summary>
            Indicates that the checklist item consists of a choice of answers.
            </summary>
        </member>
        <member name="F:LogicLayer.ChecklistItemType.SingleLineFreeText">
            <summary>
            Indicates that the checklist item requires only free text (single line) for input.
            </summary>
        </member>
        <member name="T:LogicLayer.TStoreItemTransaction">
            <summary>
            Summary description for OStoreItem
            Catalogue item that could be store in the store.
            Actual item with its quantity will be reflected in the storebin object
            </summary>
            <summary>
            Summary description for OStoreItem
            Catalogue item that could be store in the store.
            Actual item with its quantity will be reflected in the storebin object
            </summary>
        </member>
        <member name="T:LogicLayer.OStoreItemTransaction">
            <summary>
            Represents a single history of transaction against an item
            batch in the store.
            </summary>
            <summary>
            Represents a single history of transaction against an item
            batch in the store.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreItemTransaction.GetStoreItemTransactions(System.Guid,System.Int32,System.Int32)">
            <summary>
            Get store item transactions in a data table format, for the specified
            year, month and store catalogue item.
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreItemTransaction.ReverseTransaction">
            <summary>
            Reverses this transaction by adjusting the values back 
            to the OStoreBinItem. An additional transaction is
            NOT created to log the adjustment; instead this
            transaction is deactivated from the database.
            <para></para>
            This method is used to cancel check-in/check-out/ 
            adjustment/transfer transactions. 
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreItemTransaction.HasTransactionsThatOccuredAfterThis">
            <summary>
            Determines if there are transactions that occured after this
            transaction on the same OStoreBinItem. 
            <para></para>
            NOTE: Only active transactions (IsDeleted=0) that occured 
            after this will be considered.
            </summary>
            <returns>
            Returns true if there are later transactions, false otherwise.
            </returns>
        </member>
        <member name="M:LogicLayer.OStoreItemTransaction.GetTransactionsAssociatedWithSourceObject(Anacle.DataFramework.PersistentObject)">
            <summary>
            Gets a list of transactions associated with the
            source object, the source object being the line
            item in the store check-in/check-out/adjustment/
            transfer.
            <para></para>
            Note: Only the active transactions (IsDeleted=0)
            will be returned.
            </summary>
            <param name="sourceObject">The source object
            to get the associated transactions.</param>
            <returns>A list of OStoreItemTransaction objects
            associated with the source object.</returns>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.Remarks">
            <summary>
            Gets the localized text representing the transaction type.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.StoreBinItemID">
            <summary>
            [Column] Gets or sets the foreign key to the StoreBinItem table
            that represents the batch that this transaction acted upon.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.SourceObjectID">
            <summary>
            [Column] Gets or sets the foreign key to the StoreCheckInItem,
            or StoreCheckOutItem, or StoreTransferItem, or StoreAdjustItem,
            or the WorkCost table the original object that resulted in a 
            transaction with the batch.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.StoreItemID">
            <summary>
            [Column] Gets or sets the foreign key to the StoreItem table.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.Quantity">
            <summary>
            [Column] Gets or sets the quantity adjusted on the item. If this transaction represents a check-in, the quantity will be a positive value. If the transaction represents a check-out, the quantity will be negative value.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.UnitPrice">
            <summary>
            [Column] Gets or sets the unit price of the item involved in this transaction.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.DateOfTransaction">
            <summary>
            [Column] Gets or sets the system date/time the transaction on the
            item occured.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.TransactionType">
            <summary>
            [Column] Gets or sets the transaction type of this transaction.
            <para></para>
            	<list>
            		<item>0 / StoreItemTransactionType.CheckIn: The transaction is a check-in transaction.</item>
            		<item>1 / StoreItemTransactionType.CheckOut: The transaction is a check-out transaction.</item>
            		<item>2 / StoreItemTransactionType.StoreTransfer: The transaction is a store-to-store transfer.</item>
            		<item>3 / StoreItemTransactionType.Receive: The transaction is a receive.</item>
            		<item>4 / StoreItemTransactionType.Adjust: The transaction is a adjustment.</item>
            	</list>
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.DestinationType">
            <summary>
            [Column] Gets or sets the destination type.
            <para></para>
            	<list>
            		<item>0 - StoreDestinationType.None: No destination</item>
            		<item>1 - StoreDestinationType.User: Items are consumed by a user.</item>
            		<item>2 - StoreDestinationType.Work: Items are consumed by a work.</item>
            		<item>3 - StoreDestinationType.Location: Items are consumed by a location.</item>
            		<item>4 - StoreDestinationType.Equipment: Items are consumed by a equipment.</item>
            	</list>
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.FromStoreID">
            <summary>
            [Column] Gets or sets the foreign key to the Store table that 
            indicates the store the item was consumed from in this 
            transaction.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.ToStoreID">
            <summary>
            [Column] Gets or sets the foreign key to the Store table that 
            indicates the store the item was added to in this 
            transaction.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.WorkID">
            <summary>
            [Column] Gets or sets the foreign key to the Work table that indicates the work that 
            consumed the items during this transaction.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.UserID">
            <summary>
            [Column] Gets or sets the foreign key to the User table that 
            indicates the user who consumed the items during this transaction.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.LocationID">
            <summary>
            [Column] Gets or sets the foreign key to the Location table to 
            indicate the location that consumed the item in this transaction.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.EquipmentID">
            <summary>
            [Column] Gets or sets the foreign key to the Equipment table to indicate the equipment that consumed the item in this transaction.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.StoreItem">
            <summary>
            Gets or sets the OStoreItem object that represents the store 
            item that this transaction record belongs to.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.FromStore">
            <summary>
            Gets or sets the OStore object that represents the store the item 
            was consumed from in this transaction.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.ToStore">
            <summary>
            Gets or sets the OStore object that represents the store the item 
            was added to in this transaction.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.Work">
            <summary>
            Gets or sets the OWork object that represents the work that 
            consumed the items during this transaction.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.User">
            <summary>
            Gets or sets the OUser object that represents the user who consumed 
            the items during this transaction.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.Location">
            <summary>
            Gets or sets the OLocation object that represents the location
            that consumed the item in this transaction.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.Equipment">
            <summary>
            Gets or sets the OEquipment object that represents the equipment 
            that consumed the item in this transaction.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreItemTransaction.TransactionTypeText">
            <summary>
            Gets the localized text representing the transaction type.
            </summary>
        </member>
        <member name="M:LogicLayer.WebPartsPersonalizationProvider.LoadPersonalizationBlobs(System.Web.UI.WebControls.WebParts.WebPartManager,System.String,System.String,System.Byte[]@,System.Byte[]@)">
            <summary>
            Loads the personalization data bytes.
            </summary>
            <param name="webPartManager"></param>
            <param name="path"></param>
            <param name="userName"></param>
            <param name="sharedDataBlob"></param>
            <param name="userDataBlob"></param>
        </member>
        <member name="M:LogicLayer.WebPartsPersonalizationProvider.ResetPersonalizationBlob(System.Web.UI.WebControls.WebParts.WebPartManager,System.String,System.String)">
            <summary>
            Deletes the personalization data from the database.
            </summary>
            <param name="webPartManager"></param>
            <param name="path"></param>
            <param name="userName"></param>
        </member>
        <member name="M:LogicLayer.WebPartsPersonalizationProvider.SavePersonalizationBlob(System.Web.UI.WebControls.WebParts.WebPartManager,System.String,System.String,System.Byte[])">
            <summary>
            Saves the personalization data into the database.
            </summary>
            <param name="webPartManager"></param>
            <param name="path"></param>
            <param name="userName"></param>
            <param name="dataBlob"></param>
        </member>
        <member name="M:LogicLayer.WebPartsPersonalizationProvider.FindState(System.Web.UI.WebControls.WebParts.PersonalizationScope,System.Web.UI.WebControls.WebParts.PersonalizationStateQuery,System.Int32,System.Int32,System.Int32@)">
            <summary>
            This method is not supported.
            </summary>
            <param name="scope"></param>
            <param name="query"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="totalRecords"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.WebPartsPersonalizationProvider.GetCountOfState(System.Web.UI.WebControls.WebParts.PersonalizationScope,System.Web.UI.WebControls.WebParts.PersonalizationStateQuery)">
            <summary>
            This method is not supported.
            </summary>
            <param name="scope"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.WebPartsPersonalizationProvider.ResetState(System.Web.UI.WebControls.WebParts.PersonalizationScope,System.String[],System.String[])">
            <summary>
            This method is not supported.
            </summary>
            <param name="scope"></param>
            <param name="paths"></param>
            <param name="usernames"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.WebPartsPersonalizationProvider.ResetUserState(System.String,System.DateTime)">
            <summary>
            This method is not supported.
            </summary>
            <param name="path"></param>
            <param name="userInactiveSinceDate"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.WebPartsPersonalizationProvider.ApplicationName">
            <summary>
            This property is not supported.
            </summary>
        </member>
        <member name="T:LogicLayer.TSurveyResponseTo">
            <summary>
            Summary description for OSurveyResponseTo
            </summary>
        </member>
        <member name="T:LogicLayer.TStoreRequestItem">
            <summary>    
            </summary>
        </member>
        <member name="T:LogicLayer.OStoreRequestItem">
            <summary>
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreRequestItem.ComputeEstimatedUnitCost">
            <summary>
            Computes the estimated unit cost of the check out items.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreRequestItem.ConversionTextReserve">
            <summary>
            Gets a text to be displayed on screen for an example of the conversion of units.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreRequestItem.ConversionTextReturn">
            <summary>
            Gets a text to be displayed on screen for an example of the conversion of units.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreRequestItem.SubTotal">
            <summary>
            Gets the sub-total as the unit price multiplied
            by the quantity. 
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreRequestItem.SubTotalActual">
            <summary>
            Gets the sub-total as the unit price multiplied
            by the quantity. 
            </summary>
        </member>
        <member name="T:LogicLayer.TNotificationProcessTiming">
            <summary>
            Represents one level in the Notification hierarchy.
            </summary>
        </member>
        <member name="T:LogicLayer.ONotificationProcessTiming">
            <summary>
            Represents one level in the Notification hierarchy.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcessTiming.NotificationProcessID">
            <summary>
            [Column] Gets or sets the foreign key to the 
            NotificationHierarchy table that represents that
            Notification hierarchy under which this Notification
            hierarchy level belongs to.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcessTiming.NotificationLevel">
            <summary>
            [Column] Gets or sets the numeric Notification
            level of this Notification hierarchy level. 
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcessTiming.NotificationTimeInMinutes1">
            <summary>
            [Column] Gets or sets the Notification time in minutes
            for the first milestone.
            <para></para>
            This time overrides the default notification time
            in the notification hierarchy level, if the user
            indicated not to use the default notification time.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcessTiming.NotificationTimeInMinutes2">
            <summary>
            [Column] Gets or sets the Notification time in minutes
            for the second milestone.
            <para></para>
            This time overrides the default notification time
            in the notification hierarchy level, if the user
            indicated not to use the default notification time.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcessTiming.NotificationTimeInMinutes3">
            <summary>
            [Column] Gets or sets the Notification time in minutes
            for the third milestone.
            <para></para>
            This time overrides the default notification time
            in the notification hierarchy level, if the user
            indicated not to use the default notification time.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcessTiming.NotificationTimeInMinutes4">
            <summary>
            [Column] Gets or sets the Notification time in minutes
            for the fourth milestone.
            <para></para>
            This time overrides the default notification time
            in the notification hierarchy level, if the user
            indicated not to use the default notification time.
            </summary>
        </member>
        <member name="T:LogicLayer.OUserDelegatedPosition">
            <summary>
            </summary>
        </member>
        <member name="T:LogicLayer.TActivityHistory">
            <summary>
            Represents the schema for the Activity table.
            </summary>
            <summary>
            Represents the schema for the ActivityHistory table.
            </summary>
        </member>
        <member name="F:LogicLayer.TActivityHistory.CurrentStateName">
            <summary>
            Represents the column for the current status name of the task.
            </summary>
        </member>
        <member name="F:LogicLayer.TActivityHistory.TriggeringEventName">
            <summary>
            Represents the column for the event name that triggered
            this action.
            </summary>
        </member>
        <member name="F:LogicLayer.TActivityHistory.TaskName">
            <summary>
            Represents the column for the name of the task.
            </summary>
        </member>
        <member name="F:LogicLayer.TActivityHistory.TaskNumber">
            <summary>
            Represents the column for the task number of the task. 
            </summary>
        </member>
        <member name="F:LogicLayer.TActivityHistory.Description">
            <summary>
            Represents the column for the description of the task.
            </summary>
        </member>
        <member name="F:LogicLayer.TActivityHistory.TaskPreviousComments">
            <summary>
            Represents the column for the comments given by the previously
            assigned user of the task.
            </summary>
        </member>
        <member name="F:LogicLayer.TActivityHistory.ObjectTypeName">
            <summary>
            Represents the column for the .NET type name of the object.
            </summary>
        </member>
        <member name="F:LogicLayer.TActivityHistory.AttachedObjectID">
            <summary>
            Represents the column for the ObjectID of the PersistentObject 
            that this activity is related to.
            </summary>
        </member>
        <member name="F:LogicLayer.TActivityHistory.Priority">
            <summary>
            Represents the column for the priority of the task. This 
            will appear in the user's inbox of tasks as the priority.
            </summary>
        </member>
        <member name="F:LogicLayer.TActivityHistory.ScheduledStartDateTime">
            <summary>
            Represents the column for the date and time this task is
            scheduled to start.
            </summary>
        </member>
        <member name="F:LogicLayer.TActivityHistory.ScheduledEndDateTime">
            <summary>
            Represents the column for the date and time this task is 
            scheduled to end.
            </summary>
        </member>
        <member name="F:LogicLayer.TActivityHistory.WorkflowInstanceID">
            <summary>
            Represents the column for the WorkflowInstanceID as generated from the
            Workflow Engine.
            </summary>
        </member>
        <member name="F:LogicLayer.TActivityHistory.HistoryType">
            <summary>
            Represents the type represented by this activity history.
            <list>
                <item>0 - State Transition</item>
                <item>1 - User Reassignment</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.TActivityHistory.CarbonCopyUsers">
            <summary>
            Represents a many-to-many join to the User table.
            </summary>
        </member>
        <member name="P:LogicLayer.TActivityHistory.Users">
            <summary>
            Represents a many-to-many join to the User table.
            </summary>
        </member>
        <member name="P:LogicLayer.TActivityHistory.Positions">
            <summary>
            Represents a many-to-many join to the Role table.
            </summary>
        </member>
        <member name="T:LogicLayer.OActivityHistory">
            <summary>
            Represents the current activity or a task of an object.
            </summary>
            <summary>
            Represents one or more activities or tasks of a persistent object
            stored as a history in this ActivityHistory table.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivityHistory.ApprovedOnBehalfOfUser">
            <summary>
            Gets or sets the name of the user this task was
            approved on behalf of.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivityHistory.CarbonCopyUsers">
            <summary>
            Gets a list of users that are assigned to this task.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivityHistory.CurrentStateName">
            <summary>
            Gets or sets the current status name of the task.
            Developers are encouraged to use CurrentStateName to obtain
            the status name of the task instead of ObjectName,
            which was the Anacle.EAM v5.2 behavior.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivityHistory.TriggeringEventName">
            <summary>
            Gets or sets the event name triggered by the user or
            the system that resulted in the workflow entering
            the current state.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivityHistory.TaskName">
            <summary>
            Gets or sets the name of the task.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivityHistory.TaskNumber">
            <summary>
            Gets or sets the task number of the task. This can be used to indicate the
            Purchase Order number for a Purchase Order object, the Work
            number for a Work object.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivityHistory.Description">
            <summary>
            Gets or sets the description of the task.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivityHistory.TaskPreviousComments">
            <summary>
            Gets or sets the comments given by the previously
            assigned user of the task.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivityHistory.ObjectTypeName">
            <summary>
            Gets or sets the .NET type name of the object.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivityHistory.AttachedObjectID">
            <summary>
            Gets or sets the ObjectID of the PersistentObject that this activity
            is related to.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivityHistory.Priority">
            <summary>
            Gets or sets the priority of the task. This will appear in the
            user's inbox of tasks as the priority.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivityHistory.PreviousApprovalLevel">
            <summary>
            [Column] Gets or sets the approval level of the approver
            that approved the object. 
            <para></para>
            If this is not an approval in 
            the approval process, this value will be null.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivityHistory.CurrentApprovalLevel">
            <summary>
            [Column] Gets or sets the approval level of the approver
            that will be approving the object. 
            <para></para>
            If this is not an approval in 
            the approval process, this value will be null.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivityHistory.ScheduledStartDateTime">
            <summary>
            Gets or sets the date and time this task is scheduled to start.
            This affects when the task will appear in the user's inbox. If
            this date and time is set to the future, then the task will only
            appear after that point in time.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivityHistory.ScheduledEndDateTime">
            <summary>
            Gets or sets the date and time this task is scheduled to end.
            This affects how the task appears in the user's inbox. If this
            date and time is in the past, then the task will be highlight
            in the user's inbox as outstanding.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivityHistory.WorkflowInstanceID">
            <summary>
            Gets or sets the WorkflowInstanceID as generated from the
            Workflow Engine.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivityHistory.HistoryType">
            <summary>
            Gets or sets the type represented by this activity history.
            <list>
                <item>0 - State Transition</item>
                <item>1 - User Reassignment</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OActivityHistory.Users">
            <summary>
            Gets a list of users that are assigned to this task.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivityHistory.Positions">
            <summary>
            Gets a list roles that are assigned to this task.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivityHistory.AssignedUserNames">
            <summary>
            Gets a comma-separated list of users who are assigned to this object.
            
            If this object does not have a workflow or state, this property returns
            a null string.
            </summary>
        </member>
        <member name="P:LogicLayer.OActivityHistory.AssignedUserPositions">
            <summary>
            Gets a comma-separated list of positions who are assigned to this object.
            
            If this object does not have a workflow or state, this property returns
            a null string.
            </summary>
        </member>
        <member name="T:LogicLayer.OMessageTemplate">
            <summary>
            Represents a message template that can be used by
            the application developer to create message templates
            for notification to users.
            </summary>
            <summary>
            Represents a message template that can be used by
            the application developer to create message templates
            for notification to users.
            </summary>
        </member>
        <member name="M:LogicLayer.OMessageTemplate.GenerateAndSendCarbonCopyMessage(LogicLayer.LogicLayerPersistentObjectBase,System.String)">
            <summary>
            Generates the message from the current message template
            and sends it out to the recipients.
            <para></para>
            If sending e-mail, the subject and body is added
            with text that indicates the mail is a carbon-copy to
            the user.
            <para></para>
            You may indicate multiple recipients for e-mail by 
            separating the receipient e-mail address and
            cellphone numbers with a comma (,) or a semi-color (;).
            </summary>
            <param name="persistentObject"></param>
            <param name="emailRecipients"></param>
            <param name="smsRecipients"></param>
        </member>
        <member name="M:LogicLayer.OMessageTemplate.Saving">
            <summary>
            Overrides the Saving event to clear fields that do not apply
            to the WhereUsed property.
            </summary>
        </member>
        <member name="M:LogicLayer.OMessageTemplate.GenerateAndSendMessage(LogicLayer.LogicLayerPersistentObjectBase,System.String,System.String)">
            <summary>
            Generates the message from the current message template
            and sends it out to the recipients.
            <para></para>
            You may indicate multiple recipients for e-mail and
            SMS by separating the receipient e-mail address and
            cellphone numbers with a comma (,) or a semi-color (;).
            </summary>
            <param name="persistentObject"></param>
            <param name="emailRecipients"></param>
            <param name="smsRecipients"></param>
        </member>
        <member name="M:LogicLayer.OMessageTemplate.GenerateAndSendMessage(LogicLayer.LogicLayerPersistentObjectBase,System.String,System.String,System.String)">
            <summary>
            Generates the message from the current message template
            and sends it out to the recipients.
            <para></para>
            You may indicate multiple recipients for e-mail and
            SMS by separating the receipient e-mail address and
            cellphone numbers with a comma (,) or a semi-color (;).
            </summary>
            <param name="persistentObject"></param>
            <param name="emailRecipients"></param>
            <param name="smsRecipients"></param>
        </member>
        <member name="M:LogicLayer.OMessageTemplate.GetGeneralMessageTemplates">
            <summary>
            Gets a DataTable of general message templates' name and
            ID 
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OMessageTemplate.WhereUsed">
            <summary>
            [Column] Gets or sets a flag indicating where
            this message template is used.
            <list>
                <item>0 - General; </item>
                <item>1 - Notify Assigned Workflow Recipients; </item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OMessageTemplate.MessageTemplateCode">
            <summary>
            [Column] Gets or sets the message template code
            that will be used by the developer to identify
            this message template.
            </summary>
        </member>
        <member name="P:LogicLayer.OMessageTemplate.ObjectTypeName">
            <summary>
            [Column] Gets or sets the object type name that
            this message template applies to. 
            <para></para>
            The workflow will use the ObjectTypeName and the
            StateName property to decide the message template
            to be used to send notification to the assigned
            recipients of the workflow task.
            </summary>
        </member>
        <member name="P:LogicLayer.OMessageTemplate.StateName">
            <summary>
            [Column] Gets or sets the state name that
            this message template applies to. 
            <para></para>
            The workflow will use the ObjectTypeName and the
            StateName property to decide the message template
            to be used to send notification to the assigned
            recipients of the workflow task.
            </summary>
        </member>
        <member name="P:LogicLayer.OMessageTemplate.SendEmail">
            <summary>
            [Column] Gets or sets a flag that indicates whether
            the e-mail template is valid. If set, than an e-mail
            will be sent out whenever this template is used
            for notification.
            </summary>
        </member>
        <member name="P:LogicLayer.OMessageTemplate.SendSms">
            <summary>
            [Column] Gets or sets a flag that indicates whether
            the SMS template is valid. If set, than an SMS
            will be sent out whenever this template is used
            for notification.
            </summary>
        </member>
        <member name="P:LogicLayer.OMessageTemplate.SmsTemplate">
            <summary>
            [Column] Gets or sets the template that will be
            used for sending the SMS.
            </summary>
        </member>
        <member name="P:LogicLayer.OMessageTemplate.EmailBodyTemplate">
            <summary>
            [Column] Gets or sets the body template that will be
            used for sending the e-mail.
            </summary>
        </member>
        <member name="P:LogicLayer.OMessageTemplate.EmailSubjectTemplate">
            <summary>
            [Column] Gets or sets the subject template that will be
            used for sending the e-mail.
            </summary>
        </member>
        <member name="P:LogicLayer.OMessageTemplate.WhereUsedText">
            <summary>
            Gets a localized text describing where this message
            template is used.
            </summary>
        </member>
        <member name="T:LogicLayer.ORequestForQuotationVendor">
            <summary>
            Represents a physical quotation from vendor indicating
            terms of the quotation and a collection of the quote
            of each line item in the original request for quotation.
            </summary>
            <summary>
            Represents a physical quotation from vendor indicating
            terms of the quotation and a collection of the quote
            of each line item in the original request for quotation.
            </summary>
            <summary>
            Represents a physical quotation from vendor indicating
            terms of the quotation and a collection of the quote
            of each line item in the original request for quotation.
            </summary>
        </member>
        <member name="M:LogicLayer.ORequestForQuotationVendor.UpdateSingleItemRecoverable(LogicLayer.ORequestForQuotationVendorItem)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:LogicLayer.ORequestForQuotationVendor.UpdateItemsRecoverable">
            <summary>
            
            </summary>
        </member>
        <member name="M:LogicLayer.ORequestForQuotationVendor.UpdateExchangeRate">
            <summary>
            Updates the exchange rate from the one defined
            in the database.
            </summary>
        </member>
        <member name="M:LogicLayer.ORequestForQuotationVendor.UpdateItemsUnitPrice">
            <summary>
            Updates the unit price of all vendor quoted items.
            </summary>
        </member>
        <member name="M:LogicLayer.ORequestForQuotationVendor.ValidateQuotationProvided">
            <summary>
            Validates that the quotation from the vendor has been provided
            by ensuring that the quantities, unit prices
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORequestForQuotationVendor.UpdateItemCurrencies">
            <summary>
            Updates the currencyID of each ORequestForQuotationVendorItem
            objects.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.RequestForQuotationID">
            <summary>
            [Column] Gets or sets the foreign key to the RequestForQuotation table 
            that indicates the request for quotation that this quotation
            has been generated for.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.VendorID">
            <summary>
            [Column] Gets or sets the foreign key to the Vendor table 
            that indicates the vendor who provided this quotation.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.IsSubmitted">
            <summary>
            [Column] Gets or sets a flag indicating whether
            this quotation has been submitted by the vendor.
            A submitted quotation must have the date of the 
            quotation, the alternative currency, adn all of
            the quotation item's unit prices and quantity
            provided filled up.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.DateOfQuotation">
            <summary>
            [Column] Gets or sets the date of the quotation.
            This date is used in conjunction with the quotation 
            currency to determine the currency exchange rate.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.FreightTerms">
            <summary>
            [Column] Gets or sets the freight terms associated with
            this quotation. This will be copied to the purchase
            order should this quotation be awarded, and this
            item is copied to the new purchase order.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.PaymentTerms">
            <summary>
            [Column] Gets or sets the payment terms associated with
            this quotation. This will be copied to the purchase
            order should this quotation be awarded, and this
            item is copied to the new purchase order.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.ContactAddressCountry">
            <summary>
            [Column] Gets or sets the contact details.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.ContactAddressState">
            <summary>
            [Column] Gets or sets the contact details.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.ContactAddressCity">
            <summary>
            [Column] Gets or sets the contact details.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.ContactAddress">
            <summary>
            [Column] Gets or sets the contact details.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.ContactCellPhone">
            <summary>
            [Column] Gets or sets the contact details.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.ContactEmail">
            <summary>
            [Column] Gets or sets the contact details.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.ContactFax">
            <summary>
            [Column] Gets or sets the contact details.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.ContactPhone">
            <summary>
            [Column] Gets or sets the contact details.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.ContactPerson">
            <summary>
            [Column] Gets or sets the contact details.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.TaxPercentage">
            <summary>
            [Column] Gets or sets the contact details.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.CurrencyID">
            <summary>
            [Column] Gets or sets the foreign key to the
            Currency table that represents the foreign 
            currency of the line items in this vendor's 
            quotation.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.IsExchangeRateDefined">
            <summary>
            [Column] Gets or sets a flag indicating whether
            the exchange rate for the selected currency
            was defined when the currency was selected.
            <para></para>
            If the selected currency is the system's base 
            currency, then this flag will be 1.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.ForeignToBaseExchangeRate">
            <summary>
            [Column] Gets or sets the foreign key to the
            Currency table that represents the foreign 
            currency exchange rate.
            <para></para>
            The date of the quotation and the selected
            currency is used to determine the exchange rate.
            <para></para>
            If a default exchange rate cannot be found in the
            exchange rate table, then the user may enter
            the exchange rate manually.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.Vendor">
            <summary>
            Gets or sets the OVendor object that represents
            the vendor who provided this quotation.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.Currency">
            <summary>
            Gets or sets the reference to an OCurrency object
            that represents the foreign currency that will
            be set to a quotation line item when a new
            one is created.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.RequestForQuotation">
            <summary>
            Gets or sets the ORequestForQuotation object that represents
            the request for quotation that this quotation
            has been generated for.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.RequestForQuotationVendorItems">
            <summary>
            Gets a one-to-many list of ORequestForQuotationVendorItem objects 
            that represents the quotation for each individual line item
            in the request for quotation.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.TotalQuotationInSelectedCurrency">
            <summary>
            Gets the total amount quoted in this quotation in
            the selected currency.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.TotalQuotation">
            <summary>
            Gets the total amount quoted in this quotation.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.IsSubmittedText">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.MinimumQuote">
            <summary>
            Returns the minimum quote (in base currency) in this Request for Quotation. This
            value is updated only after the ORequestForQuotation.ComputeLowestQuotation() 
            method has been called.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.PercentageAboveMinimumQuote">
            <summary>
            Returns the percentage above the minimum quote for this Request for Quotation. This
            value is updated only after the ORequestForQuotation.ComputeLowestQuotation() 
            method has been called.
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationVendor.PercentageAboveMinimumQuoteText">
            <summary>
            Returns the percentage above the minimum quote for this Request for Quotation. This
            value is updated only after the ORequestForQuotation.ComputeLowestQuotation() 
            method has been called.
            </summary>
        </member>
        <member name="M:LogicLayer.OPosition.Saved">
            <summary>
            Overrides the Saved method to deactivate invalid OUserPermanentPosition
            objects.
            </summary>
        </member>
        <member name="M:LogicLayer.OPosition.Deactivated">
            <summary>
            Overrides the Deactivated method to deactivate invalid OUserPermanentPosition
            objects.
            </summary>
        </member>
        <member name="M:LogicLayer.OPosition.IsDeactivatable">
            <summary>
            Disallow delete if:
            1. The position is currently assigned a task.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPosition.CreatePosition(System.String,System.Nullable{System.Guid})">
            <summary>
            creates a OPosition object having:
            - ObjectName as same as the name specified by positionName
            - topmost location and equipment
            - ApplicableToAllTypeOfServices is set to true
            </summary>
            <param name="positionName"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPosition.GetAllPositions">
            <summary>
            Returns list of all active positions in the system
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPosition.GetPositionsByRoleCode(System.String[])">
            <summary>
            Gets a list of positions associtated with the specified roleNameCode
            </summary>
            <param name="roleCodeName"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPosition.GetPositionsByUserByRoleCode(LogicLayer.OUser,System.String[])">
            <summary>
            Gets a list of positions associated with the specified user and 
            roleNameCode
            </summary>
            <param name="user"></param>
            <param name="roleNameCode"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPosition.GetPositionsByTypeOfServiceAndLocation(LogicLayer.OCode,LogicLayer.OLocation,System.String)">
            --------------------------------------------------------------
            <summary>
            Get positions by type of service, location and the role code
            </summary>
            <param name="typeOfService"></param>
            <param name="location"></param>
            <param name="roleNameCode"></param>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OPosition.GetPositionsByRoleAndLocation(System.String,LogicLayer.OLocation)">
            --------------------------------------------------------------
            <summary>
            Get positions by role code and assigned location
            </summary>
            <param name="roleNameCode"></param>
            <param name="location"></param>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OPosition.GetPositionsByCraftAndLocation(LogicLayer.OCraft,LogicLayer.OLocation)">
            --------------------------------------------------------------
            <summary>
            Get all positions by craft and location.
            </summary>
            <param name="craft"></param>
            <param name="location"></param>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OPosition.GetPositionsByTypeOfServiceLocationAndRole(LogicLayer.OCode,LogicLayer.OLocation,System.String)">
            --------------------------------------------------------------
            <summary>
            Get a list of positions by type of service, location and the role name.
            </summary>
            <param name="craft"></param>
            <param name="typeOfService"></param>
            <param name="location"></param>
            <param name="roleNameCode"></param>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OPosition.GetPositionsByRoleCodesAndObject(LogicLayer.LogicLayerPersistentObjectBase,System.String[])">
            <summary>
            Gets a list of positions by roles and persistent object.
            </summary>
            <param name="roles"></param>
            <param name="logicLayerPersistentObject"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPosition.GetPositionsAtOrBelowLocations(System.Collections.Generic.List{LogicLayer.OLocation})">
            <summary>
            Gets a list of positions that are assigned to
            or below the specified list of locations.
            </summary>
            <param name="locations"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPosition.GetPositionsAtOrBelowLocations(System.Collections.Generic.List{LogicLayer.OLocation},System.Collections.Generic.List{LogicLayer.ORole})">
            <summary>
            Gets a list of positions that are assigned to
            or below the specified list of locations, and the
            position's roles belong to the specified list of roles.
            </summary>
            <param name="locations"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OPosition.PositionNameWithUserNames">
            <summary>
            Gets a comma-separated list of position names and the assigned users.
            </summary>
        </member>
        <member name="P:LogicLayer.OPosition.PermanentUsers">
            <summary>
            Gets or sets a one-to-many list of OUserPermanentPosition objects that 
            represents the users assigned to the position
            </summary>
        </member>
        <member name="P:LogicLayer.OPosition.RoleID">
            <summary>
            Gets or sets Foreign key to the Role table
            </summary>
        </member>
        <member name="P:LogicLayer.OPosition.AppliesToAllTypeOfServices">
            <summary>
            Gets or sets the value that indicates 
            if the assignment applies to a task of any type of service
            </summary>
        </member>
        <member name="P:LogicLayer.OPosition.LocationAccess">
            <summary>
            Gets or sets many-to-many list of OLocation objects that 
            represents the locations that this position is assigned to.
            </summary>
        </member>
        <member name="P:LogicLayer.OPosition.EquipmentAccess">
            <summary>
            Gets or sets many-to-many list of OEquipment objects that 
            represents the equipments that this position is assigned to.
            </summary>
        </member>
        <member name="P:LogicLayer.OPosition.TypesOfServiceAccess">
            <summary>
            Gets or sets many-to-many list of OCode objects that 
            represents the type of services
            </summary>
        </member>
        <member name="P:LogicLayer.OPosition.Users">
            <summary>
            Gets or sets a many-to-many list of OUser objects that 
            represents the users assigned to the position
            </summary>
        </member>
        <member name="P:LogicLayer.OPosition.Role">
            <summary>
            Gets or sets the ORole object that represents
            the role that this position applies to
            </summary>
        </member>
        <member name="T:LogicLayer.TPointTariff">
            <summary>
            </summary>
            <summary>
            </summary>
        </member>
        <member name="M:LogicLayer.OPointTariff.Saving">
            <summary>
            Updates all Points's tariffs and discounts.
            </summary>
        </member>
        <member name="M:LogicLayer.OPointTariff.UpdatePointTariffsAndDiscounts">
            <summary>
            Updates the tariffs and discounts for all
            active points and points that are not locked.
            </summary>
        </member>
        <member name="M:LogicLayer.OPointTariff.ValidateNoDuplicateLocation">
            <summary>
            Validates to ensure that there is no other
            point tariff set up at the same location.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPointTariff.MassUpdateTariffAndDiscounts(System.Collections.Generic.List{System.Guid},System.Decimal,System.Decimal)">
            <summary>
            Mass update the tariff and discounts.
            </summary>
        </member>
        <member name="T:LogicLayer.TWorkCostCheckOutItem">
            <summary>
            </summary>
        </member>
        <member name="T:LogicLayer.OWorkCostCheckOutItem">
            <summary>
            Represents a record that will be generated automatically
            when the work successfully checks out an item from
            the store. 
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCostCheckOutItem.WorkCostID">
            <summary>
            [Column] Gets or sets the foreign key to the WorkCost table 
            that indicates the cost item that this record is
            generated from. This record can only be generated from a 
            work cost whose CostType = 3 (material).
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCostCheckOutItem.StoreBinItemID">
            <summary>
            [Column] Gets or sets the foreign key to the StoreBinItem table 
            that indicates the batch the material was checked out from.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCostCheckOutItem.UnitPrice">
            <summary>
            [Column] Gets or sets the unit price of the material.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCostCheckOutItem.Quantity">
            <summary>
            [Column] Gets or sets the quantity of material that
            was checked out from the store.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCostCheckOutItem.WorkCost">
            <summary>
            Gets or sets the OWorkCost object that represents the cost 
            item that this record is generated from. This 
            record can only be generated from a 
            work cost whose CostType = 3 (material).
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkCostCheckOutItem.StoreBinItem">
            <summary>
            Gets or sets the O object that represents 
            the batch the material was checked out from.
            </summary>
        </member>
        <member name="T:LogicLayer.TContract">
            <summary>
            Summary description for OVendor
            </summary>
        </member>
        <member name="T:LogicLayer.OContract">
            <summary>
            Represents a contract between the user's company and the 
            vendor providing services to the company. Through this
            contract the vendor may provide maintenance works at
            no extra cost to the company, or the vendor may provide
            a fixed set of rates (purchase agreement) to the company
            should the company purchase services or materials from
            the vendor in the future through a purchase order.
            </summary>
        </member>
        <member name="M:LogicLayer.OContract.GetAccessibleContracts(LogicLayer.OUser)">
            --------------------------------------------------------------
            <summary>
            Gets a list of all accessible contracts (not implemented).
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OContract.GetAccessibleContracts2(LogicLayer.OUser)">
            --------------------------------------------------------------
            <summary>
            Get a list of all accessible contracts.
            </summary>
            <param name="user"></param>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OContract.GetContractsByWork(LogicLayer.OWork)">
            --------------------------------------------------------------
            <summary>
            Get the contracts that can apply to the work, and the 
            contracts that apply are:
            1. The work's scheduled start must be within contract's start/end date.
            2. The work's type of service must be covered by the contract's type of service.
            3. The work's location must be covered by at least one of the contract's specified location.
            </summary>
            <param name="work"></param>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OContract.GetContractsByScheduledWork(LogicLayer.OScheduledWork,System.Nullable{System.Guid})">
            --------------------------------------------------------------
            <summary>
            Get the contracts that can apply to the scheduled work, and
            the contracts that apply are:
            1. The work's scheduled start must be within contract's start/end date.
            2. The work's type of service must be covered by the contract's type of service.
            3. The work's location must be covered by at least one of the contract's specified location.
            </summary>
            <param name="scheduledWork"></param>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OContract.GetContractsByPurchaseOrder(LogicLayer.OPurchaseOrder)">
            --------------------------------------------------------------
            <summary>
            Get all contracts that provide purchasing agreement.
            </summary>
            <param name="purchaseOrder"></param>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OContract.GetReminderDate(System.Nullable{System.Int32})">
            --------------------------------------------------------------
            <summary>
            Get the reminder date = ContractEndDate - reminderDays.
            </summary>
            <param name="reminderDays"></param>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OContract.CreateContractWithSameTerms">
            --------------------------------------------------------------
            <summary>
            Renew this current contract to a new contract with the exact
            same terms, but the contract start and end date of the new
            contract will take the current contract's 'renewed contract
            start/end date'.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OContract.FindContractPriceMaterial(System.Guid)">
            --------------------------------------------------------------
            <summary>
            Find if a price agreement was defined for the specified catalogue.
            </summary>
            <param name="catalogueId"></param>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OContract.GetMaterialUnitPrice(System.Guid)">
            --------------------------------------------------------------
            <summary>
            Get the unit price of materials based on the pricing 
            agreement in this contract.
            </summary>
            <param name="catalogueId"></param>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OContract.FindContractPriceService(System.Guid)">
            --------------------------------------------------------------
            <summary>
            Find if a price agreement was defined for the specified catalogue.
            </summary>
            <param name="catalogueId"></param>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OContract.GetServiceUnitPrice(System.Guid)">
            --------------------------------------------------------------
            <summary>
            Get the unit price of materials based on the pricing 
            agreement in this contract.
            </summary>
            <param name="catalogueId"></param>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OContract.GetContractPriceService(System.Guid)">
            --------------------------------------------------------------
            <summary>
            Get the applicable ContractPriceService object given
            the fixed rate ID.
            </summary>
            <param name="fixedRateId"></param>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="P:LogicLayer.OContract.Description">
            <summary>
            [Column] Gets or sets the description of 
            this contract.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.ContractStartDate">
            <summary>
            [Column] Gets or sets the start date of the 
            contract.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.ContractEndDate">
            <summary>
            [Column] Gets or sets the end date of the 
            contract.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.ContractSum">
            <summary>
            [Column] Gets or sets the contract sum 
            in dollar value.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.Terms">
            <summary>
            [Column] Gets or sets information regarding the 
            terms of the contract.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.Warranty">
            <summary>
            [Column] Gets or sets information about the warranty 
            of this contract.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.Insurance">
            <summary>
            [Column] Gets or sets information 
            regarding insurance for this contract.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.ContractManagerID">
            <summary>
            [Column] Gets or sets the foreign key to
            the User table for the contract manager.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.RenewedContractID">
            <summary>
            [Column] Gets or sets RenewedContractID
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.VendorID">
            <summary>
            [Column] Gets or sets the foreign key to the Vendor
            table.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.ProvideMaintenance">
            <summary>
            [Column] Gets or sets a value that 
            indicates whether the vendor of this 
            contract provides maintenance work. 
            If set to 1, this contract can appear 
            in the Work module for selection.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.ProvidePricingAgreement">
            <summary>
            [Column] Gets or sets a value that 
            indicates whether this contract 
            specifies a purchase agreement 
            between the user and the vendor. If 
            set to 1, this contract appears in the 
            PurchaseOrder module for selection.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.PurchaseOrderID">
            <summary>
            [Column] Gets or sets the foreign
            key to the Purchase Order table that represents
            the purchase order that is associated this contract.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.ContactPerson">
            <summary>
            [Column] Gets or sets the contact person
            details.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.ContactFax">
            <summary>
            [Column] Gets or sets the contact person
            details.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.ContactEmail">
            <summary>
            [Column] Gets or sets the contact person
            details.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.ContactCellphone">
            <summary>
            [Column] Gets or sets the contact person
            details.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.ContactPhone">
            <summary>
            [Column] Gets or sets the contact person
            details.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.Reminder1UserID">
            <summary>
            [Column] Gets or sets the foreign 
            key to the User table.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.Reminder2UserID">
            <summary>
            [Column] Gets or sets the foreign 
            key to the User table.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.Reminder3UserID">
            <summary>
            [Column] Gets or sets the foreign 
            key to the User table.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.Reminder4UserID">
            <summary>
            [Column] Gets or sets the foreign 
            key to the User table.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.EndReminderDays1">
            <summary>
            [Column] Gets or sets the number of 
            days left before the end of the 
            contract to send out a reminder e-mail.
            The user can specify up to 4 periods.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.EndReminderDays2">
            <summary>
            [Column] Gets or sets the number of 
            days left before the end of the 
            contract to send out a reminder e-mail.
            The user can specify up to 4 periods.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.EndReminderDays3">
            <summary>
            [Column] Gets or sets the number of 
            days left before the end of the 
            contract to send out a reminder e-mail.
            The user can specify up to 4 periods.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.EndReminderDays4">
            <summary>
            [Column] Gets or sets the number of 
            days left before the end of the 
            contract to send out a reminder e-mail.
            The user can specify up to 4 periods.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.LastReminderDate">
            <summary>
            [Column] Gets or sets the last date
            that a reminder was sent.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.SurveyGroupID">
            <summary>
            [Column] Gets or sets the foreign key
            to the survey group that this contract 
            belongs to.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.PurchaseOrder">
            <summary>
            Gets a reference to the OPurchaseOrder object
            that indicates the purchase order that is
            associated with this contract.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.Locations">
            <summary>
            Gets a many-to-many list of OLocation objects that 
            represents the locations that the vendor agrees to 
            provide maintenance services for. This is applicable only 
            if ProvideMaintenance = 1.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.TypeOfServices">
            <summary>
            Gets a many-to-many list of OCode objects that 
            represents the type of services provided by the 
            vendor of this contract. This is applicable only if 
            ProvideMaintenance = 1.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.ContractType">
            <summary>
            Gets or sets the OCode object 
            representing the contract type of this 
            contract.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.Vendor">
            <summary>
            Gets or sets the OVendor object that 
            represents the vendor providing services under 
            this contract.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.ScheduledWorks">
            <summary>
            Gets a list of OScheduledWork objects that
            represents the scheduled works associated
            with this contract.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.Reminder1User">
            <summary>
            Gets or sets the OUser object that 
            represents the user to be reminded 
            when the number of days before 
            the end of the contract are up.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.Reminder2User">
            <summary>
            Gets or sets the OUser object that 
            represents the user to be reminded 
            when the number of days before 
            the end of the contract are up.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.Reminder3User">
            <summary>
            Gets or sets the OUser object that 
            represents the user to be reminded 
            when the number of days before 
            the end of the contract are up.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.Reminder4User">
            <summary>
            Gets or sets the OUser object that 
            represents the user to be reminded 
            when the number of days before 
            the end of the contract are up.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.ContractManager">
            <summary>
            Gets or sets the OUser object that 
            represents the user responsible for 
            managing this contract
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.SurveyGroup">
            <summary>
            Gets or sets the OSurveyGroup object that
            represents the survey group that this
            contract is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.ContractPriceServices">
            <summary>
            Gets a one-to-many list of 
            OContractPriceServices objects that 
            represents the list of fixed rate group or 
            items covered by the purchase 
            agreement of this contract. This is only 
            applicable if ProvidePricingAgreement = 
            1.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.ContractPriceMaterials">
            <summary>
            Gets a one-to-many list of 
            OContractPriceMaterials objects that 
            represents the list of catalogue group or 
            items covered by the purchase 
            agreement of this contract. This is only 
            applicable if ProvidePricingAgreement = 
            1.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.TaskLocations">
            <summary>
            Gets a list of all locations applicable to this task.
            </summary>
        </member>
        <member name="P:LogicLayer.OContract.ContractReminders">
            --------------------------------------------------------------
            <summary>
            Get the applicable ContractPriceMaterial object given
            the catalog ID.
            </summary>
            <param name="catalogueId"></param>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="T:LogicLayer.TCodeType">
            <summary>
            Summary description for OCodeType
            </summary>
        </member>
        <member name="T:LogicLayer.OCodeType">
            <summary>
            Represents a record used as a hierarchical classification for codes.
            </summary>
        </member>
        <member name="M:LogicLayer.OCodeType.IsDeactivatable">
            <summary>
            Disallows delete if a non-deleted code already uses this code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCodeType.IsCyclicalReference">
            <summary>
            Tests if the object's parent is a cyclical reference back
            to itself.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCodeType.GetAllCodeTypes">
            <summary>
            Gets a list of all selectable code types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCodeType.GetRootCodeTypes">
            <summary>
            Get all root codes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCodeType.GetLowerCodeTypes(LogicLayer.OCodeType)">
            <summary>
            Get all root codes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCodeType.FindCodeTypes(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OCodeType.IsSystemCode">
            <summary>
            [Column] This is obsolete and not used.
            </summary>
        </member>
        <member name="P:LogicLayer.OCodeType.Identifier">
            <summary>
            [Column] This is obsolete and not used.
            </summary>
        </member>
        <member name="P:LogicLayer.OCodeType.Children">
            <summary>
            Gets a one-to-many list of OCodeType objects that represents 
            the next level code types under this current one.
            </summary>
        </member>
        <member name="P:LogicLayer.OCodeType.Parent">
            <summary>
            Gets or sets the OCodeType object that represents the parent 
            code under which this current one belongs to.
            </summary>
        </member>
        <member name="T:LogicLayer.TStoreRequestItemCheckOut">
            <summary>    
            </summary>
        </member>
        <member name="T:LogicLayer.OStoreRequestItemCheckOut">
            <summary>
            </summary>
        </member>
        <member name="M:LogicLayer.DateTimeExtensions.ToFriendlyString(System.DateTime)">
            <summary>
            Returns a user-friendly time based with reference from
            the current time.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="T:LogicLayer.ORunningNumberGenerator">
            <summary>
            Represents a set of configurable parameters to set up the running
            number generation of any object in the system.
            </summary>
        </member>
        <member name="M:LogicLayer.ORunningNumberGenerator.ValidateNoDuplicateObjectTypeName">
            <summary>
            Validates that the object type has no duplicate with another
            running number generator record in the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORunningNumberGenerator.GenerateNextRunningNumber(System.DateTime,LogicLayer.LogicLayerPersistentObjectBase)">
            <summary>
            Generates the next running number based on the date, and the specified
            persistent object.
            </summary>
            <param name="date"></param>
            <param name="obj"></param>
        </member>
        <member name="P:LogicLayer.ORunningNumberGenerator.ObjectTypeName">
            <summary>
            [Column] Gets or sets the object type name
            that the running number generator is configured for.
            </summary>
        </member>
        <member name="P:LogicLayer.ORunningNumberGenerator.ObjectTypeCode">
            <summary>
            [Column] Gets or sets the code used to 
            generate all running numbers for this 
            </summary>
        </member>
        <member name="P:LogicLayer.ORunningNumberGenerator.RunningNumberBehavior">
            <summary>
            [Column] Gets or sets how the running numbers
            are generated.
            <list>
                <para>0 - Consecutive running numbers that increments by 1 each time it is generated, regardless of the date. </para>
                <para>1 - Consecutive running numbers that increments by 1 for the same month and restarts from 1 for a new month.</para>
                <para>2 - Consecutive running numbers that increments by 1 for the same year and restarts from 1 for a new year.</para>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.ORunningNumberGenerator.IsLocationOrEquipmentCodeAdded">
            <summary>
            [Column] Gets or sets a flag that indicates whether 
            the location's or equipment's code should be added
            to the running number. If an object has an equipment
            defined, the equipment's code will always override 
            the location's code.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:LogicLayer.ORunningNumberGenerator.FormatString" -->
        <member name="P:LogicLayer.ORunningNumberGenerator.FLEECondition">
            <summary>
            [Column] Gets or sets the Fast Lightweight Expression Evaluator
            condition that returns a flag indicating whether this document
            template is applicable to the object.
            </summary>
        </member>
        <member name="P:LogicLayer.ORunningNumberGenerator.UsesAdditionalCode">
            <summary>
            [Column] Gets or sets a flag that indicates whether an additional
            code is to be added to the running number based on an expression
            specified in the FLEEAdditionalCodeExpression field.
            </summary>
        </member>
        <member name="P:LogicLayer.ORunningNumberGenerator.FLEEAdditionalCodeExpression">
            <summary>
            [Column] Gets or sets the Fast Lightweight Expression Evaluator 
            expression that returns a string for the additional code that
            can be added to the running number. When added to the running
            number, it can be formatted using the {4} placeholder.
            </summary>
        </member>
        <member name="P:LogicLayer.ORunningNumberGenerator.RunningNumberBehaviorText">
            <summary>
            Gets a string of text describing the running number behavior.
            </summary>
        </member>
        <member name="P:LogicLayer.ORunningNumberGenerator.IsLocationOrEquipmentCodeAddedText">
            <summary>
            Gets a string of text describing whether the
            location/equipment code should be added to the
            running number.
            </summary>
        </member>
        <member name="T:LogicLayer.RunningNumberIncrementBehavior">
            <summary>
            Represents the different types of running numbers.
            </summary>
        </member>
        <member name="F:LogicLayer.RunningNumberIncrementBehavior.IncrementForever">
            <summary>
            The running number increments forever, regardless of 
            the date.
            </summary>
        </member>
        <member name="F:LogicLayer.RunningNumberIncrementBehavior.ResetEveryMonth">
            <summary>
            The running number increments each time it is generated,
            but resets itself in a new month.
            </summary>
        </member>
        <member name="F:LogicLayer.RunningNumberIncrementBehavior.ResetEveryYear">
            <summary>
            The running number increments each time it is generated,
            but resets itself in a new year.
            </summary>
        </member>
        <member name="F:LogicLayer.RunningNumberIncrementBehavior.ResetEveryYearInclCurrentYearMonth">
            <summary>
            The running number increments and resets to zero every year, but include the current year/month in the running number
            </summary>
        </member>
        <member name="T:LogicLayer.ONotificationMilestones">
            <summary>
            Represents a hierarchy of users or roles to
            which notifications will be sent when 
            action on workflow objects are not performed in time.
            </summary>
        </member>
        <member name="M:LogicLayer.ONotificationMilestones.IsDeactivatable">
            <summary>
            Allows the object to be deactivated if there
            are notification processes associated with this
            set of milestones.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ONotificationMilestones.GetAllMilestones(System.Nullable{System.Guid})">
            <summary>
            Gets all notification milestones.
            </summary>
            <param name="includingNotificationMilestonesId"></param>
            <returns></returns>
        </member>
        <member name="T:LogicLayer.TApprovalProcessLimit">
            <summary>
            Represents one level in the approval hierarchy.
            </summary>
            <summary>
            Represents one level in the approval hierarchy.
            </summary>
            <summary>
            Represents one level in the approval hierarchy.
            </summary>
        </member>
        <member name="T:LogicLayer.OApprovalProcessLimit">
            <summary>
            Represents one level in the approval hierarchy.
            </summary>
            <summary>
            Represents one level in the approval hierarchy.
            </summary>
            <summary>
            Represents one level in the approval hierarchy.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalProcessLimit.ApprovalProcessID">
            <summary>
            [Column] Gets or sets the foreign key to the 
            ApprovalHierarchy table that represents that
            approval hierarchy under which this approval
            hierarchy level belongs to.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalProcessLimit.ApprovalLevel">
            <summary>
            [Column] Gets or sets the numeric approval
            level of this approval hierarchy level. 
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalProcessLimit.ApprovalLimit">
            <summary>
            [Column] Gets or sets the approval limit in
            the base currency.
            <para></para>
            This approval limit overrides the default
            approval limit in the approval hierarchy level,
            if the user indicates not to use the default
            approval limit in the approval process.
            </summary>
        </member>
        <member name="P:LogicLayer.OApprovalProcessLimit.AuditObjectDescription">
            <summary>
            Returns a string indicating a summarized description of
            this object that is to appear in the audit trail.
            </summary>
        </member>
        <member name="T:LogicLayer.TRFQBudgetReallocationToPeriod">
            <summary>
            Created by TVO
            </summary>
        </member>
        <member name="T:LogicLayer.ORFQBudgetReallocationToPeriod">
            <summary>
            Represents a budget reallocation record that 
            </summary>
        </member>
        <member name="T:LogicLayer.TPurchaseInvoice">
            <summary>
            Summary description for OPurchaseOrder
            </summary>
            <summary>
            Summary description for OPurchaseOrder
            </summary>
            <summary>
            Summary description for OPurchaseOrder
            </summary>
        </member>
        <member name="T:LogicLayer.OPurchaseInvoice">
            <summary>
            Represents a purchase order object as a legal document to a
            vendor to purchase materials or services.
            </summary>
            <summary>
            Represents a purchase order object as a legal document to a
            vendor to purchase materials or services.
            </summary>
            <summary>
            Represents a purchase order object as a legal document to a
            vendor to purchase materials or services.
            </summary>
            <summary>
            Represents a purchase invoice submitted by a vendor
            in order get paid for a service rendered, or goods
            delivered.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.Saving">
            <summary>
            Updates the invoice amount and tax in base currency.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.ValidateInvoiceLessThanOrEqualsToPOAmount">
            <summary>
            Validates the Invoice if the invoice amount can be greater then the PO Amount
            </summary>
            <return>
            Returns 1 if its true
            Otherwise Check the sum of all pending approval,approved 
            and closed invoices including this one is less than the PO amt
            </return>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.CreateInvoiceFromPO(LogicLayer.OPurchaseOrder,System.Int32)">
            <summary>
            Creates a new invoice object from a purchase order.
            </summary>
            <param name="po"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.SubmitForApproval">
            <summary>
            Submits the Invoice for approval by doing: <br/>
            1. Creates the budget transaction logs. <br/>
            2. Creates the budget summaries and stamp them with the current
            budget available balance. <br/>
            <para></para>
            This method is called from the workflow. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.UpdateAutoGeneratedCreditNote">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.Cancel">
            <summary>
            Cancels the Invoice by doing the following: <br/>
            1. Unlink all PO line items from RFQ / WJ line items. <br/>
            2. Cancel all PO budget transactions. <br/>
            3. Undo the transfer of the previous RFQ budget transactions. <br/>
            <para></para>
            This method is called from the workflow. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.UpdateCreditNoteTax">
            <summary>
            Updates the tax for credit note
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.UpdateCreditNoteAmountAndTaxInBaseCurrency">
            <summary>
            Updates the total invoice amount and tax in base currency for credit note
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.InvoiceSubmittedForApproval">
            <summary>
            
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.ValidateDuplicateInvoiceNumber">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="F:LogicLayer.OPurchaseInvoice.tempPurchaseBudgetSummaries">
            <summary>
            A cached copy of the budget summary table that
            can be queried from the database
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.Deactivating">
            <summary>
            Releases all budgets.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.UpdateTotalAmountAndTaxInBaseCurrency">
            <summary>
            Updates the total invoice amount and tax in base currency.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.ComputeTempBudgetSummaries">
            <summary>
            Computes the temporary list of budget
            summaries.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.CreateInvoiceFromPOReceipts(System.Collections.Generic.List{LogicLayer.OPurchaseOrderReceipt})">
            <summary>
            Create an Invoice object based on a single Purchase Order's
            Receipt items.
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.GenerateInvoiceFromPurchaseOrders(System.Collections.Generic.List{System.Guid})">
            <summary>
            Generate a single invoice for a set of Purchase Orders
            </summary>
            <param name="poIds"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.UpdateExchangeRate">
            <summary>
            Updates the exchange rate from the one defined
            in the database.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.UpdateVendorDetails">
            <summary>
            Updates the vendor details.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.UpdateVendorDetailsExceptCurrency">
            <summary>
            Updates the vendor details.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.CreateBudgetTransactionLogsAndSummaries">
            <summary>
            Create the budget transaction logs and summaries.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.Approve">
            <summary>
            Approves the Invoice by doing the following:<br/>
            1. Update all budget transactions to indicated Approved.<br/>
            2. Create budget summaries if not already created.<br/>
            3. Stamp budget summaries with current budget balance at approval.<br/>
            <para></para>
            This method is called from the workflow. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.Reject">
            <summary>
            Rejects the Invoice by doing the following:
            1. Cancels all budget transactions. 
            2. Clears all budget summaries.
            <para></para>
            This method is called from the workflow. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.UpdateTax">
            <summary>
            Updates the tax.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.GetNonCancelledInvoicesByPurchaseOrder(LogicLayer.OPurchaseOrder)">
            <summary>
            Gets a list of non-cancelled invoices by purchase order.
            </summary>
            <param name="po"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.UpdateApplicablePurchaseSettings">
            <summary>
            Gets the most applicable purchase settings and store it
            in a temporary variable.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.ValidateBudgetAmountEqualsTotalAmount">
            <summary>
            Validates that the budget amount is equals to the total
            invoice amount.
            <para></para>
            This function is generic and can be applied to any of
            the WJ/RFQ/PO objects provided the line items implement
            the ItemNumber and the Amount properties.
            </summary>
            <returns>Returns true if the validation succeeds. False otherwise.</returns>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.ValidateSufficientBudget">
            <summary>
            Validates that there is sufficient amount in the budgets
            for the deduction if this is a standard invoice.
            <para></para>
            NOTE: For credit/debit memos, we do not need to check
            for sufficient budgets, since we are technically adding
            money back into the budgets. 
            </summary>
            <returns>Returns a string of a list of budget periods and accounts
            that are insufficient. Returns an empty string otherwise.
            </returns>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.GetPOMatchedStandardInvoices(System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Gets a list of standard invoices matched to the specified purchase
            order ID.
            </summary>
            <param name="purchaseOrderId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.ValidateNoCreditOrDebitMemos">
            <summary>
            Validates that there are no non-cancelled credit
            or debit memos matched against this invoice.
            <para>
            </para>
            Returns the list of uncancelled credit/debit memo numbers
            matched against this invoice.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.UpdateDetailsFromStandardInvoice">
            <summary>
            Updates the vendor details based on the invoice that
            this current credit/debit memo is created against.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.ValidateSufficientBudgetForCancellation">
            <summary>
            Validates that there is sufficient budget for the cancellation
            of credit/debit memos.
            <para></para>
            This is required because the cancellation of a credit/debit memo
            will result in deducting from the budgets.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.CreateCreditMemoFromStandardInvoice(LogicLayer.OPurchaseInvoice)">
            <summary>
            Creates a credit memo from an existing standard invoice.
            </summary>
            <param name="standardInvoice"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.CreateDebitMemoFromStandardInvoice(LogicLayer.OPurchaseInvoice)">
            <summary>
            Creates a debit memo from an existing standard invoice.
            </summary>
            <param name="standardInvoice"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseInvoice.ValidateTotalCreditDebitMemoAmountLessThanOriginalInvoiceAmount">
            <summary>
            Validates than the sum of the total credit/debit memo amounts
            include this credit/debit memo's is less than or equals
            to the total original invoice amount.
            <para></para>
            This method also ensures that the sum of the tax amounts also
            meets the requirements.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.ThisInvoiceExceedsPOAmount">
            <summary>
            Returns a flag indicating if the invoice exceeds PO amount.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.IsDuplicateInvoiceNumber">
             <summary>
            
             </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.MatchType">
            <summary>
            [Column] Gets or sets a flag indicating the type
            of this invoice.
            <list>
                <item>0 - Direct Invoice; </item>
                <item>1 - Matched to Purchase Order; </item>
                <item>2 - Matched to Purchase Order Receipt; </item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.InvoiceType">
            <summary>
            [Column] Gets or sets a flag indicating if this invoice
            is a standard invoice, a credit memo, or a debit memo.
            <para></para>
            <list>
                <item>0 - Standard invoice; </item>
                <item>1 - Credit memo; </item>
                <item>2 - Debit memo; </item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.PurchaseTypeID">
            <summary>
            [Column] Gets or sets the foreign key to the Code
            that indicates the purchase type this invoice was
            billed for.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.LocationID">
            <summary>
            [Column] Gets or sets a foreign key to the Location
            table that indicates the location (where the services was carried 
            out) this invoice is billed to. This is only applicable if the
            invoice type is a direct invoice, or an invoice matched to a purchase
            order.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.EquipmentID">
            <summary>
            [Column] Gets or sets a foreign key to the Location
            table that indicates the equipment (on which the services was carried 
            out) this invoice is billed to. This is only applicable if the
            invoice type is a direct invoice, or an invoice matched to a purchase
            order.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.Location">
            <summary>
            Gets or sets the OLocation object that represents
            the location where any service is to be 
            carried out in.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.Equipment">
            <summary>
            Gets or sets the OEquipment object that represents
            the equipment where any service is to be 
            carried out on.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.CurrencyID">
            <summary>
            [Column] Gets or sets the foreign key to the
            Currency table that represents the foreign 
            currency of the line items in this invoice
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.IsExchangeRateDefined">
            <summary>
            [Column] Gets or sets a flag indicating whether
            the exchange rate for the selected currency
            was defined when the currency was selected.
            <para></para>
            If the selected currency is the system's base 
            currency, then this flag will be 1.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.ForeignToBaseExchangeRate">
            <summary>
            [Column] Gets or sets the foreign key to the
            Currency table that represents the foreign 
            currency exchange rate.
            <para></para>
            The date of the invoice and the selected
            currency is used to determine the exchange rate.
            <para></para>
            If a default exchange rate cannot be found in the
            exchange rate table, then the user may enter
            the exchange rate manually.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.TaxCodeID">
            <summary>
            [Column] Gets or sets the foreign key to the Tax
            Code table that indicates the tax code that the total net amount
            of this invoice is subjected to.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.TotalAmount">
            <summary>
            [Column] Gets or sets the total amount of this invoice
            in the base currency.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.TotalTax">
            <summary>
            [Column] Gets or sets the total tax of this invoice
            in the base currency.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.CreditDebitMemoOnInvoiceID">
            <summary>
            [Column] Gets or sets the foreign key to the invoice
            table that indicates which source invoice this
            invoice is matched to.
            <para></para>
            This field will contain a value only if this invoice
            is a credit or debit memo.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.IsSubmittedForApproval">
            <summary>
            [Column] Gets or sets a flag indicating that the
            request for quotation has been submitted for approval.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.IsApproved">
            <summary>
            [Column] Gets or sets a flag indicating that the
            request for quotation has been approved.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.BudgetValidationPolicy">
            <summary>
            [Column] Gets or sets a value indicating
            the budget validation policy.
            <list>
                <item>0 - Budget consumption must be equal to line items. (default) </item>
                <item>1 - Budget consumption must be less than or equal to line items. </item>
                <item>2 - No validation. </item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.PurchaseType">
            <summary>
            [Column] Gets or sets the OCode object that
            represents the purchase type this invoice was
            billed for.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.Currency">
            <summary>
            Gets or sets a reference to the OCurrency object
            that indicates the alternate currency this invoice is billed in.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.TaxCode">
            <summary>
            Gets or sets a reference to the OTaxCode object
            that indicates the tax code that the total net amount
            of this invoice is subjected to.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.PurchaseBudgets">
            <summary>
            Gets a one-to-many list of OPurchaseBudget objects that represents
            the budget distribution for this invoice.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.PurchaseBudgetSummaries">
            <summary>
            Gets a one-to-many list of OPurchaseBudgetSummary objects that represents
            information about this invoice's commitment to the budgets.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.CreditDebitMemoOnInvoice">
            <summary>
            Gets a reference to the PurchaseInvoice object representing
            the invoice that this current credit/debit memo is matched
            against.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.InvoiceTypeText">
            <summary>
            Gets a string indicating the type of this invoice.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.MatchTypeText">
            <summary>
            Gets a string indicating the type of this invoice
            in the localized text.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.TaskLocations">
            <summary>
            Gets the location indicated by this purchase request.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.TaskEquipments">
            <summary>
            Gets the equipment indicated by this purchase request.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.TaskAmount">
            <summary>
            Gets the total awarded amount of this request for quotation.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.TempPurchaseBudgetSummaries">
            <summary>
            A cached copy of the budget summary table. This
            is a temporary list of the budget summaries that 
            provides a snapshot of the budget accounts when
            the RFQ object is before the pending approval state.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.TotalAmountAndTax">
            <summary>
            Gets the total of this invoice (amount + tax) in
            the system's base currency.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.TotalCreditDebitMemoAmount">
            <summary>
            Gets the total credit/debit memo amount in the system
            against this invoice in the system's base currency.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseInvoice.TotalAmountAfterCreditDebitMemos">
            <summary>
            Gets the total invoice amount balance after credit/debit
            memos.
            </summary>
        </member>
        <member name="T:LogicLayer.TStoreCheckOutItem">
            <summary>
            Summary description for OStoreItem
            </summary>
        </member>
        <member name="T:LogicLayer.OStoreCheckOutItem">
            <summary>
            Represents a record containing information about the item to check out.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreCheckOutItem.ComputeEstimatedUnitCost">
            <summary>
            Computes the estimated unit cost of the check out items.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOutItem.StoreCheckOutID">
            <summary>
            [Column] Gets or sets the foreign key to the StoreCheckOut table.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOutItem.CatalogueID">
            <summary>
            [Column] Gets or sets the foreign key to the Catalogue table
            that indicates the catalogue of the item to be checked out.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOutItem.StoreBinID">
            <summary>
            [Column] Gets or sets the foreign key to the StoreBin table
            that indicates the store bin to check out from.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOutItem.BaseQuantity">
            <summary>
            [Column] Gets or sets the quantity (in the original
            item's base unit of measure) to check out.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOutItem.BaseQuantityCheckedOut">
            <summary>
            [Column] Gets or sets the quantity (in the original
            item's base unit of measure) that has been successfully 
            check out.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOutItem.EstimatedUnitCost">
            <summary>
            [Column] Gets or sets the estimated unit cost
            of the items that will be checked out.
            <para></para>
            This estimated unit cost is used only for determining
            who in the approval hierarchy to send to for approval.
            <para></para>
            The actual unit cost of items checked out will be known
            once the check-out is approved and committed.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOutItem.ActualUnitOfMeasureID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table
            that the check-out unit of measure to check out the item. If
            this is different from the item's base unit of measure,
            the actual quantity will be converted to a base quantity
            as defined in the Unit Conversion module.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOutItem.ActualQuantity">
            <summary>
            [Column] Gets or sets the quantity of items to check
            out in the check-out unit of measure.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOutItem.Catalogue">
            <summary>
            Gets or sets the OCatalogue object that represents
            the catalogue of the item to be checked out.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOutItem.StoreCheckOut">
            <summary>
            Gets or sets the OStoreCheckOut object that represents
            the main check-out object that contains this record.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOutItem.StoreBin">
            <summary>
            Gets or sets the OStoreBin object that represents
            the store bin to check the items out from.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOutItem.ActualUnitOfMeasure">
            <summary>
            Gets or sets the OCode object that represents
            the check-out unit of measure to check out the item. 
            If this is different from the item's base unit of measure,
            the actual quantity will be converted to a base quantity
            as defined in the Unit Conversion module.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOutItem.ConversionText">
            <summary>
            Gets a text to be displayed on screen for an example of the conversion of units.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOutItem.SubTotal">
            <summary>
            Gets the sub-total as the unit price multiplied
            by the quantity.
            </summary>
        </member>
        <member name="T:LogicLayer.TApprovalHierarchy">
            <summary>
            Summary description for OChecklist
            </summary>
            <summary>
            Summary description for OChecklist
            </summary>
        </member>
        <member name="M:LogicLayer.OApprovalHierarchy.IsDeactivatable">
            <summary>
            Disallow deleting if:
            <para></para>
            1. This approval hierarchy is currently associated with an
            approval process.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OApprovalHierarchy.Saving">
            <summary>
            Overrides the saving method to:
            <para></para>
            1. Update the approval level numbers of each of the approval hierarchy level
               objects.
            </summary>
        </member>
        <member name="M:LogicLayer.OApprovalHierarchy.GetAllApprovalHierarchies">
            <summary>
            Gets all approval hierarchies.
            </summary>
        </member>
        <member name="M:LogicLayer.OApprovalHierarchy.UpdateApprovalLevels">
            <summary>
            Sort the approval hierarchy level objects and assign
            a sequential running number start from 1.
            </summary>
        </member>
        <member name="M:LogicLayer.OApprovalHierarchy.FindApprovalHierarchyLevelByLevel(System.Int32)">
            <summary>
            Finds the OApprovalHierarchyLevel in this object so that its ApprovalLevel = level
            <para></para>
            This method is used in the hierarchical-forwarding scenario.
            </summary>
            <param name="level">The approval hierarchy level, in the order
            of the approval limit. The first approval hierarchy level is
            1, the second is 2, and so on.</param>
            <returns>Returns the OApprovalHierarchyLevel object.</returns>
        </member>
        <member name="M:LogicLayer.OApprovalHierarchy.FindNextApprovalHierarchyLevelWithApprovalLimitAfterLevel(System.Int32)">
            <summary>
            Finds the OApprovalHierarchyLevel in this object so that its ApprovalLevel = level
            <para></para>
            This method is used in the hierarchical-forwarding scenario.
            </summary>
            <param name="level">The approval hierarchy level, in the order
            of the approval limit. The first approval hierarchy level is
            1, the second is 2, and so on.</param>
            <returns>Returns the OApprovalHierarchyLevel object.</returns>
        </member>
        <member name="M:LogicLayer.OApprovalHierarchy.FindNextRequiredApprovalHierarchyLevelAfterLevel(System.Int32)">
            <summary>
            Finds the OApprovalHierarchyLevel in this object so that its ApprovalLevel = level
            <para></para>
            This method is used in the hierarchical-forwarding scenario.
            </summary>
            <param name="level">The approval hierarchy level, in the order
            of the approval limit. The first approval hierarchy level is
            1, the second is 2, and so on.</param>
            <returns>Returns the OApprovalHierarchyLevel object.</returns>
        </member>
        <member name="M:LogicLayer.OApprovalHierarchy.FindApprovalHierarchyLevelByAmount(System.Decimal)">
            <summary>
            Finds the approval hierarchy level such that the approval limit
            is greater than the specified amount, but with the lowest approval level. 
            <para></para>
            This method is used in the direct-forwarding and forward-to-all scenario.
            </summary>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OApprovalHierarchy.FindApprovalHierarchyLevelsAboveApprovalLevelAndByAmount(System.Int32,System.Decimal)">
            <summary>
            Finds a list of approval hierarchy levels such that the approval level
            of the approval hierarchy level objects are between the specified
            level and the first level authorized to approve the object.
            <para></para>
            This method is used in the all-forwarding scenario.
            </summary>
            <param name="level"></param>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="T:LogicLayer.TVendor">
            <summary>
            Summary description for OVendor
            </summary>
        </member>
        <member name="T:LogicLayer.OVendor">
            <summary>
            Represents a vendor that provides services or materials
            to the user's company.
            </summary>
        </member>
        <member name="M:LogicLayer.OVendor.AllowAccessDebarredVendors(LogicLayer.OUser,System.String)">
            <summary>
            
            </summary>
            <param name="user"></param>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OVendor.AllowAccessNonApprovedVendors(LogicLayer.OUser,System.String)">
            <summary>
            
            </summary>
            <param name="user"></param>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OVendor.GetVendors(System.DateTime,System.Nullable{System.Guid},LogicLayer.OUser,System.String)">
            <summary>
            
            </summary>
            <param name="date"></param>
            <param name="includingVendorId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OVendor.GetVendors">
            <summary>
            Gets a list of all vendors.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OVendor.GetVendors(System.Nullable{System.Guid})">
            <summary>
            Gets a list of all vendors.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OVendor.GetVendors(System.DateTime,System.Nullable{System.Guid})">
            <summary>
            Gets a list of all vendors by a date (which will
            filter the list of vendors based on their debarment
            dates).
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OVendor.GetDebarmentReminderDate(System.Nullable{System.Int32})">
            <summary>
            This method to return past date so that the event will be triggered
            </summary>
            <param name="reminderDays"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OVendor.IsApproved">
            <summary>
            
            </summary>        
        </member>
        <member name="P:LogicLayer.OVendor.VendorEvaluations">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.IsApprovedText">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.IsDebarredText">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.IsInterestedPartyTextHighlighted">
            <summary>
            Html text to display ipt vendor indication in red for message template
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.CurrencyID">
            <summary>
            [Column] Gets or sets the foreign key to the currency
            table that indicates which default currency this vendor issues
            its purchase orders or invoices in.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.TaxCodeID">
            <summary>
            [Column] Gets or sets the foreign key to the TaxCode
            table that indicates which default tax code this vendor 
            invoices in.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.OperatingAddressCountry">
            <summary>
            [Column] Gets or sets the operating address of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.OperatingAddressState">
            <summary>
            [Column] Gets or sets the operating address of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.OperatingAddressCity">
            <summary>
            [Column] Gets or sets the operating address of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.OperatingAddress">
            <summary>
            [Column] Gets or sets the operating address of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.OperatingCellPhone">
            <summary>
            [Column] Gets or sets the operating contact of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.OperatingEmail">
            <summary>
            [Column] Gets or sets the operating contact of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.OperatingFax">
            <summary>
            [Column] Gets or sets the operating contact of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.OperatingPhone">
            <summary>
            [Column] Gets or sets the operating contact of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.OperatingContactPerson">
            <summary>
            [Column] Gets or sets the operating contact of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.BillingAddressCountry">
            <summary>
            [Column] Gets or sets the billing address of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.BillingAddressState">
            <summary>
            [Column] Gets or sets the billing address of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.BillingAddressCity">
            <summary>
            [Column] Gets or sets the billing address of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.BillingAddress">
            <summary>
            [Column] Gets or sets the billing address of this 
            vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.BillingCellPhone">
            <summary>
            [Column] Gets or sets the billing contact of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.BillingEmail">
            <summary>
            [Column] Gets or sets the billing contact of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.BillingFax">
            <summary>
            [Column] Gets or sets the billing contact of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.BillingPhone">
            <summary>
            [Column] Gets or sets the billing contact of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.BillingContactPerson">
            <summary>
            [Column] Gets or sets the billing contact of this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.IsDebarred">
            <summary>
            [Column] Gets or sets a value that indicates whether this 
            vendor has been debarred.
            </summary>        
        </member>
        <member name="P:LogicLayer.OVendor.DebarmentStartDate">
            <summary>
            [Column] Gets or sets the end date from which the vendor will 
            be debarred.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.DebarmentEndDate">
            <summary>
            [Column] Gets or sets the end date until which the vendor has 
            been debarred.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.DebarmentReason">
            <summary>
            [Column] Gets or sets the reason this vendor has been 
            debarred.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.DebarmentNotification1Days">
            <summary>
            [Column] Gets or sets the number of days before the 
            debarment end date to send an e-mail reminder. The user 
            may specify up to four periods.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.DebarmentNotification2Days">
            <summary>
            [Column] Gets or sets the number of days before the 
            debarment end date to send an e-mail reminder. The user 
            may specify up to four periods.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.DebarmentNotification3Days">
            <summary>
            [Column] Gets or sets the number of days before the 
            debarment end date to send an e-mail reminder. The user 
            may specify up to four periods.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.DebarmentNotification4Days">
            <summary>
            [Column] Gets or sets the number of days before the 
            debarment end date to send an e-mail reminder. The user 
            may specify up to four periods.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.NotifyUser1ID">
            <summary>
            [Column] Gets or sets the foreign key to the User table.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.NotifyUser2ID">
            <summary>
            [Column] Gets or sets the foreign key to the User table.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.NotifyUser3ID">
            <summary>
            [Column] Gets or sets the foreign key to the User table.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.NotifyUser4ID">
            <summary>
            [Column] Gets or sets the foreign key to the User table.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.LastNotificationDate">
            <summary>
            [Column] Gets or sets the date the last vendor debarment
            notification was sent.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.VendorClassificationID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.TaxCode">
            <summary>
            Gets or sets the OTaxCode object that represents
            the default tax code that the vendor invoices in.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.VendorClassification">
            <summary>
            Gets or sets the OCode object that represents the vendor classification.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.VendorTypes">
            <summary>
            Gets a many-to-many list of OCode objects that represents a 
            list of vendor types applicable to this vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.NotifyUser1">
            <summary>
            Gets or sets the OUser object that represents the user who 
            will be notified when the debarment reminder notification is 
            due.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.NotifyUser2">
            <summary>
            Gets or sets the OUser object that represents the user who 
            will be notified when the debarment reminder notification is 
            due.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.NotifyUser3">
            <summary>
            Gets or sets the OUser object that represents the user who 
            will be notified when the debarment reminder notification is 
            due.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.NotifyUser4">
            <summary>
            Gets or sets the OUser object that represents the user who 
            will be notified when the debarment reminder notification is 
            due.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendor.Currency">
            <summary>
            [One-to-one join this.CurrencyID = Currency.ObjectID]
            Gets or sets the default currency that this vendor
            issues its invoices and purchase orders in.
            </summary>
        </member>
        <member name="T:LogicLayer.TSurveyRespondentPortfolio">
            <summary>
            Summary description for OSurveyRespondentPortfolio
            </summary>
            <summary>
            Summary description for OSurveyRespondentPortfolio
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyRespondentPortfolio.LocationsAccess">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyRespondentPortfolio.SurveyType">
            <summary>
            [Column] Gets or sets the values indicates the type of survey.
            <para></para>
            0 - Surveys for Services provided by Contracted Vendors.
            1 - Surveys for Services provided by Contracted Vendors evaluated by Managing Agents.
            2 - Surveys for Other Reasons.
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyRespondentPortfolio.EmailAddress">
            <summary>
            [Column] Gets or sets the value of email address of this portfolio.
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyRespondentPortfolio.ExpiryDate">
            <summary>
            [Column] Gets or sets the latest date for responding to survey.
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyRespondentPortfolio.SurveyRespondents">
            <summary>
            Gets or sets an OSurveyRespondent object that this portfolio is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyRespondentPortfolio.Locations">
            <summary>
            Gets or sets a many-to-many list of locations that represent the locations
            that this portfolio is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyRespondentPortfolio.Contracts">
            <summary>
            Gets or sets a many-to-many list of contracts that this portfolio 
            is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyRespondentPortfolio.SurveyTypeText">
            <summary>
            Translate survey type to string.
            </summary>
        </member>
        <member name="T:LogicLayer.TWorkChecklistItem">
            <summary>
            Summary description for OChecklist
            </summary>
        </member>
        <member name="T:LogicLayer.OWorkChecklistItem">
            <summary>
            Represents a step in a series of steps in a checklist, which can
            be attached to a work so that the assigned in-house technician
            or term contractor can perform inspections or actions indicated
            in the checklist.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkChecklistItem.WorkID">
            <summary>
            [Column] Gets or sets the foreign key to the Work table 
            that indicates the work that contains this checklist item.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkChecklistItem.StepNumber">
            <summary>
            [Column] Gets or sets the step number of this checklist item.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkChecklistItem.ChecklistType">
            <summary>
            [Column] Gets or sets a value that indicates the item type
            of this checklist.
            <para></para>
            <list>
            <item>0 - Choice: the user can select the response from a list of choices</item>
            <item>1 - Remarks: the user can input remarks</item>
            <item>2 - None: the user need not input any remarks or select any response.</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkChecklistItem.ScoreDenominator">
            <summary>
            [Column] Gets or sets the score denominator of this
            checklist item. 
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkChecklistItem.SelectedResponseID">
            <summary>
            [Column] Gets or sets the foreign key to the WorkChecklistItemResponse table 
            that indicates the response selected by the assigned technician
            or contractor.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkChecklistItem.Description">
            <summary>
            [Column] Gets or sets the description of action or inspection
            that the assigned users must perform as part of the checklist.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkChecklistItem.Work">
            <summary>
            Gets or sets the OWork object that represents the work
            object that this checklist item is attached to.
            </summary>
        </member>
        <member name="T:LogicLayer.TSurveyPlanner">
            <summary>
            Summary description for OSurveyPlanner
            </summary>
            <summary>
            Summary description for OSurveyPlanner
            </summary>
        </member>
        <member name="M:LogicLayer.OSurveyPlanner.Saving">
            --------------------------------------------------------------
            <summary>
            Set the survey planner number format
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OSurveyPlanner.CreateNewSurvey(LogicLayer.OSurveyPlannerRespondent)">
            <summary>
            
            </summary>
            <param name="spr"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OSurveyPlanner.AddSurveyPlannerRespondents(LogicLayer.OSurveyRespondentPortfolio)">
            <summary>
            
            </summary>
            <param name="srp"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OSurveyPlanner.SetupSurveys">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OSurveyPlanner.TranslateSurveyTargetType(System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OSurveyPlanner.ValidateThresholdReached(System.Nullable{System.Decimal})">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OSurveyPlanner.ReorderItems(LogicLayer.OSurveyPlannerServiceLevel)">
            --------------------------------------------------------------
            <summary>
            Re-order the list of items in the checklist response set.
            </summary>
            <param name="i"></param>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OSurveyPlanner.Close">
            <summary>
            
            </summary>
        </member>
        <member name="M:LogicLayer.OSurveyPlanner.InProgress">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyPlanner.SurveyTypeText">
            <summary>
            Translate survey type to string.
            </summary>
        </member>
        <member name="T:LogicLayer.TStoreStockTake">
            <summary>
            Summary description for OStoreStockTake
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreStockTake.StartStockStake">
            <summary>
            Starts the stock take.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreStockTake.CloseStockStake">
            <summary>
            Closes the stock take.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreStockTake.ValidateStoreBinsNotLocked">
            <summary>
            Validates and checks to ensure that none of the 
            store bins are locked.
            <para></para>
            Returns a list of store bins that are currently
            locked.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreStockTake.CreateStoreAdjustment">
            <summary>
            Creates a new store adjustment based on the 
            store take result. 
            <para></para>
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OStoreStockTake.DocumentTemplateDataSet">
            <summary>
            
            </summary>
        </member>
        <member name="T:LogicLayer.TAttachmentType">
            <summary>
            Represents the schema for the Activity table.
            </summary>
        </member>
        <member name="T:LogicLayer.OAttachmentType">
            <summary>
            Represents the type of attachment.
            </summary>
        </member>
        <member name="M:LogicLayer.OAttachmentType.GetAllAttachmentTypes">
            <summary>
            Gets a list of all attachment types.
            </summary>
        </member>
        <member name="T:LogicLayer.OPoint">
            <summary>
            Represents a condition-monitored point in which the 
            readings from any source can be tested against acceptable
            limits set up against this point. When the reading exceeds
            the acceptable limits, this can be set up to generate
            a Work object.
            <para></para>
            This point can also be associated with an OPC DA server,
            so that the OPC service can retrieve readings automatically
            from the OPC server.
            </summary>
            <summary>
            Represents a condition-monitored point in which the 
            readings from any source can be tested against acceptable
            limits set up against this point. When the reading exceeds
            the acceptable limits, this can be set up to generate
            a Work object.
            <para></para>
            This point can also be associated with an OPC DA server,
            so that the OPC service can retrieve readings automatically
            from the OPC server.
            </summary>
        </member>
        <member name="M:LogicLayer.OPoint.IsDuplicateName">
            <summary>
            Validates that there is no other point with the same name and under same location/equipment structure
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPoint.ValidateNoDuplicateOPCItemName">
            <summary>
            Validates that there is no other point with the 
            same OPC item name using the same OPC DA server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPoint.ThresholdBreached(LogicLayer.OReading)">
            <summary>
            This method is called when an alarm matching the 
            conditions is raised.
            <para></para>
            You can override the implementation of this method
            to derive more functionality whenever the threshold
            is breached.
            </summary>
        </member>
        <member name="M:LogicLayer.OPoint.GetPointsTable(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Gets a list of points based on the given location
            or equipment.
            </summary>
            <param name="locationId"></param>
            <param name="equipmentId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPoint.GetMaximumValueToDeduct(System.Decimal)">
            <summary>
            Gets the maximum value to deduct
            from the previous reading when there's
            a roll-over.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPoint.UpdateDefaultTariffAndDiscount">
            <summary>
            Update the default tariff and discount from the Point Tariff
            table.
            </summary>
        </member>
        <member name="M:LogicLayer.OPoint.HasReadings">
            <summary>
            Returns a flag to indicate if readings have been taken for this point.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OPoint.OPCItemName">
            <summary>
            [Column] Gets or sets the item name of the point in the OPC
            server.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.Description">
            <summary>
            [Column] Gets or sets the description of this point.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.OPCDAServerID">
            <summary>
            [Column] Gets or sets the foreign key to the
            OPCDAServer table that represents the DA Server
            in which this point is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.UnitOfMeasureID">
            <summary>
            [Column] Gets or sets the foreign key to the
            UnitOfMeasure table that represents the DA Server
            in which this point is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.PointTriggerID">
            <summary>
            [Column] Gets or sets the foreign key to the
            PointTrigger table that represents the DA Server
            in which this point is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.IsApplicableForLocation">
            <summary>
            [Column] Gets or sets the foreign key to the PointTrigger
            table that indicates the trigger parameters to be used
            to create the work when the reading is breaches acceptable
            limits.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.LocationID">
            <summary>
            [Column] Gets or sets the foreign key to the
            Location table that represents the location
            that this point is attached to. The point
            can only be attached to either a Location or
            an Equipment but not both.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.EquipmentID">
            <summary>
            [Column] Gets or sets the foreign key to the
            Equipment table that represents the equipment
            that this point is attached to. The point
            can only be attached to either a Location or
            an Equipment but not both.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.CreateWorkOnBreach">
            <summary>
            [Column] Gets or sets a flag that indicates whether
            a work will be created when the reading breaches
            the acceptable range.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.MinimumAcceptableReading">
            <summary>
            [Column] Gets or sets the minimum value for 
            the range of acceptable values. If a reading
            from the point falls outside of the acceptable
            range, it is considered a breach.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.MaximumAcceptableReading">
            <summary>
            [Column] Gets or sets the maximum value for 
            the range of acceptable values. If a reading
            from the point falls outside of the acceptable
            range, it is considered a breach.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.NumberOfBreachesToTriggerAction">
            <summary>
            [Column] Gets or sets the number of consecutive breaches before
            a Work will be created.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.NumberOfBreachesSoFar">
            <summary>
            [Column] Gets or sets the number of breaches so far.
            If the next reading is within the acceptable values,
            this value will be reset to zero.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.CreateOnlyIfWorksAreCancelledOrClosed">
            <summary>
            [Column] Gets or sets a flag that indicates if
            a work should be created if existing works created by
            this point are cancelled or closed.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.TypeOfWorkID">
            <summary>
            [Column] Gets or sets the foreign key to the code table
            that indicates the type of work of the Work that
            will be created if the readings breach the acceptable
            range.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.TypeOfServiceID">
            <summary>
            [Column] Gets or sets the foreign key to the code table
            that indicates the type of service of the Work that
            will be created if the readings breach the acceptable
            range.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.TypeOfProblemID">
            <summary>
            [Column] Gets or sets the foreign key to the code table
            that indicates the type of problem of the Work that
            will be created if the readings breach the acceptable
            range.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.Priority">
            <summary>
            [Column] Gets or sets the foreign key to the code table
            that indicates the priority of the Work that
            will be created if the readings breach the acceptable
            range.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.IsIncreasingMeter">
            <summary>
            [Column] Gets or sets a flag indicating whether
            the readings registered by this point always
            increases over time (like a water meter, electricity
            meter). 
            <para></para>
            <list>
                <item>0 - Absolute reading for temperature 
                sensors, vibration sensors, etc; </item>
                <item>1 - Increasing reading for electrical meters,
                water meters, etc; </item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.Factor">
            <summary>
            [Column] Gets or sets the factor that will be multiplied
            to the readings taken for this point.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.MaximumReading">
            <summary>
            [Column] Gets or sets the maximum reading that will
            this point can record.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.WorkDescription">
            <summary>
            [Column] Gets or sets the foreign key to the code table
            that indicates the description of the Work that
            will be created if the readings breach the acceptable
            range.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.Location">
            <summary>
            [One-to-One Join OPCPoint.LocationID = Location.ObjectID]
            Gets the OLocation object that represents the
            location this OPC point is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.Equipment">
            <summary>
            [One-to-One Join OPCPoint.EquipmentID = Equipment.ObjectID]
            Gets the OEquipment object that represents the
            equipment this OPC point is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.OPCDAServer">
            <summary>
            [One-to-One Join OPCPoint.OPCDAServerID = OPCDAServer.ObjectID]
            Gets the OOPCDAServer object that represents that
            DA Server that this OPC point is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.Reading">
            <summary>
            Gets a list of OReading objects that captured by current Point        
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.IsIncreasingMeterText">
            <summary>
            Gets the text indicating whether this point is
            an increasing meter.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.IsApplicableForLocationText">
            <summary>
            Gets the text indicating whether this point is
            applicable for location.
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.LocationOrEquipmentPath">
            <summary>
            Gets the text indicating the location/equipment path of this point 
            </summary>
        </member>
        <member name="P:LogicLayer.OPoint.LatestReading">
            <summary>
            This method will return current reading of this point if applicable,
            otherwise null will be returned
            </summary>
            <returns></returns>
        </member>
        <member name="T:LogicLayer.OReading">
            <summary>
            Represents the reading for an OPC point obtained
            from the server, entered by a user through the work
            module, or entered by the user through the Point module.
            </summary>
            <summary>
            Represents the reading for an OPC point obtained
            from the server, entered by a user through the work
            module, or entered by the user through the Point module.
            </summary>
        </member>
        <member name="M:LogicLayer.OReading.CreateWork(LogicLayer.OPoint)">
            <summary>
            Creates a new work and transits it. 
            </summary>
        </member>
        <member name="M:LogicLayer.OReading.CheckForBreachOfReading(LogicLayer.OPoint)">
            <summary>
            Checks if the reading has breached the OPC point's
            range of acceptable values. 
            </summary>
            <returns>True if there is a breach of reading, and a work
            has been created.</returns>
            <param name="point"></param>
        </member>
        <member name="M:LogicLayer.OReading.CheckForBreachOfReading">
            <summary>
            Checks if the reading has breached the OPC point's
            range of acceptable values.
            </summary>
            <returns>True if there is a breach of reading, and a work
            has been created.</returns>
        </member>
        <member name="M:LogicLayer.OReading.GetReadingsByPoint(System.Guid,System.Int32)">
            <summary>
            Gets the most recent readings by Point
            </summary>
            <param name="location"></param>
            <param name="locationTypeParameter"></param>
            <param name="numberOfResults"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OReading.ValidateLocationEquipment">
            <summary>
            validates that either one of the location/equipment 
            is specified.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OReading.TranslateBillToAMOSStatus(System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OReading.Saving">
            <summary>
            
            </summary>
        </member>
        <member name="M:LogicLayer.OReading.GetConsumption(System.Nullable{System.Guid},System.Nullable{System.DateTime},System.Nullable{System.Decimal})">
            <summary>
            Gets the consumption by deducting the latest reading
            from the previous reading.
            </summary>
            <param name="pointId"></param>
            <param name="currentReading"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OReading.DoesReadingExceedPreviousConsumptionBy1Point5Times">
            <summary>
            Checks if the current reading causes the consumption exceed by 1.5
            times the previous consumption.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OReading.DoesReadingExceedPreviousConsumptionBy1Point5Times(LogicLayer.OPoint,System.Nullable{System.DateTime},System.Nullable{System.Decimal})">
            <summary>
            Checks if the current reading causes the consumption exceed by 1.5
            times the previous consumption.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OReading.Source">
            <summary>
            [Column] Gets or sets the source of this reading.
            <para></para>
            <list>
                <item>0 - Entered directly through UI </item>
                <item>1 - Entered from a Work </item>
                <item>2 - Obtained automatically from an OPC Server </item>
                <item>3 - Entered from a PDA </item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OReading.LocationID">
            <summary>
            [Column] Gets or sets the foreign key to the
            Location table that represents the location
            that this point is attached to. The point
            can only be attached to either a Location or
            an Equipment but not both.
            </summary>
        </member>
        <member name="P:LogicLayer.OReading.EquipmentID">
            <summary>
            [Column] Gets or sets the foreign key to the
            Equipment table that represents the equipment
            that this point is attached to. The point
            can only be attached to either a Location or
            an Equipment but not both.
            </summary>
        </member>
        <member name="P:LogicLayer.OReading.Reading">
            <summary>
            [Column] Gets or sets the value of reading of
            this OPC point.
            </summary>
        </member>
        <member name="P:LogicLayer.OReading.DateOfReading">
            <summary>
            [Column] Gets or sets the date and time the reading
            was taken or obtained from the OPC server.
            </summary>
        </member>
        <member name="P:LogicLayer.OReading.CreateOnBreachWorkID">
            <summary>
            [Column] Gets or sets the foreign key to the 
            Work that was created when this reading breached 
            the acceptable range for this point.
            </summary>
        </member>
        <member name="P:LogicLayer.OReading.WorkID">
            <summary>
            [Column] Gets or sets the foreign key to the Work
            that took this reading.
            </summary>
        </member>
        <member name="P:LogicLayer.OReading.PointID">
            <summary>
            Gets or sets foreign key to the Point.
            </summary>
        </member>
        <member name="P:LogicLayer.OReading.CreateOnBreachWork">
            <summary>
            Gets or sets the Work that was created when this reading breached 
            the acceptable range for this point.
            </summary>
        </member>
        <member name="P:LogicLayer.OReading.Work">
            <summary>
            Gets or sets the Work that took this reading.
            </summary>
        </member>
        <member name="P:LogicLayer.OReading.SourceName">
            <summary>
            Gets the translated text of the source.
            </summary>
        </member>
        <member name="P:LogicLayer.OReading.BillToAMOSStatusText">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OReading.BillAmount">
            <summary>
            
            </summary>
        </member>
        <member name="T:LogicLayer.ReadingSource">
            <summary>
            Enumerates the different sources a reading can 
            be obtained from.
            </summary>
        </member>
        <member name="F:LogicLayer.ReadingSource.Direct">
            <summary>
            Indicates that the reading is entered
            directly through the user interface.
            </summary>
        </member>
        <member name="F:LogicLayer.ReadingSource.Work">
            <summary>
            Indicates that the reading is entered
            through a Work object.
            </summary>
        </member>
        <member name="F:LogicLayer.ReadingSource.OPCServer">
            <summary>
            Indicates that the reading is obtained
            automatically from an OPC server.
            </summary>
        </member>
        <member name="F:LogicLayer.ReadingSource.PDA">
            <summary>
            Indicates that the reading is entered through PDA
            </summary>
        </member>
        <member name="T:LogicLayer.TBudgetPeriod">
            <summary>
            Summary description for OBudget
            </summary>
            <summary>
            Summary description for OBudget
            </summary>
            <summary>
            Summary description for OBudget
            </summary>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.IsDeactivatable">
            <summary>
            Disallow delete if:
            <para></para>
            1. There is at least one budget adjustment against this period, OR 
            2. There is at least one budget reallocation against this period, OR 
            3. There is at least one budget transaction log that falls within this period.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.ValidateAccountIdDoesNotExist(System.Guid)">
            <summary>
            Validates that the specified account ID does not exist
            in the list of amounts in this budget.
            </summary>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.CopyBudgetPeriod(System.Guid)">
            <summary>
            Opens a new budget period based on a previous budget period.
            </summary>
            <param name="originalBudgetPeriodId"></param>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.GetBudgetPeriodsByBudgetID(System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Gets a list of budget periods whose budget ID is equal
            to the one specified.
            </summary>
            <param name="budgetId"></param>
            <param name="includingBudgetPeriodId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.GetOpenBudgetPeriodsByBudgetID(System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Gets a list of open budget periods whose budget ID is equal
            to the one specified.
            </summary>
            <param name="budgetId"></param>
            <param name="includingBudgetPeriodId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.GetBudgetPeriodByBudgetIDAndDate(System.Guid,System.DateTime)">
            <summary>
            Gets the budget period that belongs to the specified budget ID,
            and whose start/end date covers the specified date.
            </summary>
            <param name="budgetId"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.GetAvailableBalanceOfAllAccounts">
            <summary>
            Gets the available balance of all budget accounts in a
            DataTable. 
            <para></para>
            This method uses a single SQL select with sub-queries
            to obtain the result.
            <para></para>
            The DataTable contains the following columns: AccountID, Balance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.GetAvailableBalanceByAccountIDs(System.Collections.Generic.List{System.Guid})">
            <summary>
            Gets the available balance of selected accounts.
            <para></para>
            This method uses a single SQL select with sub-queries
            to obtain the result.
            <para></para>
            The DataTable contains the following columns: AccountID, Balance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.MergeBudgetAccountTree(System.Data.DataTable,System.Nullable{System.Guid})">
            <summary>
            Constructs the budget account in a tree structure.
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.GenerateSummaryBudgetView(System.Nullable{System.Guid})">
            <summary>
            Generates the summarized budget view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.GenerateIntervalView(LogicLayer.BudgetViewOptions,System.Int32[],System.Int32[],System.Nullable{System.Guid})">
            <summary>
            Generates a view of monthly transactions and variations.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.GenerateAvailableView(System.Nullable{System.Guid})">
            <summary>
            Generates the month-to-date available view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.DetermineBudgetPeriods(System.Collections.Generic.List{LogicLayer.OBudgetTransactionLog})">
            <summary>
            Determine the budget periods applicable to the transactions.
            </summary>
            <param name="transactions"></param>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.GetAvailableBalanceByTransactions(System.Collections.Generic.List{LogicLayer.OBudgetTransactionLog})">
            <summary>
            Gets a DataTable of available balances of all relevant budget periods
            and their accounts given a list of transactions. 
            <para></para>
            The resulting DataTable will consist of the following columns:
            BudgetPeriodID, AccountID, Balance.
            </summary>
            <param name="transactions"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.CheckSufficientBalance(System.Collections.Generic.List{LogicLayer.OBudgetTransactionLog})">
            <summary>
            Checks if the transactions are possible based on the
            available balances in the budget periods.
            </summary>
            <param name="transactions"></param>
            <returns>Returns a list of budget periods and accounts that
            do not have sufficient balance. Returns an empty string
            if there is sufficient balance in all budget periods
            and accounts.</returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.ValidateBudgetPeriodDoesNotOverlapExistingPeriods">
            <summary>
            Validates to ensure that this budget period does not
            overlap any existing budget periods from the same
            budget in the system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.Approve">
            <summary>
            Approves the budget and activates it for selection
            by setting the IsActive flag to 1.
            <para></para>
            This method is called by the workflow and should
            never be called by the developer directly.
            </summary>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.Cancel">
            <summary>
            Cancels the budget and de-activates it for selection
            by setting the IsActive flag to 0.
            <para></para>
            This method is called by the workflow and should
            never be called by the developer directly.
            </summary>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.DetermineLowThresholdOpeningBalances(System.Nullable{System.Guid})">
            <summary>
            Determines which are the opening balances in this threshold
            that are currently lower than the threshold. This method
            returns true if there are at least one account that has
            fallen below threshold.
            </summary>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.GetAvailableBalances(System.Guid,System.Guid,System.Guid)">
            <summary>
            Gets the available balance of selected accounts.
            <para></para>
            This method uses a single SQL select with sub-queries
            to obtain the result.
            <para></para>
            The DataTable contains the following columns: AccountID, Balance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.GetAvailableBalances(System.Guid,System.Guid,System.Collections.Generic.List{System.Guid})">
            <summary>
            Gets the available balance of selected accounts.
            <para></para>
            This method uses a single SQL select with sub-queries
            to obtain the result.
            <para></para>
            The DataTable contains the following columns: AccountID, Balance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.GetNegativeBalancesOfUncommittedConsumptions(System.Guid,System.Collections.Generic.List{System.Guid})">
            <summary>
            Gets the total budget consumption not that does not fall
            within any budget periods.
            <para></para>
            This method uses a single SQL select with sub-queries
            to obtain the result.
            <para></para>
            The DataTable contains the following columns: AccountID, Balance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.CheckSufficientBalance(System.Collections.Generic.List{LogicLayer.OBudgetTransactionLog},LogicLayer.ORequestForQuotation)">
            <summary>
            Checks if the transactions are possible based on the
            available balances in the budget periods.
            </summary>
            <param name="transactions"></param>
            <returns>Returns a list of budget periods and accounts that
            do not have sufficient balance. Returns an empty string
            if there is sufficient balance in all budget periods
            and accounts.</returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.CheckSpendingPolicy(System.Collections.Generic.List{LogicLayer.OBudgetTransactionLog})">
            <summary>
            Checks and ensures that the spending policies are met.
            </summary>
            <param name="transactions"></param>
            <param name="rfq"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.GenerateSummaryBudgetViewWithoutTree(System.Nullable{System.Guid})">
            <summary>
            Generates the summarized budget view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.GenerateYearlyBudgetView(System.Nullable{System.Guid})">
            <summary>
            Generates the yearly budget view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.GetIntervalNumber(System.DateTime)">
            <summary>
            Gets the interval number given a date.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.CheckSufficientBalanceAfterUpdatingUnitpriceAndQuantity(Anacle.DataFramework.DataList{LogicLayer.OPurchaseBudget})">
            <summary>
            Checks if the transactions are possible based on the
            available balances in the budget periods.
            </summary>
            <param name="transactions"></param>
            <returns>Returns a list of budget periods and accounts that
            do not have sufficient balance. Returns an empty string
            if there is sufficient balance in all budget periods
            and accounts.</returns>
        </member>
        <member name="F:LogicLayer.OBudgetPeriod.LowBudgetPeriodIntervalOpeningBalances">
            <summary>
            This list of budget period interval opening balance
            below this threshold and print out to notify users.
            can be further implemented to validate monthly allocated
            insufficient opening balance.
            
            </summary>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.GenerateIntervalViewForDetermineLowThreshold(System.Int32,LogicLayer.BudgetViewOptions,System.Int32[],System.Int32[],System.Nullable{System.Guid})">
            <summary>
            Generate DataTable for determine opening balance below threshold
            in interval view.
            </summary>
            <param name="interval"></param>
            <param name="startDate"></param>
            <param name="budgetViewOptions"></param>
            <param name="variationTypes"></param>
            <param name="transactionTypes"></param>
            <param name="accountID"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriod.DetermineLowThresholdIntervalOpeningBalances(System.Nullable{System.DateTime},System.Nullable{System.Guid})">
            <summary>
            Determines which are the interval opening balances in this threshold
            that are currently lower than the threshold. This method
            returns true if there are at least one account that has
            fallen below threshold.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetPeriod.IsActive">
            <summary>
            [Column] Gets or sets a flag indicating whether
            this budget has been approved and is active
            for selection.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetPeriod.NumberOfMonthsPerInterval">
            <summary>
            [Column] Gets or sets the number of months per interval. This value must
            be set in such a way that the total number of intervals must
            not be greater than 36.
            <para></para>
            In most budget implementations, a yearly budget
            of 12 months is often broken down into monthly intervals,
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetPeriod.BudgetID">
            <summary>
            [Column] Gets or sets the foreign key to the Budget
            table that indicates which budget this budget period
            belongs under.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetPeriod.StartDate">
            <summary>
            [Column] Gets or sets the starting date this
            budget is valid from. Only expenditures
            created after the start date can commit against
            this budget period.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetPeriod.EndDate">
            <summary>
            [Column] Gets or sets the ending date this
            budget is valid to. Only expenditures
            created after the start date can commit against
            this budget period.
            <para></para>
            Having a flexible end date allows for the
            creation of project budgets, so that the validity
            of the budget is not restricted to an annual or
            a monthly boundary.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetPeriod.ClosingDate">
            <summary>
            [Column] Gets or sets the closing date of this
            budget period. This indicates the last system date
            that expenses or POs can be committed against
            this budget period.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetPeriod.Budget">
            <summary>
            Gets or sets a OBudget object that indicates the
            budget that this budget period belongs under.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetPeriod.BudgetPeriodOpeningBalances">
            <summary>
            Gets a list of OBudgetPeriodOpeningBalance objects that 
            represents a set of budget accounts and the
            corresponding funds.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetPeriod.LowBudgetPeriodOpeningBalances">
            <summary>
            Gets a list of OBudgetPeriodOpeningBalance objects that
            represents the list of budget accounts such that the IsLow flag
            is set.
            <para></para>
            NOTE: The IsLow flag is set by the DetermineLowThresholdOpeningBalances
            method after it determines which accounts' available balances
            have fallen below the budget threshold.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetPeriod.TaskAmount">
            <summary>
            Gets the total budget amount for this period.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetPeriod.TaskLocations">
            <summary>
            Gets the locations of the budget this budget period
            is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetPeriod.BudgetTotal">
            <summary>
            Gets the budget total by summing up the
            opening balances for all categories in this
            budget period.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetPeriod.TotalNumberOfIntervals">
            <summary>
            Gets the total number of intervals in this budget period.
            </summary>
        </member>
        <member name="T:LogicLayer.BudgetViewOptions">
            <summary>
            Represents a set of options to indicate the
            type of budget view to generate.
            </summary>
        </member>
        <member name="M:LogicLayer.OTechnicianRosterItem.validateSameTechnicianwithDifferentShift(System.Collections.Generic.List{LogicLayer.TemporaryTechnicianRosterItem},LogicLayer.OTechnicianRosterItem)">
            <summary>
            
            </summary>
            <param name="t"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OTechnicianRosterItem.Names">
            <summary>
            Returns a name of users.
            </summary>
        </member>
        <member name="T:LogicLayer.EnumPositionAssignedFlag">
            <summary>
            
            </summary>
        </member>
        <member name="T:LogicLayer.TBudgetGroup">
            <summary>
            Summary description for OBudgetGroup
            </summary>
        </member>
        <member name="M:LogicLayer.OBudgetGroup.IsDeactivatable">
            <summary>
            Disallow delete if:
            1. The budget group is currently attached to a position.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LogicLayer.EnumReceiveEmailServerType">
             <summary>
            
             </summary>
        </member>
        <member name="T:LogicLayer.EnumRequestForQuotationDefaultDateUnit">
             <summary>
            
             </summary>
        </member>
        <member name="T:LogicLayer.EnumSurveyTargetType">
            <summary>
            
            </summary>
        </member>
        <member name="T:LogicLayer.TCalendar">
            <summary>
            Summary description for OChecklist
            </summary>
            <summary>
            Summary description for OChecklist
            </summary>
        </member>
        <member name="T:LogicLayer.OCalendar">
            <summary>
            Represents a calendar, usually for a specific region, country, city.
            It indicates which days of the weeks are working days, and all the
            holidays associated with this calendar.
            </summary>
            <summary>
            Represents a calendar, usually for a specific region, country, city.
            It indicates which days of the weeks are working days, and all the
            holidays associated with this calendar.
            </summary>
        </member>
        <member name="M:LogicLayer.OCalendar.IsDeactivatable">
            <summary>
            Disallow deactivating of the calendar if:
            1. It is used in an existing scheduled work that has been created, 
               and not cancelled.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCalendar.InitializeSearchTable">
            ----------------------------------------------------------------
            <summary>
            Initializes some internal hash tables for fast searching
            for work days and holidays
            </summary>
            ----------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OCalendar.FindNextWorkingDay(System.Boolean,System.Boolean,System.DateTime@,System.DateTime@)">
            ----------------------------------------------------------------
            <summary>
            Find the next working day either by moving forward or 
            backwards.
            </summary>
            <param name="blockType"></param>
            ----------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OCalendar.ScheduleNextDate(LogicLayer.OScheduledWork,System.DateTime@,System.DateTime@)">
            ----------------------------------------------------------------
            <summary>
            Determine the next date of work, based on the various scheduledWork
            parameters entered by the user.
            </summary>
            <param name="scheduledWork"></param>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
            ----------------------------------------------------------------
        </member>
        <member name="P:LogicLayer.OCalendar.IsWorkDay0">
            <summary>
            [Column] Indicates if Sunday is a work day.
            </summary>
        </member>
        <member name="P:LogicLayer.OCalendar.IsWorkDay1">
            <summary>
            [Column] Indicates if Monday is a work day.
            </summary>
        </member>
        <member name="P:LogicLayer.OCalendar.IsWorkDay2">
            <summary>
            [Column] Indicates if Tuesday is a work day.
            </summary>
        </member>
        <member name="P:LogicLayer.OCalendar.IsWorkDay3">
            <summary>
            [Column] Indicates if Wednesday is a work day.
            </summary>
        </member>
        <member name="P:LogicLayer.OCalendar.IsWorkDay4">
            <summary>
            [Column] Indicates if Thursday is a work day.
            </summary>
        </member>
        <member name="P:LogicLayer.OCalendar.IsWorkDay5">
            <summary>
            [Column] Indicates if Friday is a work day.
            </summary>
        </member>
        <member name="P:LogicLayer.OCalendar.IsWorkDay6">
            <summary>
            [Column] Indicates if Saturday is a work day.
            </summary>
        </member>
        <member name="P:LogicLayer.OCalendar.HolidayDates">
            <summary>
            Gets a one-to-many list of OCalendarHoliday representing holidays in a Calendar.
            </summary>
        </member>
        <member name="T:LogicLayer.TSupporter">
            <summary>
            Represents one level in the supporter hierarchy.
            </summary>
        </member>
        <member name="T:LogicLayer.OSupporter">
            <summary>
            Represents one level in the supporter hierarchy.
            </summary>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ExchangeServiceBinding">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.#ctor">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.ResolveNames(LogicLayer.ExchangeWebServices.ResolveNamesType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.ResolveNamesAsync(LogicLayer.ExchangeWebServices.ResolveNamesType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.ResolveNamesAsync(LogicLayer.ExchangeWebServices.ResolveNamesType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.ExpandDL(LogicLayer.ExchangeWebServices.ExpandDLType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.ExpandDLAsync(LogicLayer.ExchangeWebServices.ExpandDLType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.ExpandDLAsync(LogicLayer.ExchangeWebServices.ExpandDLType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.FindFolder(LogicLayer.ExchangeWebServices.FindFolderType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.FindFolderAsync(LogicLayer.ExchangeWebServices.FindFolderType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.FindFolderAsync(LogicLayer.ExchangeWebServices.FindFolderType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.FindItem(LogicLayer.ExchangeWebServices.FindItemType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.FindItemAsync(LogicLayer.ExchangeWebServices.FindItemType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.FindItemAsync(LogicLayer.ExchangeWebServices.FindItemType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetFolder(LogicLayer.ExchangeWebServices.GetFolderType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetFolderAsync(LogicLayer.ExchangeWebServices.GetFolderType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetFolderAsync(LogicLayer.ExchangeWebServices.GetFolderType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.ConvertId(LogicLayer.ExchangeWebServices.ConvertIdType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.ConvertIdAsync(LogicLayer.ExchangeWebServices.ConvertIdType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.ConvertIdAsync(LogicLayer.ExchangeWebServices.ConvertIdType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CreateFolder(LogicLayer.ExchangeWebServices.CreateFolderType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CreateFolderAsync(LogicLayer.ExchangeWebServices.CreateFolderType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CreateFolderAsync(LogicLayer.ExchangeWebServices.CreateFolderType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.DeleteFolder(LogicLayer.ExchangeWebServices.DeleteFolderType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.DeleteFolderAsync(LogicLayer.ExchangeWebServices.DeleteFolderType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.DeleteFolderAsync(LogicLayer.ExchangeWebServices.DeleteFolderType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.UpdateFolder(LogicLayer.ExchangeWebServices.UpdateFolderType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.UpdateFolderAsync(LogicLayer.ExchangeWebServices.UpdateFolderType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.UpdateFolderAsync(LogicLayer.ExchangeWebServices.UpdateFolderType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.MoveFolder(LogicLayer.ExchangeWebServices.MoveFolderType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.MoveFolderAsync(LogicLayer.ExchangeWebServices.MoveFolderType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.MoveFolderAsync(LogicLayer.ExchangeWebServices.MoveFolderType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CopyFolder(LogicLayer.ExchangeWebServices.CopyFolderType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CopyFolderAsync(LogicLayer.ExchangeWebServices.CopyFolderType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CopyFolderAsync(LogicLayer.ExchangeWebServices.CopyFolderType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.Subscribe(LogicLayer.ExchangeWebServices.SubscribeType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.SubscribeAsync(LogicLayer.ExchangeWebServices.SubscribeType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.SubscribeAsync(LogicLayer.ExchangeWebServices.SubscribeType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.Unsubscribe(LogicLayer.ExchangeWebServices.UnsubscribeType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.UnsubscribeAsync(LogicLayer.ExchangeWebServices.UnsubscribeType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.UnsubscribeAsync(LogicLayer.ExchangeWebServices.UnsubscribeType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetEvents(LogicLayer.ExchangeWebServices.GetEventsType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetEventsAsync(LogicLayer.ExchangeWebServices.GetEventsType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetEventsAsync(LogicLayer.ExchangeWebServices.GetEventsType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.SyncFolderHierarchy(LogicLayer.ExchangeWebServices.SyncFolderHierarchyType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.SyncFolderHierarchyAsync(LogicLayer.ExchangeWebServices.SyncFolderHierarchyType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.SyncFolderHierarchyAsync(LogicLayer.ExchangeWebServices.SyncFolderHierarchyType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.SyncFolderItems(LogicLayer.ExchangeWebServices.SyncFolderItemsType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.SyncFolderItemsAsync(LogicLayer.ExchangeWebServices.SyncFolderItemsType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.SyncFolderItemsAsync(LogicLayer.ExchangeWebServices.SyncFolderItemsType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CreateManagedFolder(LogicLayer.ExchangeWebServices.CreateManagedFolderRequestType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CreateManagedFolderAsync(LogicLayer.ExchangeWebServices.CreateManagedFolderRequestType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CreateManagedFolderAsync(LogicLayer.ExchangeWebServices.CreateManagedFolderRequestType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetItem(LogicLayer.ExchangeWebServices.GetItemType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetItemAsync(LogicLayer.ExchangeWebServices.GetItemType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetItemAsync(LogicLayer.ExchangeWebServices.GetItemType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CreateItem(LogicLayer.ExchangeWebServices.CreateItemType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CreateItemAsync(LogicLayer.ExchangeWebServices.CreateItemType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CreateItemAsync(LogicLayer.ExchangeWebServices.CreateItemType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.DeleteItem(LogicLayer.ExchangeWebServices.DeleteItemType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.DeleteItemAsync(LogicLayer.ExchangeWebServices.DeleteItemType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.DeleteItemAsync(LogicLayer.ExchangeWebServices.DeleteItemType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.UpdateItem(LogicLayer.ExchangeWebServices.UpdateItemType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.UpdateItemAsync(LogicLayer.ExchangeWebServices.UpdateItemType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.UpdateItemAsync(LogicLayer.ExchangeWebServices.UpdateItemType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.SendItem(LogicLayer.ExchangeWebServices.SendItemType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.SendItemAsync(LogicLayer.ExchangeWebServices.SendItemType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.SendItemAsync(LogicLayer.ExchangeWebServices.SendItemType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.MoveItem(LogicLayer.ExchangeWebServices.MoveItemType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.MoveItemAsync(LogicLayer.ExchangeWebServices.MoveItemType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.MoveItemAsync(LogicLayer.ExchangeWebServices.MoveItemType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CopyItem(LogicLayer.ExchangeWebServices.CopyItemType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CopyItemAsync(LogicLayer.ExchangeWebServices.CopyItemType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CopyItemAsync(LogicLayer.ExchangeWebServices.CopyItemType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CreateAttachment(LogicLayer.ExchangeWebServices.CreateAttachmentType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CreateAttachmentAsync(LogicLayer.ExchangeWebServices.CreateAttachmentType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CreateAttachmentAsync(LogicLayer.ExchangeWebServices.CreateAttachmentType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.DeleteAttachment(LogicLayer.ExchangeWebServices.DeleteAttachmentType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.DeleteAttachmentAsync(LogicLayer.ExchangeWebServices.DeleteAttachmentType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.DeleteAttachmentAsync(LogicLayer.ExchangeWebServices.DeleteAttachmentType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetAttachment(LogicLayer.ExchangeWebServices.GetAttachmentType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetAttachmentAsync(LogicLayer.ExchangeWebServices.GetAttachmentType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetAttachmentAsync(LogicLayer.ExchangeWebServices.GetAttachmentType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetDelegate(LogicLayer.ExchangeWebServices.GetDelegateType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetDelegateAsync(LogicLayer.ExchangeWebServices.GetDelegateType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetDelegateAsync(LogicLayer.ExchangeWebServices.GetDelegateType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.AddDelegate(LogicLayer.ExchangeWebServices.AddDelegateType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.AddDelegateAsync(LogicLayer.ExchangeWebServices.AddDelegateType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.AddDelegateAsync(LogicLayer.ExchangeWebServices.AddDelegateType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.RemoveDelegate(LogicLayer.ExchangeWebServices.RemoveDelegateType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.RemoveDelegateAsync(LogicLayer.ExchangeWebServices.RemoveDelegateType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.RemoveDelegateAsync(LogicLayer.ExchangeWebServices.RemoveDelegateType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.UpdateDelegate(LogicLayer.ExchangeWebServices.UpdateDelegateType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.UpdateDelegateAsync(LogicLayer.ExchangeWebServices.UpdateDelegateType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.UpdateDelegateAsync(LogicLayer.ExchangeWebServices.UpdateDelegateType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetUserAvailability(LogicLayer.ExchangeWebServices.GetUserAvailabilityRequestType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetUserAvailabilityAsync(LogicLayer.ExchangeWebServices.GetUserAvailabilityRequestType)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetUserAvailabilityAsync(LogicLayer.ExchangeWebServices.GetUserAvailabilityRequestType,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetUserOofSettings(LogicLayer.ExchangeWebServices.GetUserOofSettingsRequest)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetUserOofSettingsAsync(LogicLayer.ExchangeWebServices.GetUserOofSettingsRequest)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetUserOofSettingsAsync(LogicLayer.ExchangeWebServices.GetUserOofSettingsRequest,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.SetUserOofSettings(LogicLayer.ExchangeWebServices.SetUserOofSettingsRequest)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.SetUserOofSettingsAsync(LogicLayer.ExchangeWebServices.SetUserOofSettingsRequest)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.SetUserOofSettingsAsync(LogicLayer.ExchangeWebServices.SetUserOofSettingsRequest,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.ResolveNamesCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.ExpandDLCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.FindFolderCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.FindItemCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetFolderCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.ConvertIdCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CreateFolderCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.DeleteFolderCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.UpdateFolderCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.MoveFolderCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CopyFolderCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.SubscribeCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.UnsubscribeCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetEventsCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.SyncFolderHierarchyCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.SyncFolderItemsCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CreateManagedFolderCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetItemCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CreateItemCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.DeleteItemCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.UpdateItemCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.SendItemCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.MoveItemCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CopyItemCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.CreateAttachmentCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.DeleteAttachmentCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetAttachmentCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetDelegateCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.AddDelegateCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.RemoveDelegateCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.UpdateDelegateCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetUserAvailabilityCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.GetUserOofSettingsCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExchangeWebServices.ExchangeServiceBinding.SetUserOofSettingsCompleted">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ServerVersionInfo">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ServerVersionInfo.MajorVersion">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ServerVersionInfo.MajorVersionSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ServerVersionInfo.MinorVersion">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ServerVersionInfo.MinorVersionSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ServerVersionInfo.MajorBuildNumber">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ServerVersionInfo.MajorBuildNumberSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ServerVersionInfo.MinorBuildNumber">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ServerVersionInfo.MinorBuildNumberSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ServerVersionInfo.Version">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SetUserOofSettingsResponse">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SetUserOofSettingsResponse.ResponseMessage">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ResponseMessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ResponseMessageType.MessageText">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ResponseMessageType.ResponseCode">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ResponseMessageType.ResponseCodeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ResponseMessageType.DescriptiveLinkKey">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ResponseMessageType.DescriptiveLinkKeySpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ResponseMessageType.MessageXml">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ResponseMessageType.ResponseClass">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ResponseCodeType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.NoError">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorAccessDenied">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorAccountDisabled">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorAddDelegatesFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorAddressSpaceNotFound">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorADOperation">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorADSessionFilter">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorADUnavailable">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorAutoDiscoverFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorAffectedTaskOccurrencesRequired">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorAttachmentSizeLimitExceeded">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorAvailabilityConfigNotFound">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorBatchProcessingStopped">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarCannotMoveOrCopyOccurrence">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarCannotUpdateDeletedItem">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarCannotUseIdForOccurrenceId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarCannotUseIdForRecurringMasterId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarDurationIsTooLong">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarEndDateIsEarlierThanStartDate">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarFolderIsInvalidForCalendarView">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarInvalidAttributeValue">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarInvalidDayForTimeChangePattern">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarInvalidDayForWeeklyRecurrence">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarInvalidPropertyState">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarInvalidPropertyValue">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarInvalidRecurrence">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarInvalidTimeZone">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarIsDelegatedForAccept">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarIsDelegatedForDecline">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarIsDelegatedForRemove">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarIsDelegatedForTentative">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarIsNotOrganizer">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarIsOrganizerForAccept">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarIsOrganizerForDecline">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarIsOrganizerForRemove">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarIsOrganizerForTentative">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarOccurrenceIndexIsOutOfRecurrenceRange">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarOccurrenceIsDeletedFromRecurrence">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarOutOfRange">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarMeetingRequestIsOutOfDate">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCalendarViewRangeTooBig">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCannotCreateCalendarItemInNonCalendarFolder">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCannotCreateContactInNonContactFolder">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCannotCreatePostItemInNonMailFolder">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCannotCreateTaskInNonTaskFolder">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCannotDeleteObject">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCannotOpenFileAttachment">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCannotDeleteTaskOccurrence">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCannotSetCalendarPermissionOnNonCalendarFolder">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCannotSetNonCalendarPermissionOnCalendarFolder">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCannotSetPermissionUnknownEntries">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCannotUseFolderIdForItemId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCannotUseItemIdForFolderId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorChangeKeyRequired">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorChangeKeyRequiredForWriteOperations">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorConnectionFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorContentConversionFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCorruptData">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCreateItemAccessDenied">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCreateManagedFolderPartialCompletion">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCreateSubfolderAccessDenied">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorCrossMailboxMoveCopy">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorDataSizeLimitExceeded">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorDataSourceOperation">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorDelegateAlreadyExists">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorDelegateCannotAddOwner">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorDelegateMissingConfiguration">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorDelegateNoUser">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorDelegateValidationFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorDeleteDistinguishedFolder">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorDeleteItemsFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorDistinguishedUserNotSupported">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorDuplicateInputFolderNames">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorDuplicateUserIdsSpecified">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorEmailAddressMismatch">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorEventNotFound">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorExpiredSubscription">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorFolderCorrupt">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorFolderNotFound">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorFolderPropertRequestFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorFolderSave">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorFolderSaveFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorFolderSavePropertyError">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorFolderExists">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorFreeBusyGenerationFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorGetServerSecurityDescriptorFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorImpersonateUserDenied">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorImpersonationDenied">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorImpersonationFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorIncorrectSchemaVersion">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorIncorrectUpdatePropertyCount">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorIndividualMailboxLimitReached">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInsufficientResources">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInternalServerError">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInternalServerTransientError">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidAccessLevel">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidAttachmentId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidAttachmentSubfilter">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidAttachmentSubfilterTextFilter">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidAuthorizationContext">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidChangeKey">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidClientSecurityContext">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidCompleteDate">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidCrossForestCredentials">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidDelegatePermission">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidDelegateUserId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidExcludesRestriction">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidExpressionTypeForSubFilter">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidExtendedProperty">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidExtendedPropertyValue">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidFolderId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidFolderTypeForOperation">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidFractionalPagingParameters">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidFreeBusyViewType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidIdEmpty">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidIdMalformed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidIdMalformedEwsLegacyIdFormat">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidIdMonikerTooLong">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidIdNotAnItemAttachmentId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidIdReturnedByResolveNames">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidIdStoreObjectIdTooLong">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidIdTooManyAttachmentLevels">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidIdXml">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidIndexedPagingParameters">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidInternetHeaderChildNodes">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidItemForOperationCreateItemAttachment">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidItemForOperationCreateItem">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidItemForOperationAcceptItem">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidItemForOperationDeclineItem">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidItemForOperationCancelItem">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidItemForOperationExpandDL">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidItemForOperationRemoveItem">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidItemForOperationSendItem">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidItemForOperationTentative">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidManagedFolderProperty">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidManagedFolderQuota">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidManagedFolderSize">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidMergedFreeBusyInterval">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidNameForNameResolution">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidOperation">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidNetworkServiceContext">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidOofParameter">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidPagingMaxRows">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidParentFolder">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidPercentCompleteValue">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidPermissionSettings">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidUserInfo">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidPropertyAppend">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidPropertyDelete">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidPropertyForExists">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidPropertyForOperation">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidPropertyRequest">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidPropertySet">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidPropertyUpdateSentMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidProxySecurityContext">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidPullSubscriptionId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidPushSubscriptionUrl">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidRecipients">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidRecipientSubfilter">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidRecipientSubfilterComparison">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidRecipientSubfilterOrder">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidRecipientSubfilterTextFilter">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidReferenceItem">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidRequest">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidRestriction">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidRoutingType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidScheduledOofDuration">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidSecurityDescriptor">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidSendItemSaveSettings">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidSerializedAccessToken">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidServerVersion">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidSid">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidSmtpAddress">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidSubfilterType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidSubfilterTypeNotAttendeeType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidSubfilterTypeNotRecipientType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidSubscription">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidSubscriptionRequest">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidSyncStateData">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidTimeInterval">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidUserOofSettings">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidUserPrincipalName">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidUserSid">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidUserSidMissingUPN">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidValueForProperty">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidWatermark">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorIrresolvableConflict">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorItemCorrupt">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorItemNotFound">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorItemPropertyRequestFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorItemSave">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorItemSavePropertyError">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorLegacyMailboxFreeBusyViewTypeNotMerged">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorLocalServerObjectNotFound">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorLogonAsNetworkServiceFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMailboxConfiguration">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMailboxDataArrayEmpty">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMailboxDataArrayTooBig">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMailboxLogonFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMailboxMoveInProgress">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMailboxStoreUnavailable">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMailRecipientNotFound">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorManagedFolderAlreadyExists">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorManagedFolderNotFound">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorManagedFoldersRootFailure">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMeetingSuggestionGenerationFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMessageDispositionRequired">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMessageSizeExceeded">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMimeContentConversionFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMimeContentInvalid">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMimeContentInvalidBase64String">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMissingArgument">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMissingEmailAddress">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMissingEmailAddressForManagedFolder">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMissingInformationEmailAddress">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMissingInformationReferenceItemId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMissingItemForCreateItemAttachment">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMissingManagedFolderId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMissingRecipients">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMissingUserIdInformation">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMoreThanOneAccessModeSpecified">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMoveCopyFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorMoveDistinguishedFolder">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorNameResolutionMultipleResults">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorNameResolutionNoMailbox">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorNameResolutionNoResults">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorNoApplicableProxyCASServersAvailable">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorNoCalendar">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorNoDestinationCASDueToKerberosRequirements">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorNoDestinationCASDueToSSLRequirements">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorNoDestinationCASDueToVersionMismatch">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorNoFolderClassOverride">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorNoFreeBusyAccess">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorNonExistentMailbox">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorNonPrimarySmtpAddress">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorNoPropertyTagForCustomProperties">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorNoPublicFolderReplicaAvailable">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorNoRespondingCASInDestinationSite">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorNotDelegate">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorNotEnoughMemory">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorObjectTypeChanged">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorOccurrenceCrossingBoundary">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorOccurrenceTimeSpanTooBig">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorOperationNotAllowedWithPublicFolderRoot">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorParentFolderIdRequired">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorParentFolderNotFound">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorPasswordChangeRequired">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorPasswordExpired">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorPropertyUpdate">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorPropertyValidationFailure">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorProxiedSubscriptionCallFailure">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorProxyCallFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorProxyGroupSidLimitExceeded">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorProxyRequestNotAllowed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorProxyRequestProcessingFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorProxyServiceDiscoveryFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorProxyTokenExpired">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorPublicFolderRequestProcessingFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorPublicFolderServerNotFound">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorQueryFilterTooLong">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorQuotaExceeded">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorReadEventsFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorReadReceiptNotPending">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorRecurrenceEndDateTooBig">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorRecurrenceHasNoOccurrence">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorRemoveDelegatesFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorRequestAborted">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorRequestStreamTooBig">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorRequiredPropertyMissing">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorResolveNamesInvalidFolderType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorResolveNamesOnlyOneContactsFolderAllowed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorResponseSchemaValidation">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorRestrictionTooLong">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorRestrictionTooComplex">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorResultSetTooBig">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorInvalidExchangeImpersonationHeaderData">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorSavedItemFolderNotFound">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorSchemaValidation">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorSearchFolderNotInitialized">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorSendAsDenied">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorSendMeetingCancellationsRequired">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorSendMeetingInvitationsOrCancellationsRequired">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorSendMeetingInvitationsRequired">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorSentMeetingRequestUpdate">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorSentTaskRequestUpdate">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorServerBusy">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorServiceDiscoveryFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorStaleObject">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorSubscriptionAccessDenied">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorSubscriptionDelegateAccessNotSupported">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorSubscriptionNotFound">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorSyncFolderNotFound">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorTimeIntervalTooBig">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorTimeoutExpired">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorTimeZone">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorToFolderNotFound">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorTokenSerializationDenied">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorUpdatePropertyMismatch">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorUnableToGetUserOofSettings">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorUnsupportedSubFilter">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorUnsupportedCulture">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorUnsupportedMapiPropertyType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorUnsupportedMimeConversion">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorUnsupportedPathForQuery">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorUnsupportedPathForSortGroup">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorUnsupportedPropertyDefinition">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorUnsupportedQueryFilter">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorUnsupportedRecurrence">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorUnsupportedTypeForConversion">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorUpdateDelegatesFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorVoiceMailNotImplemented">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorVirusDetected">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorVirusMessageDeleted">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorWebRequestInInvalidState">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorWin32InteropError">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorWorkingHoursSaveFailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseCodeType.ErrorWorkingHoursXmlMalformed">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ResponseMessageTypeMessageXml">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ResponseMessageTypeMessageXml.Any">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ResponseClassType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseClassType.Success">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseClassType.Warning">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseClassType.Error">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.BaseDelegateResponseMessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseDelegateResponseMessageType.ResponseMessages">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DelegateUserResponseMessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DelegateUserResponseMessageType.DelegateUser">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DelegateUserType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DelegateUserType.UserId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DelegateUserType.DelegatePermissions">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DelegateUserType.ReceiveCopiesOfMeetingMessages">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DelegateUserType.ReceiveCopiesOfMeetingMessagesSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DelegateUserType.ViewPrivateItems">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DelegateUserType.ViewPrivateItemsSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.UserIdType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UserIdType.SID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UserIdType.PrimarySmtpAddress">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UserIdType.DisplayName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UserIdType.DistinguishedUser">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UserIdType.DistinguishedUserSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DistinguishedUserType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedUserType.Default">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedUserType.Anonymous">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DelegatePermissionsType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DelegatePermissionsType.CalendarFolderPermissionLevel">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DelegatePermissionsType.CalendarFolderPermissionLevelSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DelegatePermissionsType.TasksFolderPermissionLevel">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DelegatePermissionsType.TasksFolderPermissionLevelSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DelegatePermissionsType.InboxFolderPermissionLevel">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DelegatePermissionsType.InboxFolderPermissionLevelSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DelegatePermissionsType.ContactsFolderPermissionLevel">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DelegatePermissionsType.ContactsFolderPermissionLevelSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DelegatePermissionsType.NotesFolderPermissionLevel">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DelegatePermissionsType.NotesFolderPermissionLevelSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DelegatePermissionsType.JournalFolderPermissionLevel">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DelegatePermissionsType.JournalFolderPermissionLevelSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DelegateFolderPermissionLevelType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DelegateFolderPermissionLevelType.None">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DelegateFolderPermissionLevelType.Editor">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DelegateFolderPermissionLevelType.Reviewer">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DelegateFolderPermissionLevelType.Author">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DelegateFolderPermissionLevelType.Custom">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.UpdateDelegateResponseMessageType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.RemoveDelegateResponseMessageType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AddDelegateResponseMessageType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetDelegateResponseMessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetDelegateResponseMessageType.DeliverMeetingRequests">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetDelegateResponseMessageType.DeliverMeetingRequestsSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DeliverMeetingRequestsType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DeliverMeetingRequestsType.DelegatesOnly">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DeliverMeetingRequestsType.DelegatesAndMe">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DeliverMeetingRequestsType.DelegatesAndSendInformationToMe">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ConvertIdResponseMessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ConvertIdResponseMessageType.AlternateId">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AlternateIdBaseType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AlternateIdBaseType.Format">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.IdFormatType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.IdFormatType.EwsLegacyId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.IdFormatType.EwsId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.IdFormatType.EntryId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.IdFormatType.HexEntryId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.IdFormatType.StoreId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.IdFormatType.OwaId">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AlternatePublicFolderIdType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AlternatePublicFolderIdType.FolderId">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AlternatePublicFolderItemIdType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AlternatePublicFolderItemIdType.ItemId">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AlternateIdType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AlternateIdType.Id">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AlternateIdType.Mailbox">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SyncFolderItemsResponseMessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderItemsResponseMessageType.SyncState">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderItemsResponseMessageType.IncludesLastItemInRange">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderItemsResponseMessageType.IncludesLastItemInRangeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderItemsResponseMessageType.Changes">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SyncFolderItemsChangesType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderItemsChangesType.Items">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderItemsChangesType.ItemsElementName">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SyncFolderItemsCreateOrUpdateType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderItemsCreateOrUpdateType.Item">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CalendarItemType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ItemType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.MimeContent">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.ItemId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.ParentFolderId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.ItemClass">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.Subject">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.Sensitivity">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.SensitivitySpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.Body">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.Attachments">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.DateTimeReceived">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.DateTimeReceivedSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.Size">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.SizeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.Categories">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.Importance">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.ImportanceSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.InReplyTo">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.IsSubmitted">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.IsSubmittedSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.IsDraft">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.IsDraftSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.IsFromMe">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.IsFromMeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.IsResend">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.IsResendSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.IsUnmodified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.IsUnmodifiedSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.InternetMessageHeaders">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.DateTimeSent">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.DateTimeSentSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.DateTimeCreated">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.DateTimeCreatedSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.ResponseObjects">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.ReminderDueBy">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.ReminderDueBySpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.ReminderIsSet">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.ReminderIsSetSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.ReminderMinutesBeforeStart">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.DisplayCc">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.DisplayTo">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.HasAttachments">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.HasAttachmentsSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.ExtendedProperty">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.Culture">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.EffectiveRights">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.LastModifiedName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.LastModifiedTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemType.LastModifiedTimeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.UID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.RecurrenceId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.RecurrenceIdSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.DateTimeStamp">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.DateTimeStampSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.Start">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.StartSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.End">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.EndSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.OriginalStart">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.OriginalStartSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.IsAllDayEvent">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.IsAllDayEventSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.LegacyFreeBusyStatus">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.LegacyFreeBusyStatusSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.Location">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.When">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.IsMeeting">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.IsMeetingSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.IsCancelled">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.IsCancelledSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.IsRecurring">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.IsRecurringSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.MeetingRequestWasSent">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.MeetingRequestWasSentSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.IsResponseRequested">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.IsResponseRequestedSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.CalendarItemType1">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.CalendarItemType1Specified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.MyResponseType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.MyResponseTypeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.Organizer">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.RequiredAttendees">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.OptionalAttendees">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.Resources">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.ConflictingMeetingCount">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.ConflictingMeetingCountSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.AdjacentMeetingCount">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.AdjacentMeetingCountSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.ConflictingMeetings">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.AdjacentMeetings">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.Duration">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.TimeZone">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.AppointmentReplyTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.AppointmentReplyTimeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.AppointmentSequenceNumber">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.AppointmentSequenceNumberSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.AppointmentState">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.AppointmentStateSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.Recurrence">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.FirstOccurrence">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.LastOccurrence">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.ModifiedOccurrences">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.DeletedOccurrences">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.MeetingTimeZone">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.ConferenceType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.ConferenceTypeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.AllowNewTimeProposal">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.AllowNewTimeProposalSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.IsOnlineMeeting">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.IsOnlineMeetingSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.MeetingWorkspaceUrl">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarItemType.NetShowUrl">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.LegacyFreeBusyType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.LegacyFreeBusyType.Free">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.LegacyFreeBusyType.Tentative">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.LegacyFreeBusyType.Busy">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.LegacyFreeBusyType.OOF">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.LegacyFreeBusyType.NoData">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CalendarItemTypeType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarItemTypeType.Single">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarItemTypeType.Occurrence">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarItemTypeType.Exception">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarItemTypeType.RecurringMaster">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ResponseTypeType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseTypeType.Unknown">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseTypeType.Organizer">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseTypeType.Tentative">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseTypeType.Accept">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseTypeType.Decline">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResponseTypeType.NoResponseReceived">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SingleRecipientType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SingleRecipientType.Item">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.EmailAddressType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.BaseEmailAddressType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.EmailAddressType.Name">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.EmailAddressType.EmailAddress">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.EmailAddressType.RoutingType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.EmailAddressType.MailboxType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.EmailAddressType.MailboxTypeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.EmailAddressType.ItemId">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MailboxTypeType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MailboxTypeType.Mailbox">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MailboxTypeType.PublicDL">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MailboxTypeType.PrivateDL">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MailboxTypeType.Contact">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MailboxTypeType.PublicFolder">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ItemIdType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.BaseItemIdType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemIdType.Id">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemIdType.ChangeKey">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.RecurringMasterItemIdType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.RecurringMasterItemIdType.OccurrenceId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.RecurringMasterItemIdType.ChangeKey">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.OccurrenceItemIdType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.OccurrenceItemIdType.RecurringMasterId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.OccurrenceItemIdType.ChangeKey">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.OccurrenceItemIdType.InstanceIndex">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.RootItemIdType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.RootItemIdType.RootItemId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.RootItemIdType.RootItemChangeKey">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.RequestAttachmentIdType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.RequestAttachmentIdType.Id">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AttachmentIdType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AttachmentIdType.RootItemId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AttachmentIdType.RootItemChangeKey">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AttendeeType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AttendeeType.Mailbox">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AttendeeType.ResponseType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AttendeeType.ResponseTypeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AttendeeType.LastResponseTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AttendeeType.LastResponseTimeSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.NonEmptyArrayOfAllItemsType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.NonEmptyArrayOfAllItemsType.Items">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AcceptItemType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.WellKnownResponseObjectType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ResponseObjectType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ResponseObjectCoreType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MessageType.Sender">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MessageType.ToRecipients">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MessageType.CcRecipients">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MessageType.BccRecipients">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MessageType.IsReadReceiptRequested">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MessageType.IsReadReceiptRequestedSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MessageType.IsDeliveryReceiptRequested">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MessageType.IsDeliveryReceiptRequestedSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MessageType.ConversationIndex">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MessageType.ConversationTopic">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MessageType.From">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MessageType.InternetMessageId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MessageType.IsRead">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MessageType.IsReadSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MessageType.IsResponseRequested">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MessageType.IsResponseRequestedSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MessageType.References">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MessageType.ReplyTo">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MessageType.ReceivedBy">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MessageType.ReceivedRepresenting">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ResponseObjectCoreType.ReferenceItemId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ResponseObjectType.ObjectName">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MimeContentType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MimeContentType.CharacterSet">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MimeContentType.Value">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FolderIdType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.BaseFolderIdType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FolderIdType.Id">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FolderIdType.ChangeKey">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DistinguishedFolderIdType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DistinguishedFolderIdType.Mailbox">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DistinguishedFolderIdType.Id">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DistinguishedFolderIdType.ChangeKey">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DistinguishedFolderIdNameType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedFolderIdNameType.calendar">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedFolderIdNameType.contacts">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedFolderIdNameType.deleteditems">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedFolderIdNameType.drafts">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedFolderIdNameType.inbox">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedFolderIdNameType.journal">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedFolderIdNameType.notes">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedFolderIdNameType.outbox">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedFolderIdNameType.sentitems">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedFolderIdNameType.tasks">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedFolderIdNameType.msgfolderroot">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedFolderIdNameType.publicfoldersroot">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedFolderIdNameType.root">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedFolderIdNameType.junkemail">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedFolderIdNameType.searchfolders">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedFolderIdNameType.voicemail">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SensitivityChoicesType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.SensitivityChoicesType.Normal">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.SensitivityChoicesType.Personal">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.SensitivityChoicesType.Private">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.SensitivityChoicesType.Confidential">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.BodyType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BodyType.BodyType1">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BodyType.Value">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.BodyTypeType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.BodyTypeType.HTML">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.BodyTypeType.Text">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FileAttachmentType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AttachmentType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AttachmentType.AttachmentId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AttachmentType.Name">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AttachmentType.ContentType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AttachmentType.ContentId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AttachmentType.ContentLocation">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FileAttachmentType.Content">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ItemAttachmentType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemAttachmentType.Item">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ContactItemType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.FileAs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.FileAsMapping">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.FileAsMappingSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.DisplayName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.GivenName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.Initials">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.MiddleName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.Nickname">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.CompleteName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.CompanyName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.EmailAddresses">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.PhysicalAddresses">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.PhoneNumbers">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.AssistantName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.Birthday">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.BirthdaySpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.BusinessHomePage">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.Children">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.Companies">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.ContactSource">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.ContactSourceSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.Department">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.Generation">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.ImAddresses">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.JobTitle">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.Manager">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.Mileage">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.OfficeLocation">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.PostalAddressIndex">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.PostalAddressIndexSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.Profession">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.SpouseName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.Surname">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.WeddingAnniversary">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactItemType.WeddingAnniversarySpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FileAsMappingType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.FileAsMappingType.None">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.FileAsMappingType.LastCommaFirst">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.FileAsMappingType.FirstSpaceLast">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.FileAsMappingType.Company">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.FileAsMappingType.LastCommaFirstCompany">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.FileAsMappingType.CompanyLastFirst">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.FileAsMappingType.LastFirst">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.FileAsMappingType.LastFirstCompany">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.FileAsMappingType.CompanyLastCommaFirst">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.FileAsMappingType.LastFirstSuffix">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.FileAsMappingType.LastSpaceFirstCompany">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.FileAsMappingType.CompanyLastSpaceFirst">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.FileAsMappingType.LastSpaceFirst">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CompleteNameType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CompleteNameType.Title">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CompleteNameType.FirstName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CompleteNameType.MiddleName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CompleteNameType.LastName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CompleteNameType.Suffix">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CompleteNameType.Initials">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CompleteNameType.FullName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CompleteNameType.Nickname">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CompleteNameType.YomiFirstName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CompleteNameType.YomiLastName">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.EmailAddressDictionaryEntryType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.EmailAddressDictionaryEntryType.Key">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.EmailAddressDictionaryEntryType.Value">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.EmailAddressKeyType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.EmailAddressKeyType.EmailAddress1">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.EmailAddressKeyType.EmailAddress2">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.EmailAddressKeyType.EmailAddress3">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.PhysicalAddressDictionaryEntryType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PhysicalAddressDictionaryEntryType.Street">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PhysicalAddressDictionaryEntryType.City">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PhysicalAddressDictionaryEntryType.State">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PhysicalAddressDictionaryEntryType.CountryOrRegion">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PhysicalAddressDictionaryEntryType.PostalCode">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PhysicalAddressDictionaryEntryType.Key">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.PhysicalAddressKeyType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhysicalAddressKeyType.Business">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhysicalAddressKeyType.Home">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhysicalAddressKeyType.Other">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.PhoneNumberDictionaryEntryType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PhoneNumberDictionaryEntryType.Key">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PhoneNumberDictionaryEntryType.Value">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.PhoneNumberKeyType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhoneNumberKeyType.AssistantPhone">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhoneNumberKeyType.BusinessFax">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhoneNumberKeyType.BusinessPhone">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhoneNumberKeyType.BusinessPhone2">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhoneNumberKeyType.Callback">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhoneNumberKeyType.CarPhone">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhoneNumberKeyType.CompanyMainPhone">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhoneNumberKeyType.HomeFax">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhoneNumberKeyType.HomePhone">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhoneNumberKeyType.HomePhone2">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhoneNumberKeyType.Isdn">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhoneNumberKeyType.MobilePhone">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhoneNumberKeyType.OtherFax">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhoneNumberKeyType.OtherTelephone">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhoneNumberKeyType.Pager">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhoneNumberKeyType.PrimaryPhone">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhoneNumberKeyType.RadioPhone">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhoneNumberKeyType.Telex">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhoneNumberKeyType.TtyTddPhone">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ContactSourceType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ContactSourceType.ActiveDirectory">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ContactSourceType.Store">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ImAddressDictionaryEntryType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ImAddressDictionaryEntryType.Key">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ImAddressDictionaryEntryType.Value">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ImAddressKeyType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ImAddressKeyType.ImAddress1">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ImAddressKeyType.ImAddress2">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ImAddressKeyType.ImAddress3">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.PhysicalAddressIndexType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhysicalAddressIndexType.None">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhysicalAddressIndexType.Business">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhysicalAddressIndexType.Home">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PhysicalAddressIndexType.Other">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MeetingCancellationMessageType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MeetingMessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingMessageType.AssociatedCalendarItemId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingMessageType.IsDelegated">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingMessageType.IsDelegatedSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingMessageType.IsOutOfDate">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingMessageType.IsOutOfDateSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingMessageType.HasBeenProcessed">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingMessageType.HasBeenProcessedSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingMessageType.ResponseType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingMessageType.ResponseTypeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingMessageType.UID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingMessageType.RecurrenceId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingMessageType.RecurrenceIdSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingMessageType.DateTimeStamp">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingMessageType.DateTimeStampSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MeetingResponseMessageType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MeetingRequestMessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.MeetingRequestType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.MeetingRequestTypeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.IntendedFreeBusyStatus">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.IntendedFreeBusyStatusSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.Start">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.StartSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.End">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.EndSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.OriginalStart">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.OriginalStartSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.IsAllDayEvent">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.IsAllDayEventSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.LegacyFreeBusyStatus">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.LegacyFreeBusyStatusSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.Location">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.When">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.IsMeeting">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.IsMeetingSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.IsCancelled">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.IsCancelledSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.IsRecurring">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.IsRecurringSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.MeetingRequestWasSent">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.MeetingRequestWasSentSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.CalendarItemType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.CalendarItemTypeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.MyResponseType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.MyResponseTypeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.Organizer">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.RequiredAttendees">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.OptionalAttendees">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.Resources">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.ConflictingMeetingCount">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.ConflictingMeetingCountSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.AdjacentMeetingCount">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.AdjacentMeetingCountSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.ConflictingMeetings">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.AdjacentMeetings">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.Duration">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.TimeZone">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.AppointmentReplyTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.AppointmentReplyTimeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.AppointmentSequenceNumber">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.AppointmentSequenceNumberSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.AppointmentState">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.AppointmentStateSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.Recurrence">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.FirstOccurrence">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.LastOccurrence">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.ModifiedOccurrences">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.DeletedOccurrences">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.MeetingTimeZone">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.ConferenceType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.ConferenceTypeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.AllowNewTimeProposal">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.AllowNewTimeProposalSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.IsOnlineMeeting">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.IsOnlineMeetingSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.MeetingWorkspaceUrl">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MeetingRequestMessageType.NetShowUrl">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MeetingRequestTypeType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MeetingRequestTypeType.None">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MeetingRequestTypeType.FullUpdate">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MeetingRequestTypeType.InformationalUpdate">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MeetingRequestTypeType.NewMeetingRequest">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MeetingRequestTypeType.Outdated">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MeetingRequestTypeType.SilentUpdate">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MeetingRequestTypeType.PrincipalWantsCopy">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.RecurrenceType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.RecurrenceType.Item">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.RecurrenceType.Item1">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AbsoluteMonthlyRecurrencePatternType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.IntervalRecurrencePatternBaseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.RecurrencePatternBaseType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.IntervalRecurrencePatternBaseType.Interval">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AbsoluteMonthlyRecurrencePatternType.DayOfMonth">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AbsoluteYearlyRecurrencePatternType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AbsoluteYearlyRecurrencePatternType.DayOfMonth">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AbsoluteYearlyRecurrencePatternType.Month">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MonthNamesType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MonthNamesType.January">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MonthNamesType.February">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MonthNamesType.March">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MonthNamesType.April">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MonthNamesType.May">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MonthNamesType.June">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MonthNamesType.July">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MonthNamesType.August">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MonthNamesType.September">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MonthNamesType.October">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MonthNamesType.November">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MonthNamesType.December">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.RelativeYearlyRecurrencePatternType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.RelativeYearlyRecurrencePatternType.DaysOfWeek">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.RelativeYearlyRecurrencePatternType.DayOfWeekIndex">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.RelativeYearlyRecurrencePatternType.Month">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DayOfWeekIndexType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DayOfWeekIndexType.First">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DayOfWeekIndexType.Second">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DayOfWeekIndexType.Third">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DayOfWeekIndexType.Fourth">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DayOfWeekIndexType.Last">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DailyRecurrencePatternType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.WeeklyRecurrencePatternType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.WeeklyRecurrencePatternType.DaysOfWeek">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.RelativeMonthlyRecurrencePatternType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.RelativeMonthlyRecurrencePatternType.DaysOfWeek">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.RelativeMonthlyRecurrencePatternType.DayOfWeekIndex">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DayOfWeekType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DayOfWeekType.Sunday">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DayOfWeekType.Monday">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DayOfWeekType.Tuesday">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DayOfWeekType.Wednesday">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DayOfWeekType.Thursday">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DayOfWeekType.Friday">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DayOfWeekType.Saturday">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DayOfWeekType.Day">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DayOfWeekType.Weekday">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DayOfWeekType.WeekendDay">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.RegeneratingPatternBaseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.YearlyRegeneratingPatternType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MonthlyRegeneratingPatternType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.WeeklyRegeneratingPatternType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DailyRegeneratingPatternType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.EndDateRecurrenceRangeType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.RecurrenceRangeBaseType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.RecurrenceRangeBaseType.StartDate">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.EndDateRecurrenceRangeType.EndDate">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.NumberedRecurrenceRangeType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.NumberedRecurrenceRangeType.NumberOfOccurrences">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.NoEndRecurrenceRangeType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.OccurrenceInfoType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.OccurrenceInfoType.ItemId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.OccurrenceInfoType.Start">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.OccurrenceInfoType.End">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.OccurrenceInfoType.OriginalStart">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DeletedOccurrenceInfoType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DeletedOccurrenceInfoType.Start">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.TimeZoneType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TimeZoneType.BaseOffset">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TimeZoneType.Standard">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TimeZoneType.Daylight">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TimeZoneType.TimeZoneName">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.TimeChangeType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TimeChangeType.Offset">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TimeChangeType.Item">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TimeChangeType.Time">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TimeChangeType.TimeZoneName">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.PostItemType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PostItemType.ConversationIndex">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PostItemType.ConversationTopic">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PostItemType.From">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PostItemType.InternetMessageId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PostItemType.IsRead">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PostItemType.IsReadSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PostItemType.PostedTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PostItemType.PostedTimeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PostItemType.References">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PostItemType.Sender">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.TaskType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.ActualWork">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.ActualWorkSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.AssignedTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.AssignedTimeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.BillingInformation">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.ChangeCount">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.ChangeCountSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.Companies">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.CompleteDate">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.CompleteDateSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.Contacts">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.DelegationState">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.DelegationStateSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.Delegator">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.DueDate">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.DueDateSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.IsAssignmentEditable">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.IsAssignmentEditableSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.IsComplete">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.IsCompleteSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.IsRecurring">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.IsRecurringSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.IsTeamTask">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.IsTeamTaskSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.Mileage">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.Owner">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.PercentComplete">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.PercentCompleteSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.Recurrence">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.StartDate">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.StartDateSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.Status">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.StatusSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.StatusDescription">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.TotalWork">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskType.TotalWorkSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.TaskDelegateStateType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.TaskDelegateStateType.NoMatch">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.TaskDelegateStateType.OwnNew">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.TaskDelegateStateType.Owned">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.TaskDelegateStateType.Accepted">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.TaskDelegateStateType.Declined">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.TaskDelegateStateType.Max">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.TaskRecurrenceType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskRecurrenceType.Item">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TaskRecurrenceType.Item1">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.TaskStatusType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.TaskStatusType.NotStarted">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.TaskStatusType.InProgress">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.TaskStatusType.Completed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.TaskStatusType.WaitingOnOthers">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.TaskStatusType.Deferred">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ImportanceChoicesType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ImportanceChoicesType.Low">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ImportanceChoicesType.Normal">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ImportanceChoicesType.High">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.InternetHeaderType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.InternetHeaderType.HeaderName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.InternetHeaderType.Value">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CancelCalendarItemType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SmartResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SmartResponseBaseType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SmartResponseType.NewBodyContent">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ForwardItemType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ReplyAllToItemType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ReplyToItemType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DeclineItemType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.PostReplyItemType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.PostReplyItemBaseType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PostReplyItemType.NewBodyContent">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.RemoveItemType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SuppressReadReceiptType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ReferenceItemResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.TentativelyAcceptItemType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ExtendedPropertyType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ExtendedPropertyType.ExtendedFieldURI">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ExtendedPropertyType.Item">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.PathToExtendedFieldType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.BasePathToElementType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PathToExtendedFieldType.DistinguishedPropertySetId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PathToExtendedFieldType.DistinguishedPropertySetIdSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PathToExtendedFieldType.PropertySetId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PathToExtendedFieldType.PropertyTag">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PathToExtendedFieldType.PropertyName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PathToExtendedFieldType.PropertyId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PathToExtendedFieldType.PropertyIdSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PathToExtendedFieldType.PropertyType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DistinguishedPropertySetType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedPropertySetType.Meeting">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedPropertySetType.Appointment">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedPropertySetType.Common">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedPropertySetType.PublicStrings">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedPropertySetType.Address">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedPropertySetType.InternetHeaders">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedPropertySetType.CalendarAssistant">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedPropertySetType.UnifiedMessaging">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DistinguishedPropertySetType.Task">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MapiPropertyTypeType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.ApplicationTime">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.ApplicationTimeArray">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.Binary">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.BinaryArray">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.Boolean">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.CLSID">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.CLSIDArray">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.Currency">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.CurrencyArray">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.Double">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.DoubleArray">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.Error">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.Float">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.FloatArray">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.Integer">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.IntegerArray">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.Long">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.LongArray">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.Null">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.Object">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.ObjectArray">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.Short">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.ShortArray">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.SystemTime">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.SystemTimeArray">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.String">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MapiPropertyTypeType.StringArray">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.PathToExceptionFieldType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PathToExceptionFieldType.FieldURI">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ExceptionPropertyURIType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ExceptionPropertyURIType.attachmentName">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ExceptionPropertyURIType.attachmentContentType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ExceptionPropertyURIType.attachmentContent">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ExceptionPropertyURIType.recurrenceMonth">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ExceptionPropertyURIType.recurrenceDayOfWeekIndex">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ExceptionPropertyURIType.recurrenceDaysOfWeek">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ExceptionPropertyURIType.recurrenceDayOfMonth">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ExceptionPropertyURIType.recurrenceInterval">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ExceptionPropertyURIType.recurrenceNumberOfOccurrences">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ExceptionPropertyURIType.timezoneOffset">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.PathToIndexedFieldType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PathToIndexedFieldType.FieldURI">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PathToIndexedFieldType.FieldIndex">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DictionaryURIType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DictionaryURIType.itemInternetMessageHeader">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DictionaryURIType.contactsImAddress">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DictionaryURIType.contactsPhysicalAddressStreet">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DictionaryURIType.contactsPhysicalAddressCity">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DictionaryURIType.contactsPhysicalAddressState">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DictionaryURIType.contactsPhysicalAddressCountryOrRegion">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DictionaryURIType.contactsPhysicalAddressPostalCode">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DictionaryURIType.contactsPhoneNumber">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DictionaryURIType.contactsEmailAddress">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.PathToUnindexedFieldType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PathToUnindexedFieldType.FieldURI">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.UnindexedFieldURIType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.folderFolderId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.folderParentFolderId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.folderDisplayName">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.folderUnreadCount">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.folderTotalCount">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.folderChildFolderCount">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.folderFolderClass">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.folderSearchParameters">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.folderManagedFolderInformation">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.folderPermissionSet">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.folderEffectiveRights">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemItemId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemParentFolderId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemItemClass">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemMimeContent">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemAttachments">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemSubject">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemDateTimeReceived">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemSize">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemCategories">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemHasAttachments">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemImportance">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemInReplyTo">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemInternetMessageHeaders">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemIsDraft">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemIsFromMe">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemIsResend">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemIsSubmitted">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemIsUnmodified">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemDateTimeSent">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemDateTimeCreated">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemBody">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemResponseObjects">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemSensitivity">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemReminderDueBy">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemReminderIsSet">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemReminderMinutesBeforeStart">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemDisplayTo">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemDisplayCc">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemCulture">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemEffectiveRights">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemLastModifiedName">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.itemLastModifiedTime">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.messageConversationIndex">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.messageConversationTopic">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.messageInternetMessageId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.messageIsRead">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.messageIsResponseRequested">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.messageIsReadReceiptRequested">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.messageIsDeliveryReceiptRequested">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.messageReceivedBy">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.messageReceivedRepresenting">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.messageReferences">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.messageReplyTo">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.messageFrom">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.messageSender">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.messageToRecipients">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.messageCcRecipients">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.messageBccRecipients">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.meetingAssociatedCalendarItemId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.meetingIsDelegated">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.meetingIsOutOfDate">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.meetingHasBeenProcessed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.meetingResponseType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.meetingRequestMeetingRequestType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.meetingRequestIntendedFreeBusyStatus">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarStart">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarEnd">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarOriginalStart">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarIsAllDayEvent">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarLegacyFreeBusyStatus">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarLocation">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarWhen">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarIsMeeting">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarIsCancelled">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarIsRecurring">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarMeetingRequestWasSent">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarIsResponseRequested">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarCalendarItemType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarMyResponseType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarOrganizer">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarRequiredAttendees">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarOptionalAttendees">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarResources">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarConflictingMeetingCount">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarAdjacentMeetingCount">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarConflictingMeetings">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarAdjacentMeetings">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarDuration">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarTimeZone">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarAppointmentReplyTime">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarAppointmentSequenceNumber">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarAppointmentState">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarRecurrence">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarFirstOccurrence">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarLastOccurrence">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarModifiedOccurrences">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarDeletedOccurrences">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarMeetingTimeZone">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarConferenceType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarAllowNewTimeProposal">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarIsOnlineMeeting">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarMeetingWorkspaceUrl">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarNetShowUrl">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarUID">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarRecurrenceId">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.calendarDateTimeStamp">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.taskActualWork">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.taskAssignedTime">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.taskBillingInformation">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.taskChangeCount">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.taskCompanies">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.taskCompleteDate">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.taskContacts">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.taskDelegationState">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.taskDelegator">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.taskDueDate">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.taskIsAssignmentEditable">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.taskIsComplete">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.taskIsRecurring">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.taskIsTeamTask">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.taskMileage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.taskOwner">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.taskPercentComplete">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.taskRecurrence">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.taskStartDate">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.taskStatus">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.taskStatusDescription">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.taskTotalWork">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsAssistantName">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsBirthday">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsBusinessHomePage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsChildren">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsCompanies">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsCompanyName">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsCompleteName">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsContactSource">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsCulture">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsDepartment">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsDisplayName">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsEmailAddresses">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsFileAs">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsFileAsMapping">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsGeneration">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsGivenName">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsImAddresses">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsInitials">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsJobTitle">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsManager">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsMiddleName">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsMileage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsNickname">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsOfficeLocation">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsPhoneNumbers">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsPhysicalAddresses">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsPostalAddressIndex">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsProfession">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsSpouseName">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsSurname">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.contactsWeddingAnniversary">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.UnindexedFieldURIType.postitemPostedTime">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.NonEmptyArrayOfPropertyValuesType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.NonEmptyArrayOfPropertyValuesType.Items">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.EffectiveRightsType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.EffectiveRightsType.CreateAssociated">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.EffectiveRightsType.CreateContents">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.EffectiveRightsType.CreateHierarchy">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.EffectiveRightsType.Delete">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.EffectiveRightsType.Modify">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.EffectiveRightsType.Read">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DistributionListType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DistributionListType.DisplayName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DistributionListType.FileAs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DistributionListType.ContactSource">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DistributionListType.ContactSourceSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SyncFolderItemsDeleteType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderItemsDeleteType.ItemId">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SyncFolderItemsReadFlagType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderItemsReadFlagType.ItemId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderItemsReadFlagType.IsRead">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ItemsChoiceType2">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType2.Create">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType2.Delete">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType2.ReadFlagChange">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType2.Update">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SyncFolderHierarchyResponseMessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderHierarchyResponseMessageType.SyncState">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderHierarchyResponseMessageType.IncludesLastFolderInRange">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderHierarchyResponseMessageType.IncludesLastFolderInRangeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderHierarchyResponseMessageType.Changes">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SyncFolderHierarchyChangesType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderHierarchyChangesType.Items">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderHierarchyChangesType.ItemsElementName">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SyncFolderHierarchyCreateOrUpdateType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderHierarchyCreateOrUpdateType.Item">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CalendarFolderType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.BaseFolderType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseFolderType.FolderId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseFolderType.ParentFolderId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseFolderType.FolderClass">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseFolderType.DisplayName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseFolderType.TotalCount">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseFolderType.TotalCountSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseFolderType.ChildFolderCount">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseFolderType.ChildFolderCountSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseFolderType.ExtendedProperty">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseFolderType.ManagedFolderInformation">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseFolderType.EffectiveRights">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarFolderType.PermissionSet">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CalendarPermissionSetType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarPermissionSetType.CalendarPermissions">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarPermissionSetType.UnknownEntries">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CalendarPermissionType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.BasePermissionType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BasePermissionType.UserId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BasePermissionType.CanCreateItems">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BasePermissionType.CanCreateItemsSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BasePermissionType.CanCreateSubFolders">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BasePermissionType.CanCreateSubFoldersSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BasePermissionType.IsFolderOwner">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BasePermissionType.IsFolderOwnerSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BasePermissionType.IsFolderVisible">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BasePermissionType.IsFolderVisibleSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BasePermissionType.IsFolderContact">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BasePermissionType.IsFolderContactSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BasePermissionType.EditItems">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BasePermissionType.EditItemsSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BasePermissionType.DeleteItems">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BasePermissionType.DeleteItemsSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarPermissionType.ReadItems">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarPermissionType.ReadItemsSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarPermissionType.CalendarPermissionLevel">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CalendarPermissionReadAccessType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarPermissionReadAccessType.None">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarPermissionReadAccessType.TimeOnly">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarPermissionReadAccessType.TimeAndSubjectAndLocation">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarPermissionReadAccessType.FullDetails">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CalendarPermissionLevelType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarPermissionLevelType.None">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarPermissionLevelType.Owner">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarPermissionLevelType.PublishingEditor">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarPermissionLevelType.Editor">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarPermissionLevelType.PublishingAuthor">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarPermissionLevelType.Author">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarPermissionLevelType.NoneditingAuthor">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarPermissionLevelType.Reviewer">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarPermissionLevelType.Contributor">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarPermissionLevelType.FreeBusyTimeOnly">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarPermissionLevelType.FreeBusyTimeAndSubjectAndLocation">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarPermissionLevelType.Custom">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.PermissionActionType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PermissionActionType.None">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PermissionActionType.Owned">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PermissionActionType.All">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.PermissionType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PermissionType.ReadItems">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PermissionType.ReadItemsSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PermissionType.PermissionLevel">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.PermissionReadAccessType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PermissionReadAccessType.None">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PermissionReadAccessType.FullDetails">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.PermissionLevelType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PermissionLevelType.None">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PermissionLevelType.Owner">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PermissionLevelType.PublishingEditor">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PermissionLevelType.Editor">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PermissionLevelType.PublishingAuthor">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PermissionLevelType.Author">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PermissionLevelType.NoneditingAuthor">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PermissionLevelType.Reviewer">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PermissionLevelType.Contributor">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.PermissionLevelType.Custom">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ManagedFolderInformationType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ManagedFolderInformationType.CanDelete">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ManagedFolderInformationType.CanDeleteSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ManagedFolderInformationType.CanRenameOrMove">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ManagedFolderInformationType.CanRenameOrMoveSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ManagedFolderInformationType.MustDisplayComment">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ManagedFolderInformationType.MustDisplayCommentSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ManagedFolderInformationType.HasQuota">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ManagedFolderInformationType.HasQuotaSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ManagedFolderInformationType.IsManagedFoldersRoot">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ManagedFolderInformationType.IsManagedFoldersRootSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ManagedFolderInformationType.ManagedFolderId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ManagedFolderInformationType.Comment">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ManagedFolderInformationType.StorageQuota">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ManagedFolderInformationType.StorageQuotaSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ManagedFolderInformationType.FolderSize">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ManagedFolderInformationType.FolderSizeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ManagedFolderInformationType.HomePage">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ContactsFolderType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactsFolderType.PermissionSet">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.PermissionSetType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PermissionSetType.Permissions">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PermissionSetType.UnknownEntries">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FolderType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FolderType.PermissionSet">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FolderType.UnreadCount">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FolderType.UnreadCountSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.TasksFolderType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SearchFolderType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SearchFolderType.SearchParameters">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SearchParametersType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SearchParametersType.Restriction">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SearchParametersType.BaseFolderIds">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SearchParametersType.Traversal">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SearchParametersType.TraversalSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.RestrictionType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.RestrictionType.Item">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AndType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MultipleOperandBooleanExpressionType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SearchExpressionType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MultipleOperandBooleanExpressionType.Items">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ContainsExpressionType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContainsExpressionType.Item">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContainsExpressionType.Constant">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContainsExpressionType.ContainmentMode">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContainsExpressionType.ContainmentModeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContainsExpressionType.ContainmentComparison">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContainsExpressionType.ContainmentComparisonSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ConstantValueType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ConstantValueType.Value">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ContainmentModeType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ContainmentModeType.FullString">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ContainmentModeType.Prefixed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ContainmentModeType.Substring">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ContainmentModeType.PrefixOnWords">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ContainmentModeType.ExactPhrase">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ContainmentComparisonType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ContainmentComparisonType.Exact">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ContainmentComparisonType.IgnoreCase">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ContainmentComparisonType.IgnoreNonSpacingCharacters">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ContainmentComparisonType.Loose">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ContainmentComparisonType.IgnoreCaseAndNonSpacingCharacters">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ContainmentComparisonType.LooseAndIgnoreCase">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ContainmentComparisonType.LooseAndIgnoreNonSpace">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ContainmentComparisonType.LooseAndIgnoreCaseAndIgnoreNonSpace">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.NotType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.NotType.Item">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ExcludesType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ExcludesType.Item">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ExcludesType.Bitmask">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ExcludesValueType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ExcludesValueType.Value">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ExistsType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ExistsType.Item">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.IsEqualToType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.TwoOperandExpressionType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TwoOperandExpressionType.Item">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TwoOperandExpressionType.FieldURIOrConstant">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FieldURIOrConstantType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FieldURIOrConstantType.Item">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.IsLessThanOrEqualToType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.IsLessThanType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.IsGreaterThanOrEqualToType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.IsGreaterThanType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.IsNotEqualToType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.OrType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SearchFolderTraversalType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.SearchFolderTraversalType.Shallow">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.SearchFolderTraversalType.Deep">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SyncFolderHierarchyDeleteType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderHierarchyDeleteType.FolderId">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ItemsChoiceType1">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType1.Create">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType1.Delete">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType1.Update">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SendNotificationResponseMessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SendNotificationResponseMessageType.Notification">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.NotificationType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.NotificationType.SubscriptionId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.NotificationType.PreviousWatermark">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.NotificationType.MoreEvents">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.NotificationType.Items">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.NotificationType.ItemsElementName">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MovedCopiedEventType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.BaseObjectChangedEventType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.BaseNotificationEventType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseNotificationEventType.Watermark">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseObjectChangedEventType.TimeStamp">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseObjectChangedEventType.Item">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseObjectChangedEventType.ParentFolderId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MovedCopiedEventType.Item1">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MovedCopiedEventType.OldParentFolderId">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ModifiedEventType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ModifiedEventType.UnreadCount">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ModifiedEventType.UnreadCountSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ItemsChoiceType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType.CopiedEvent">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType.CreatedEvent">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType.DeletedEvent">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType.ModifiedEvent">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType.MovedEvent">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType.NewMailEvent">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType.StatusEvent">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetEventsResponseMessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetEventsResponseMessageType.Notification">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SubscribeResponseMessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SubscribeResponseMessageType.SubscriptionId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SubscribeResponseMessageType.Watermark">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ExpandDLResponseMessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ExpandDLResponseMessageType.DLExpansion">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ExpandDLResponseMessageType.IndexedPagingOffset">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ExpandDLResponseMessageType.IndexedPagingOffsetSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ExpandDLResponseMessageType.NumeratorOffset">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ExpandDLResponseMessageType.NumeratorOffsetSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ExpandDLResponseMessageType.AbsoluteDenominator">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ExpandDLResponseMessageType.AbsoluteDenominatorSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ExpandDLResponseMessageType.IncludesLastItemInRange">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ExpandDLResponseMessageType.IncludesLastItemInRangeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ExpandDLResponseMessageType.TotalItemsInView">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ExpandDLResponseMessageType.TotalItemsInViewSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ArrayOfDLExpansionType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfDLExpansionType.Mailbox">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfDLExpansionType.IndexedPagingOffset">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfDLExpansionType.IndexedPagingOffsetSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfDLExpansionType.NumeratorOffset">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfDLExpansionType.NumeratorOffsetSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfDLExpansionType.AbsoluteDenominator">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfDLExpansionType.AbsoluteDenominatorSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfDLExpansionType.IncludesLastItemInRange">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfDLExpansionType.IncludesLastItemInRangeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfDLExpansionType.TotalItemsInView">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfDLExpansionType.TotalItemsInViewSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ResolveNamesResponseMessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ResolveNamesResponseMessageType.ResolutionSet">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ArrayOfResolutionType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfResolutionType.Resolution">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfResolutionType.IndexedPagingOffset">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfResolutionType.IndexedPagingOffsetSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfResolutionType.NumeratorOffset">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfResolutionType.NumeratorOffsetSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfResolutionType.AbsoluteDenominator">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfResolutionType.AbsoluteDenominatorSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfResolutionType.IncludesLastItemInRange">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfResolutionType.IncludesLastItemInRangeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfResolutionType.TotalItemsInView">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfResolutionType.TotalItemsInViewSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ResolutionType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ResolutionType.Mailbox">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ResolutionType.Contact">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FindItemResponseMessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindItemResponseMessageType.RootFolder">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FindItemParentType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindItemParentType.Item">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindItemParentType.IndexedPagingOffset">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindItemParentType.IndexedPagingOffsetSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindItemParentType.NumeratorOffset">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindItemParentType.NumeratorOffsetSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindItemParentType.AbsoluteDenominator">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindItemParentType.AbsoluteDenominatorSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindItemParentType.IncludesLastItemInRange">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindItemParentType.IncludesLastItemInRangeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindItemParentType.TotalItemsInView">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindItemParentType.TotalItemsInViewSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ArrayOfGroupedItemsType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfGroupedItemsType.Items">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GroupedItemsType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GroupedItemsType.GroupIndex">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GroupedItemsType.Items">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ArrayOfRealItemsType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfRealItemsType.Items">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DeleteAttachmentResponseMessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DeleteAttachmentResponseMessageType.RootItemId">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AttachmentInfoResponseMessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AttachmentInfoResponseMessageType.Attachments">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ItemInfoResponseMessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemInfoResponseMessageType.Items">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.UpdateItemResponseMessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UpdateItemResponseMessageType.ConflictResults">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ConflictResultsType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ConflictResultsType.Count">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FindFolderResponseMessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindFolderResponseMessageType.RootFolder">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FindFolderParentType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindFolderParentType.Folders">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindFolderParentType.IndexedPagingOffset">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindFolderParentType.IndexedPagingOffsetSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindFolderParentType.NumeratorOffset">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindFolderParentType.NumeratorOffsetSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindFolderParentType.AbsoluteDenominator">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindFolderParentType.AbsoluteDenominatorSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindFolderParentType.IncludesLastItemInRange">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindFolderParentType.IncludesLastItemInRangeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindFolderParentType.TotalItemsInView">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindFolderParentType.TotalItemsInViewSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FolderInfoResponseMessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FolderInfoResponseMessageType.Folders">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetUserOofSettingsResponse">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetUserOofSettingsResponse.ResponseMessage">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetUserOofSettingsResponse.OofSettings">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetUserOofSettingsResponse.AllowExternalOof">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetUserOofSettingsResponse.AllowExternalOofSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.UserOofSettings">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UserOofSettings.OofState">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UserOofSettings.ExternalAudience">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UserOofSettings.Duration">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UserOofSettings.InternalReply">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UserOofSettings.ExternalReply">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.OofState">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.OofState.Disabled">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.OofState.Enabled">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.OofState.Scheduled">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ExternalAudience">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ExternalAudience.None">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ExternalAudience.Known">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ExternalAudience.All">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.Duration">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.Duration.StartTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.Duration.EndTime">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ReplyBody">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ReplyBody.Message">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ReplyBody.lang">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AttendeeConflictData">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GroupAttendeeConflictData">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GroupAttendeeConflictData.NumberOfMembers">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GroupAttendeeConflictData.NumberOfMembersAvailable">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GroupAttendeeConflictData.NumberOfMembersWithConflict">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GroupAttendeeConflictData.NumberOfMembersWithNoData">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.IndividualAttendeeConflictData">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.IndividualAttendeeConflictData.BusyType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.TooBigGroupAttendeeConflictData">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.UnknownAttendeeConflictData">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.Suggestion">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.Suggestion.MeetingTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.Suggestion.IsWorkTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.Suggestion.SuggestionQuality">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.Suggestion.AttendeeConflictDataArray">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SuggestionQuality">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.SuggestionQuality.Excellent">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.SuggestionQuality.Good">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.SuggestionQuality.Fair">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.SuggestionQuality.Poor">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SuggestionDayResult">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SuggestionDayResult.Date">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SuggestionDayResult.DayQuality">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SuggestionDayResult.SuggestionArray">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SuggestionsResponseType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SuggestionsResponseType.ResponseMessage">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SuggestionsResponseType.SuggestionDayResultArray">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.WorkingPeriod">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.WorkingPeriod.DayOfWeek">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.WorkingPeriod.StartTimeInMinutes">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.WorkingPeriod.EndTimeInMinutes">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.WorkingHours">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.WorkingHours.TimeZone">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.WorkingHours.WorkingPeriodArray">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SerializableTimeZone">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SerializableTimeZone.Bias">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SerializableTimeZone.StandardTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SerializableTimeZone.DaylightTime">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SerializableTimeZoneTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SerializableTimeZoneTime.Bias">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SerializableTimeZoneTime.Time">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SerializableTimeZoneTime.DayOrder">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SerializableTimeZoneTime.Month">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SerializableTimeZoneTime.DayOfWeek">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SerializableTimeZoneTime.Year">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CalendarEventDetails">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarEventDetails.ID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarEventDetails.Subject">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarEventDetails.Location">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarEventDetails.IsMeeting">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarEventDetails.IsRecurring">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarEventDetails.IsException">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarEventDetails.IsReminderSet">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarEventDetails.IsPrivate">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CalendarEvent">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarEvent.StartTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarEvent.EndTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarEvent.BusyType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarEvent.CalendarEventDetails">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FreeBusyView">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FreeBusyView.FreeBusyViewType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FreeBusyView.MergedFreeBusy">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FreeBusyView.CalendarEventArray">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FreeBusyView.WorkingHours">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FreeBusyViewType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.FreeBusyViewType.None">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.FreeBusyViewType.MergedOnly">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.FreeBusyViewType.FreeBusy">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.FreeBusyViewType.FreeBusyMerged">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.FreeBusyViewType.Detailed">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.FreeBusyViewType.DetailedMerged">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FreeBusyResponseType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FreeBusyResponseType.ResponseMessage">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FreeBusyResponseType.FreeBusyView">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetUserAvailabilityResponseType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetUserAvailabilityResponseType.FreeBusyResponseArray">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetUserAvailabilityResponseType.SuggestionsResponse">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.TimeZoneDefinitionType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TimeZoneDefinitionType.Id">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ArrayOfResponseMessagesType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfResponseMessagesType.Items">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ArrayOfResponseMessagesType.ItemsElementName">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ItemsChoiceType3">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.ConvertIdResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.CopyFolderResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.CopyItemResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.CreateAttachmentResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.CreateFolderResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.CreateItemResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.CreateManagedFolderResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.DeleteAttachmentResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.DeleteFolderResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.DeleteItemResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.ExpandDLResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.FindFolderResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.FindItemResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.GetAttachmentResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.GetEventsResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.GetFolderResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.GetItemResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.MoveFolderResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.MoveItemResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.ResolveNamesResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.SendItemResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.SendNotificationResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.SubscribeResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.SyncFolderHierarchyResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.SyncFolderItemsResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.UnsubscribeResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.UpdateFolderResponseMessage">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemsChoiceType3.UpdateItemResponseMessage">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.BaseResponseMessageType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseResponseMessageType.ResponseMessages">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ConvertIdResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SyncFolderItemsResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SyncFolderHierarchyResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SendNotificationResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetEventsResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.UnsubscribeResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SubscribeResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CreateManagedFolderResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ExpandDLResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ResolveNamesResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FindItemResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DeleteItemResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CopyItemResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MoveItemResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetItemResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.UpdateItemResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CreateItemResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetAttachmentResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DeleteAttachmentResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CreateAttachmentResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SendItemResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CopyFolderResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MoveFolderResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.UpdateFolderResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetFolderResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CreateFolderResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DeleteFolderResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FindFolderResponseType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SuggestionsViewOptionsType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SuggestionsViewOptionsType.GoodThreshold">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SuggestionsViewOptionsType.GoodThresholdSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SuggestionsViewOptionsType.MaximumResultsByDay">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SuggestionsViewOptionsType.MaximumResultsByDaySpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SuggestionsViewOptionsType.MaximumNonWorkHourResultsByDay">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SuggestionsViewOptionsType.MaximumNonWorkHourResultsByDaySpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SuggestionsViewOptionsType.MeetingDurationInMinutes">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SuggestionsViewOptionsType.MeetingDurationInMinutesSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SuggestionsViewOptionsType.MinimumSuggestionQuality">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SuggestionsViewOptionsType.MinimumSuggestionQualitySpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SuggestionsViewOptionsType.DetailedSuggestionsWindow">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SuggestionsViewOptionsType.CurrentMeetingTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SuggestionsViewOptionsType.CurrentMeetingTimeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SuggestionsViewOptionsType.GlobalObjectId">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FreeBusyViewOptionsType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FreeBusyViewOptionsType.TimeWindow">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FreeBusyViewOptionsType.MergedFreeBusyIntervalInMinutes">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FreeBusyViewOptionsType.MergedFreeBusyIntervalInMinutesSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FreeBusyViewOptionsType.RequestedView">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FreeBusyViewOptionsType.RequestedViewSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.EmailAddress">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.EmailAddress.Name">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.EmailAddress.Address">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.EmailAddress.RoutingType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MailboxData">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MailboxData.Email">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MailboxData.AttendeeType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MailboxData.ExcludeConflicts">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MailboxData.ExcludeConflictsSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MeetingAttendeeType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MeetingAttendeeType.Organizer">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MeetingAttendeeType.Required">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MeetingAttendeeType.Optional">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MeetingAttendeeType.Room">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MeetingAttendeeType.Resource">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.BaseSubscriptionRequestType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseSubscriptionRequestType.FolderIds">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseSubscriptionRequestType.EventTypes">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseSubscriptionRequestType.Watermark">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.NotificationEventTypeType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.NotificationEventTypeType.CopiedEvent">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.NotificationEventTypeType.CreatedEvent">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.NotificationEventTypeType.DeletedEvent">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.NotificationEventTypeType.ModifiedEvent">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.NotificationEventTypeType.MovedEvent">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.NotificationEventTypeType.NewMailEvent">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.PullSubscriptionRequestType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PullSubscriptionRequestType.Timeout">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.PushSubscriptionRequestType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PushSubscriptionRequestType.StatusFrequency">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.PushSubscriptionRequestType.URL">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AttachmentResponseShapeType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AttachmentResponseShapeType.IncludeMimeContent">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AttachmentResponseShapeType.IncludeMimeContentSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AttachmentResponseShapeType.BodyType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AttachmentResponseShapeType.BodyTypeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AttachmentResponseShapeType.AdditionalProperties">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.BodyTypeResponseType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.BodyTypeResponseType.Best">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.BodyTypeResponseType.HTML">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.BodyTypeResponseType.Text">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FieldOrderType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FieldOrderType.Item">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FieldOrderType.Order">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SortDirectionType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.SortDirectionType.Ascending">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.SortDirectionType.Descending">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AggregateOnType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AggregateOnType.Item">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AggregateOnType.Aggregate">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AggregateType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.AggregateType.Minimum">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.AggregateType.Maximum">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.BaseGroupByType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseGroupByType.Order">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DistinguishedGroupByType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DistinguishedGroupByType.StandardGroupBy">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.StandardGroupByType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.StandardGroupByType.ConversationTopic">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GroupByType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GroupByType.Item">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GroupByType.AggregateOn">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ItemChangeType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemChangeType.Item">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemChangeType.Updates">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AppendToItemFieldType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ItemChangeDescriptionType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ChangeDescriptionType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ChangeDescriptionType.Item">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AppendToItemFieldType.Item1">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FolderChangeDescriptionType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AppendToFolderFieldType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AppendToFolderFieldType.Item1">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DeleteFolderFieldType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SetFolderFieldType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SetFolderFieldType.Item1">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DeleteItemFieldType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SetItemFieldType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SetItemFieldType.Item1">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ItemResponseShapeType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemResponseShapeType.BaseShape">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemResponseShapeType.IncludeMimeContent">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemResponseShapeType.IncludeMimeContentSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemResponseShapeType.BodyType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemResponseShapeType.BodyTypeSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ItemResponseShapeType.AdditionalProperties">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DefaultShapeNamesType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DefaultShapeNamesType.IdOnly">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DefaultShapeNamesType.Default">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DefaultShapeNamesType.AllProperties">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FolderChangeType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FolderChangeType.Item">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FolderChangeType.Updates">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.BasePagingType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BasePagingType.MaxEntriesReturned">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BasePagingType.MaxEntriesReturnedSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ContactsViewType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactsViewType.InitialName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ContactsViewType.FinalName">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CalendarViewType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarViewType.StartDate">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CalendarViewType.EndDate">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FractionalPageViewType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FractionalPageViewType.Numerator">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FractionalPageViewType.Denominator">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.IndexedPageViewType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.IndexedPageViewType.Offset">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.IndexedPageViewType.BasePoint">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.IndexBasePointType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.IndexBasePointType.Beginning">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.IndexBasePointType.End">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.TargetFolderIdType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TargetFolderIdType.Item">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FolderResponseShapeType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FolderResponseShapeType.BaseShape">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FolderResponseShapeType.AdditionalProperties">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.BaseRequestType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.BaseDelegateType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseDelegateType.Mailbox">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.UpdateDelegateType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UpdateDelegateType.DelegateUsers">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UpdateDelegateType.DeliverMeetingRequests">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UpdateDelegateType.DeliverMeetingRequestsSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.RemoveDelegateType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.RemoveDelegateType.UserIds">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AddDelegateType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AddDelegateType.DelegateUsers">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AddDelegateType.DeliverMeetingRequests">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AddDelegateType.DeliverMeetingRequestsSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetDelegateType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetDelegateType.UserIds">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetDelegateType.IncludePermissions">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ConvertIdType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ConvertIdType.SourceIds">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ConvertIdType.DestinationFormat">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SetUserOofSettingsRequest">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SetUserOofSettingsRequest.Mailbox">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SetUserOofSettingsRequest.UserOofSettings">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetUserOofSettingsRequest">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetUserOofSettingsRequest.Mailbox">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetUserAvailabilityRequestType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetUserAvailabilityRequestType.TimeZone">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetUserAvailabilityRequestType.MailboxDataArray">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetUserAvailabilityRequestType.FreeBusyViewOptions">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetUserAvailabilityRequestType.SuggestionsViewOptions">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SyncFolderItemsType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderItemsType.ItemShape">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderItemsType.SyncFolderId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderItemsType.SyncState">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderItemsType.Ignore">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderItemsType.MaxChangesReturned">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SyncFolderHierarchyType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderHierarchyType.FolderShape">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderHierarchyType.SyncFolderId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderHierarchyType.SyncState">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetEventsType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetEventsType.SubscriptionId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetEventsType.Watermark">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.UnsubscribeType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UnsubscribeType.SubscriptionId">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SubscribeType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SubscribeType.Item">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CreateManagedFolderRequestType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CreateManagedFolderRequestType.FolderNames">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CreateManagedFolderRequestType.Mailbox">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ExpandDLType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ExpandDLType.Mailbox">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ResolveNamesType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ResolveNamesType.ParentFolderIds">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ResolveNamesType.UnresolvedEntry">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ResolveNamesType.ReturnFullContactData">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ResolveNamesType.SearchScope">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ResolveNamesSearchScopeType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResolveNamesSearchScopeType.ActiveDirectory">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResolveNamesSearchScopeType.ActiveDirectoryContacts">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResolveNamesSearchScopeType.Contacts">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ResolveNamesSearchScopeType.ContactsActiveDirectory">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetAttachmentType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetAttachmentType.AttachmentShape">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetAttachmentType.AttachmentIds">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DeleteAttachmentType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DeleteAttachmentType.AttachmentIds">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CreateAttachmentType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CreateAttachmentType.ParentItemId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CreateAttachmentType.Attachments">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FindItemType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindItemType.ItemShape">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindItemType.Item">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindItemType.Item1">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindItemType.Restriction">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindItemType.SortOrder">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindItemType.ParentFolderIds">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindItemType.Traversal">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ItemQueryTraversalType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemQueryTraversalType.Shallow">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ItemQueryTraversalType.SoftDeleted">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SendItemType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SendItemType.ItemIds">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SendItemType.SavedItemFolderId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SendItemType.SaveItemToFolder">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.BaseMoveCopyItemType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseMoveCopyItemType.ToFolderId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseMoveCopyItemType.ItemIds">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CopyItemType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MoveItemType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DeleteItemType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DeleteItemType.ItemIds">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DeleteItemType.DeleteType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DeleteItemType.SendMeetingCancellations">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DeleteItemType.SendMeetingCancellationsSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DeleteItemType.AffectedTaskOccurrences">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DeleteItemType.AffectedTaskOccurrencesSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DisposalType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DisposalType.HardDelete">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DisposalType.SoftDelete">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.DisposalType.MoveToDeletedItems">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CalendarItemCreateOrDeleteOperationType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarItemCreateOrDeleteOperationType.SendToNone">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarItemCreateOrDeleteOperationType.SendOnlyToAll">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarItemCreateOrDeleteOperationType.SendToAllAndSaveCopy">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AffectedTaskOccurrencesType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.AffectedTaskOccurrencesType.AllOccurrences">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.AffectedTaskOccurrencesType.SpecifiedOccurrenceOnly">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.UpdateItemType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UpdateItemType.SavedItemFolderId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UpdateItemType.ItemChanges">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UpdateItemType.ConflictResolution">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UpdateItemType.MessageDisposition">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UpdateItemType.MessageDispositionSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UpdateItemType.SendMeetingInvitationsOrCancellations">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UpdateItemType.SendMeetingInvitationsOrCancellationsSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ConflictResolutionType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ConflictResolutionType.NeverOverwrite">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ConflictResolutionType.AutoResolve">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ConflictResolutionType.AlwaysOverwrite">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MessageDispositionType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MessageDispositionType.SaveOnly">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MessageDispositionType.SendOnly">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.MessageDispositionType.SendAndSaveCopy">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CalendarItemUpdateOperationType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarItemUpdateOperationType.SendToNone">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarItemUpdateOperationType.SendOnlyToAll">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarItemUpdateOperationType.SendOnlyToChanged">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarItemUpdateOperationType.SendToAllAndSaveCopy">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.CalendarItemUpdateOperationType.SendToChangedAndSaveCopy">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CreateItemType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CreateItemType.SavedItemFolderId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CreateItemType.Items">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CreateItemType.MessageDisposition">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CreateItemType.MessageDispositionSpecified">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CreateItemType.SendMeetingInvitations">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CreateItemType.SendMeetingInvitationsSpecified">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetItemType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetItemType.ItemShape">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetItemType.ItemIds">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.UpdateFolderType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UpdateFolderType.FolderChanges">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.BaseMoveCopyFolderType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseMoveCopyFolderType.ToFolderId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.BaseMoveCopyFolderType.FolderIds">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CopyFolderType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MoveFolderType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DeleteFolderType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DeleteFolderType.FolderIds">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DeleteFolderType.DeleteType">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FindFolderType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindFolderType.FolderShape">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindFolderType.Item">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindFolderType.Restriction">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindFolderType.ParentFolderIds">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindFolderType.Traversal">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FolderQueryTraversalType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.FolderQueryTraversalType.Shallow">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.FolderQueryTraversalType.Deep">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.FolderQueryTraversalType.SoftDeleted">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CreateFolderType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CreateFolderType.ParentFolderId">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CreateFolderType.Folders">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetFolderType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetFolderType.FolderShape">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetFolderType.FolderIds">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SidAndAttributesType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SidAndAttributesType.SecurityIdentifier">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SidAndAttributesType.Attributes">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ConnectingSIDType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ConnectingSIDType.PrincipalName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ConnectingSIDType.SID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ConnectingSIDType.PrimarySmtpAddress">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.language">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.language.Text">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SerializedSecurityContextType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SerializedSecurityContextType.UserSid">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SerializedSecurityContextType.GroupSids">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SerializedSecurityContextType.RestrictedGroupSids">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SerializedSecurityContextType.PrimarySmtpAddress">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.TimeZoneContextType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TimeZoneContextType.TimeZoneDefinition">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.TimeZoneContextType.AnyAttr">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AvailabilityProxyRequestType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AvailabilityProxyRequestType.Text">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ExchangeImpersonationType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ExchangeImpersonationType.ConnectingSID">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.RequestServerVersion">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.RequestServerVersion.Version">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.RequestServerVersion.AnyAttr">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ExchangeVersionType">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ExchangeVersionType.Exchange2007">
            <remarks/>
        </member>
        <member name="F:LogicLayer.ExchangeWebServices.ExchangeVersionType.Exchange2007_SP1">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ResolveNamesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ResolveNamesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ResolveNamesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ExpandDLCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ExpandDLCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ExpandDLCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FindFolderCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FindFolderCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindFolderCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FindItemCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.FindItemCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.FindItemCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetFolderCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetFolderCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetFolderCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ConvertIdCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.ConvertIdCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.ConvertIdCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CreateFolderCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CreateFolderCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CreateFolderCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DeleteFolderCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DeleteFolderCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DeleteFolderCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.UpdateFolderCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.UpdateFolderCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UpdateFolderCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MoveFolderCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MoveFolderCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MoveFolderCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CopyFolderCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CopyFolderCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CopyFolderCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SubscribeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SubscribeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SubscribeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.UnsubscribeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.UnsubscribeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UnsubscribeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetEventsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetEventsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetEventsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SyncFolderHierarchyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SyncFolderHierarchyCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderHierarchyCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SyncFolderItemsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SyncFolderItemsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SyncFolderItemsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CreateManagedFolderCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CreateManagedFolderCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CreateManagedFolderCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetItemCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetItemCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetItemCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CreateItemCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CreateItemCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CreateItemCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DeleteItemCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DeleteItemCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DeleteItemCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.UpdateItemCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.UpdateItemCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UpdateItemCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SendItemCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SendItemCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SendItemCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MoveItemCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.MoveItemCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.MoveItemCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CopyItemCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CopyItemCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CopyItemCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CreateAttachmentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.CreateAttachmentCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.CreateAttachmentCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DeleteAttachmentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.DeleteAttachmentCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.DeleteAttachmentCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetAttachmentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetAttachmentCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetAttachmentCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetDelegateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetDelegateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetDelegateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AddDelegateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.AddDelegateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.AddDelegateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.RemoveDelegateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.RemoveDelegateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.RemoveDelegateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.UpdateDelegateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.UpdateDelegateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.UpdateDelegateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetUserAvailabilityCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetUserAvailabilityCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetUserAvailabilityCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetUserOofSettingsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.GetUserOofSettingsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.GetUserOofSettingsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SetUserOofSettingsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExchangeWebServices.SetUserOofSettingsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExchangeWebServices.SetUserOofSettingsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.TStoreCheckIn">
            <summary>
            Summary description for OStoreCheckIn
            Represent one check in batch of items into the store
            </summary>
        </member>
        <member name="T:LogicLayer.OStoreCheckIn">
            <summary>
            Represents a check-in form that contains a list of items that
            are to be checked in to a single store.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreCheckIn.IsDeactivatable">
            <summary>
            Disallow delete if:
            <para></para>
            1. The Check-In has been committed into the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreCheckIn.Commit">
            <summary>
            Commit the check-in and saves to the database.
            Once this method is called, the CheckInItems list
            must not be modified.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreCheckIn.ValidateCancellable">
            <summary>
            Validates and checks that this check in can be cancelled,
            that is, there must be no other transactions other than
            the one created by the check in.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreCheckIn.ValidateBinsNotLocked">
            <summary>
            Validates that none of the bins are locked.
            <para></para>
            Returns a list of store bins that are locked.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreCheckIn.UpdateWorkCost">
            <summary>
            Updates the work cost.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreCheckIn.Cancel">
            <summary>
            Cancel the check-in and saves to the database.
            The cancellation can take place only if there are
            no other transactions on the store bin items other
            than the one that was created by the check in.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckIn.StoreID">
            <summary>
            [Column] Gets or sets the foreign key to the Store table
            that indicates the store to check items in to.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckIn.Description">
            <summary>
            [Column] Gets or sets the description of this check in.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckIn.IsCommitted">
            <summary>
            [Column] Gets or sets a flag indicating whether
            this check in has been committed.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckIn.Store">
            <summary>
            Gets or sets the OStore object that represents the
            store items will be checked in to.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckIn.CheckInItems">
            <summary>
            Gets a one-to-many list of O objects that represents
            a list of items that will be checked in.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckIn.TaskLocations">
            <summary>
            Gets the list of locations associated with this task.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckIn.TaskAmount">
            <summary>
            Gets the total amount of items that are to be checked in.
            </summary>
        </member>
        <member name="T:LogicLayer.TStore">
            <summary>
            Summary description for OStore
            </summary>
            <summary>
            Summary description for OStore
            </summary>
        </member>
        <member name="T:LogicLayer.OStore">
            <summary>
            Represents a physical inventory store.
            </summary>
            <summary>
            Represents a physical inventory store.
            </summary>
        </member>
        <member name="M:LogicLayer.OStore.IsDeactivatable">
            <summary>
            Disallows delete if:
            1. This store is an issue location.
            2. There is at least one store item in this store.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.Created">
            <summary>
            Create a default bin everytime a store is created.
            </summary>
        </member>
        <member name="M:LogicLayer.OStore.FindAccessibleStores(LogicLayer.OUser,System.String,System.Nullable{System.Guid})">
            <summary>
            Returns a list of store accessible based on roleNameCode list.
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.FindAccessibleStores(LogicLayer.OUser,System.String,System.Nullable{System.Guid},System.Boolean,System.Boolean)">
            <summary>
            Returns a list of store accessible based on roleNameCode list.
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.FindAvailableStores(LogicLayer.OWork)">
             <summary>
            
             </summary>
             <param name="work"></param>
             <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.FindAvailableStores(LogicLayer.OScheduledWork)">
             <summary>
            
             </summary>
             <param name="work"></param>
             <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.FindStoreItem(LogicLayer.OCatalogue)">
             <summary>
             Finds and return the StoreItem object that corresponds to the catalogue.
            
             If none is found, return null.
             </summary>
             <param name="catalogue">The Catalogue object that the returned StoreItem corresponds to.</param>
             <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.HasDuplicateStoreItem(LogicLayer.OStoreItem)">
            <summary>
            Checks if there is an existing store item with the
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.HasDuplicateStoreBin(LogicLayer.OStoreBin)">
            <summary>
            Checks if there is an existing store item with the
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.CreateStoreItem(LogicLayer.OCatalogue)">
            <summary>
            Create a StoreItem for the corresponding catalogue,
            with the following fields populated by default:
            - StoreItemType: Non-Stocked
            - CostingType: FIFO
            </summary>
            <param name="catalogue"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.FindBin(System.Guid)">
            <summary>
            Find the store bin corresponding to its ID. Returns
            null if not found.
            </summary>
            <param name="storeBinID"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.FindBinsByCatalogue(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Boolean)">
            <summary>
            Find all bins with items of the specified catalogue and
            return a datatable.
            </summary>
            <param name="catalogueId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.FindBinsByCatalogue(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Boolean,System.Nullable{System.Guid})">
            <summary>
            Find all bins with items of the specified catalogue and
            return a datatable.
            </summary>
            <param name="catalogueId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.RemoveSpecialOrderItems">
            <summary>
            Removes all special order items, whose quantity of stock for that item
            in the entire store is zero.
            </summary>
        </member>
        <member name="M:LogicLayer.OStore.AdjustItemsDownwards(System.Int32,System.Guid,System.Guid,System.Decimal,System.Guid,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})">
             <summary>
             Reserves/Checks out items by adjusting their available quantity
             downwards. Item reservations do not create a transactional log of
             inventory movement.
            
             Application should avoid calling this method directly.
             </summary>
             <param name="binId">Bin from which to reserve items. Leave null if the reservation is across the entire store.</param>
             <param name="quantity">Quantity to reserve</param>
             <param name="unitOfMeasureId">Unit of Measure to reserve in.</param>
        </member>
        <member name="M:LogicLayer.OStore.PeekItems(System.Guid,System.Guid,System.Decimal,System.Guid,System.Decimal@)">
             <summary>
             Takes a peek at the items that will be checked out but
             no check-out will performed.
            
             </summary>
             <param name="binId">Bin from which to reserve items. Leave null if the reservation is across the entire store.</param>
             <param name="quantity">Quantity to reserve</param>
             <param name="unitOfMeasureId">Unit of Measure to reserve in.</param>
        </member>
        <member name="M:LogicLayer.OStore.PeekItemsUnitCost(System.Guid,System.Guid,System.Decimal,System.Guid,System.Decimal@,System.Decimal@)">
            <summary>
            Takes a peek at what the possible unit (based on the base unit)
            cost of items would be.
            </summary>
            <param name="binId"></param>
            <param name="catalogueId"></param>
            <param name="actualQuantity"></param>
            <param name="actualUnitOfMeasureId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.CheckOutItems(System.Guid,System.Guid,System.Decimal,System.Guid,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Checks out unreserved items from the store.
            </summary>
            <param name="binId"></param>
            <param name="catalogueId"></param>
            <param name="actualQuantity"></param>
            <param name="actualUnitOfMeasureId"></param>
            <param name="destinationType"></param>
            <param name="workId"></param>
            <param name="userId"></param>
            <param name="locationId"></param>
            <param name="equipmentId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.TransferOutItems(System.Guid,System.Guid,System.Decimal,System.Guid,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Transfers items out of the store.
            </summary>
            <param name="binId"></param>
            <param name="catalogueId"></param>
            <param name="actualQuantity"></param>
            <param name="actualUnitOfMeasureId"></param>
            <param name="fromStoreId"></param>
            <param name="toStoreId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.AdjustItemsUpwards(System.Guid,System.Decimal,System.Int32,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})">
             <summary>
             Adjust items' quantity upwards. This method is used if
             and only if the application is adjusting the quantity of a
             known batch upwards.
            
             Application should avoid calling this method directly.
             </summary>
             <param name="binId">Bin from which to reserve items. Leave null if the reservation is across the entire store.</param>
             <param name="quantity">Quantity to reserve</param>
             <param name="unitOfMeasureId">Unit of Measure to reserve in.</param>
        </member>
        <member name="M:LogicLayer.OStore.AdjustItemsUpwards(System.Guid,System.Guid,LogicLayer.StoreCheckInItemDetail,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})">
             <summary>
             Adjust items' quantity upwards. This method is used if
             and only if the application is checking in a new batch of
             items into the store.
            
             Application should avoid calling this method directly.
             </summary>
             <param name="adjustment"></param>
             <param name="binId"></param>
             <param name="catalogueId"></param>
             <param name="quantity"></param>
             <param name="itemTransactionType"></param>
             <param name="destinationType"></param>
             <param name="workId"></param>
             <param name="userId"></param>
             <param name="locationId"></param>
             <param name="equipmentId"></param>
             <param name="fromStoreId"></param>
             <param name="toStoreId"></param>
        </member>
        <member name="M:LogicLayer.OStore.TransferEquipmentStoreBinItem(System.Guid,System.Guid,System.Nullable{System.Guid})">
            <summary>
            Transfers StoreBinItems tied to an equipment from one store to this store.
            </summary>
            <param name="storeBinItemId"></param>
            <param name="toStoreBinId"></param>
        </member>
        <member name="M:LogicLayer.OStore.TransferEquipmentStoreBinItem(System.Guid,System.Guid,System.Decimal,LogicLayer.OCatalogue,System.Nullable{System.Guid})">
            <summary>
            Transfers StoreBinItems tied to an equipment from one store to this store.
            <para></para>
            This method is called by the Equipment.Saving method to update
            properties of the store batch
            </summary>
            <param name="storeBinItemId"></param>
            <param name="toStoreBinId"></param>
        </member>
        <member name="M:LogicLayer.OStore.TransferInItems(System.Guid,System.Guid,LogicLayer.StoreCheckInItemDetail,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Transfer items from another store into the specified bin.
            </summary>
            <param name="binId"></param>
            <param name="catalogueId"></param>
            <param name="detail"></param>
            <param name="fromStoreId"></param>
            <param name="toStoreId"></param>
        </member>
        <member name="M:LogicLayer.OStore.CheckInNewItems(System.Guid,System.Guid,LogicLayer.StoreCheckInItemDetail,System.Nullable{System.Guid})">
            <summary>
            Check in new items to the store.
            </summary>
            <param name="binId"></param>
            <param name="catalogueId"></param>
            <param name="detail"></param>
        </member>
        <member name="M:LogicLayer.OStore.CheckInWorkOrderItems(System.Guid,System.Nullable{System.Guid},System.Collections.Generic.List{LogicLayer.StoreCheckInWorkOrderItemDetail},System.Nullable{System.Guid})">
            <summary>
            Check in work order items. If a reservation has been
            previously made for the item, specify the reservation ID
            in the storeBinReservationId parameter.
            </summary>
            <param name="reservation"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.CheckInStoreRequestItems(System.Int32,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Collections.Generic.List{LogicLayer.StoreCheckInWorkOrderItemDetail},System.Nullable{System.Guid})">
            <summary>
            Check in store request items. If a reservation has been
            previously made for the item, specify the reservation ID
            in the storeBinReservationId parameter.
            </summary>
            <param name="reservation"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.CheckOutWorkOrderItems(System.Guid,System.Guid,System.Decimal,System.Guid,System.Guid,System.Nullable{System.Guid})">
            <summary>
            Check out work order items without reservation.
            </summary>
            <param name="reservation"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.CheckOutStoreRequestItems(System.Guid,System.Guid,System.Decimal,System.Guid,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Check out store request items without reservation.
            </summary>
            <param name="reservation"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.ComputeAverageUnitCost(System.Guid,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Guid)">
             <summary>
             Get the averaged unit cost of stock for the specified
             catalogue for ALL existing item batches in ALL stores.
            
             This is used by the scheduled work to determine the
             estimated cost per unit of material.
             </summary>
             <param name="catalogueId"></param>
        </member>
        <member name="M:LogicLayer.OStore.CheckLowInventoryItems">
            <summary>
            Check if there are any low inventory items in the store that can be
            reordered.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.GeneratePurchaseRequestForLowInventoryItems(System.Guid)">
            <summary>
            Generate purchase request for items that have fallen
            below the inventory threshold.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.GetIssueLocation(System.Guid)">
            <summary>
            Gets the issue location.
            </summary>
            <param name="locationId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.GetIssueLocationAsList(System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Gets the issue location as a list of OStore objects.
            </summary>
            <param name="locationId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.ValidateStoreBinsNotLocked(System.Collections.Generic.List{System.Guid})">
            <summary>
            Validates and checks to ensure that none of the
            store bins are locked.
            <para></para>
            Returns a list of store bins that are currently
            locked.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.DetermineLowInventoryItems">
            <summary>
            Determines which of the store items in this store are
            currently below their threshold.
            <para></para>
            This method sets the LowInventory flag to true for
            OStoreItem that have fallen below reorder threshold,
            and false otherwise.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.ValidateLocationStoreBinsNotLocked(System.Collections.Generic.List{System.Guid})">
            <summary>
            Validates and checks to ensure that none of the 
            store bins are locked.
            <para></para>
            Returns a list of store bins that are currently
            locked.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.GenerateRFQForLowInventoryItems(System.Guid)">
            <summary>
            Generate RFQ for low inventory items
            </summary>
            <returns> Returns a created RFQ object </returns>
        </member>
        <member name="M:LogicLayer.OStore.GetAllPhysicalStorerooms">
            <summary>
            Gets a list of all stores.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.GetAllPhysicalStoreroomsActiveForCheckIns">
            <summary>
            Gets a list of all stores.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.GetAllPhysicalStoreroomsActiveForCheckIns(System.Nullable{System.Guid})">
            <summary>
            Gets a list of all stores.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStore.FindAccessibleStoresActiveForCheckIn(LogicLayer.OUser,System.String,System.Nullable{System.Guid},System.Boolean,System.Boolean)">
            <summary>
            Returns a list of active stores accessible based on roleNameCode list.
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OStore.LocationID">
            <summary>
            [Column] Gets or sets the foreign key to the Location table that represents the location that this store serves.
            </summary>
        </member>
        <member name="P:LogicLayer.OStore.NotifyUser1ID">
            <summary>
            [Column] Gets or sets the foreign key to the User table.
            </summary>
        </member>
        <member name="P:LogicLayer.OStore.NotifyUser2ID">
            <summary>
            [Column] Gets or sets the foreign key to the User table.
            </summary>
        </member>
        <member name="P:LogicLayer.OStore.NotifyUser3ID">
            <summary>
            [Column] Gets or sets the foreign key to the User table.
            </summary>
        </member>
        <member name="P:LogicLayer.OStore.NotifyUser4ID">
            <summary>
            [Column] Gets or sets the foreign key to the User table.
            </summary>
        </member>
        <member name="P:LogicLayer.OStore.StoreType">
            <summary>
            [Column] Gets or sets the store type.
            <list>
                <item>0 - Storeroom</item>
                <item>1 - Issue Location</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OStore.Location">
            <summary>
            Gets or sets the OLocation object that represents the location
            this store currently serves. In other words, only Works
            created at or under this location can consume items within this
            store.
            <para></para>
            Note that this does NOT indicate the physical location of the
            store.
            </summary>
        </member>
        <member name="P:LogicLayer.OStore.StoreBins">
            <summary>
            Gets a one-to-many list of OStoreBin objects that
            represents the bins in this store.
            </summary>
        </member>
        <member name="P:LogicLayer.OStore.StoreItems">
            <summary>
            Gets a one-to-many list of OStoreItem objects that
            represents the different catalogue items that this store
            can currently hold.
            </summary>
        </member>
        <member name="P:LogicLayer.OStore.NotifyUser1">
            <summary>
            Gets or sets the OUser object that represents the user who
            will receive notification when items in this store fall below
            their threshold level. The user may specify up to four users
            to notify.
            </summary>
        </member>
        <member name="P:LogicLayer.OStore.NotifyUser2">
            <summary>
            Gets or sets the OUser object that represents the user who
            will receive notification when items in this store fall below
            their threshold level. The user may specify up to four users
            to notify.
            </summary>
        </member>
        <member name="P:LogicLayer.OStore.NotifyUser3">
            <summary>
            Gets or sets the OUser object that represents the user who
            will receive notification when items in this store fall below
            their threshold level. The user may specify up to four users
            to notify.
            </summary>
        </member>
        <member name="P:LogicLayer.OStore.NotifyUser4">
            <summary>
            Gets or sets the OUser object that represents the user who
            will receive notification when items in this store fall below
            their threshold level. The user may specify up to four users
            to notify.
            </summary>
        </member>
        <member name="P:LogicLayer.OStore.StoreTypeText">
            <summary>
            Gets the text representing the store type of this store.
            </summary>
        </member>
        <member name="P:LogicLayer.OStore.LowInventoryStoreItems">
            <summary>
            Gets a list of low inventory store items.
            </summary>
        </member>
        <member name="P:LogicLayer.OStore.TotalCostOfStock">
            <summary>
            Gets the total cost of the physical stock for this store at this
            moment in time. The computation does not exclude reserved
            stock.
            </summary>
        </member>
        <member name="P:LogicLayer.OStore.IsActiveForCheckInText">
            <summary>
            Gets the text representing the store type of this store.
            </summary>
        </member>
        <member name="T:LogicLayer.TLocationType">
            <summary>
            Summary description for OLocationType
            </summary>
        </member>
        <member name="M:LogicLayer.OLocationType.IsDeactivatable">
            <summary>
            Disallows delete if the LocationType is defined for an existing location.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OLocationType.IsCyclicalReference">
            <summary>
            Tests if the object's parent is a cyclical reference back
            to itself.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OLocationType.GetRootLocationTypes">
            <summary>
            Get all root codes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OLocationType.FindLocationType(System.Boolean,System.String)">
            <summary>
            Find location types by name and whether or not it is a 
            leaf node.
            </summary>
            <param name="isLeafType"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OLocationType.IsLeafType">
            <summary>
            [Column] Gets or sets a value that indicates whether
            the location type is a leaf type.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocationType.IsReportableType">
            <summary>
            [Column] Gets or sets a value that indicates whether
            locations of this location type is used for reporting.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocationType.Children">
            <summary>
            Gets a list of OLocationType objects that represents the location types below the current type. Note that there must NOT be any OLocationType objects below one that is a leaf type.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocationType.Parent">
            <summary>
            Gets or sets the OLocationType object that 
            represents the parent location type that this 
            current location type belongs under.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocationType.Location">
            <summary>
            Gets a list of OLocation objects that represents 
            the list of locations that are of this location type.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocationType.LocationTypePoints">
            <summary>
            Gets a list of OLocationTypePoint objects that
            represents a list of points associated with this
            current location type.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocationType.LocationTypeUtilities">
            <summary>
            Gets a list of OLocationTypeUtility objects that
            represents a list of utilities associated with this
            current location type.
            </summary>
        </member>
        <member name="T:LogicLayer.TEquipmentTypeSpare">
            <summary>
            Summary description for OEquipmentType
            </summary>
        </member>
        <member name="T:LogicLayer.OEquipmentTypeSpare">
            <summary>
            Represents information about the possible spares that
            may be used during the breakdown of an equipment of
            a specific equipment type. Note that this record
            does not contain information about the actual spares
            stored in physical equipment.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipmentTypeSpare.EquipmentTypeID">
            <summary>
            [Column] Gets or sets the foreign key to the 
            EquipmentType table.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipmentTypeSpare.CatalogueID">
            <summary>
            [Column] Gets or sets the foreign key to the 
            Catalogue table.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipmentTypeSpare.Quantity">
            <summary>
            [Column] Gets or sets the default quantity that 
            should be checked out from the store if an 
            equipment of this type is sent for repair.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipmentTypeSpare.EquipmentType">
            <summary>
            Gets or sets the OEquipmentType object that 
            represents the equipment type that this spare 
            is meant for.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipmentTypeSpare.Catalogue">
            <summary>
            Gets or sets the OCatalogue object that 
            represents the master catalogue type that this 
            spare is of.
            </summary>
        </member>
        <member name="M:LogicLayer.OUserPasswordHistory.DoesPasswordExist(System.Guid,System.String)">
            <summary>
            Checks if the password exists in the password history
            table for the specified user. Returns true if it exists,
            false otherwise.
            </summary>
            <param name="userID"></param>
            <param name="hashedPassword"></param>
            <returns>Returns true if the password exists,
            false otherwise.</returns>
        </member>
        <member name="M:LogicLayer.OUserPasswordHistory.AddPasswordHistory(System.Guid,System.String)">
            <summary>
            Adds a new password history.
            </summary>
            <param name="userId"></param>
            <param name="newHashedPassword"></param>
        </member>
        <member name="M:LogicLayer.OUserPasswordHistory.ClearPasswordHistory(System.Guid)">
            <summary>
            Clears password history of user conforms to the 
            PasswordHistoryKept.
            </summary>
        </member>
        <member name="M:LogicLayer.OUserPasswordHistory.ValidatePasswordCharacters(System.String)">
            <summary>
            Checks to ensure that the password adheres to the
            password complexity policy as set up in the
            application settings.
            </summary>
            <param name="loginPassword"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUserPasswordHistory.EmailResetPassword(System.String,System.String,System.String)">
            <summary>
            Sends an e-mail with the reset password to the user.
            </summary>
            <param name="userName"></param>
            <param name="emailAddress"></param>
            <param name="unhashedPassword"></param>
        </member>
        <member name="P:LogicLayer.OUserPasswordHistory.LoginPassword">
            <summary>
            Gets or sets the hashed Password string.
            </summary>
        </member>
        <member name="P:LogicLayer.OUserPasswordHistory.UserID">
            <summary>
            [Column] Gets or sets the foreign key to the User table that contains 
            a set of properties common for all users.
            </summary>
        </member>
        <member name="P:LogicLayer.OUserPasswordHistory.Owner">
            <summary>
            Gets or sets the OUser object that represents the superior of this
            current user.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocationTypeUtility.LocationTypeID">
            <summary>
            [Column] A foreign key to the LocationType table
            that indicates the location type this belongs under.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocationTypeUtility.UnitOfMeasureID">
            <summary>
            [Column] A foreign key to the Code table
            that indicates the unit of measure of the values this utility
            record accepts.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocationTypeUtility.UnitOfMeasure">
            <summary>
            Gets a reference to the Code table that indicates the 
            unit of measure of the values this utility record accepts.
            </summary>
        </member>
        <member name="T:LogicLayer.ORequestForQuotationItemLocation">
            <summary>
            Represents 
            </summary>
        </member>
        <member name="P:LogicLayer.ORequestForQuotationItemLocation.RequestForQuotationItemID">
            <summary>
            [Column] Gets or sets the EstimatedUnitPrice
            that indicates the purchase request that contains this item.
            </summary>
        </member>
        <member name="T:LogicLayer.TAccount">
            <summary>
            Summary description for OAccount
            </summary>
            <summary>
            Summary description for OAccount
            </summary>
            <summary>
            Summary description for OAccount
            </summary>
        </member>
        <member name="T:LogicLayer.OAccount">
            <summary>
            Represents a financial account 
            </summary>
        </member>
        <member name="M:LogicLayer.OAccount.IsCapex">
            <summary>
            Determines whether this account is capex.
            This method will determine IsCapex based on the level 3 of hierarchy path.
            All Accounts -> Ops -> Capex : This is level 3.
            </summary>
            <returns>
              <c>true</c> if this instance is capex; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:LogicLayer.OAccount.IsCyclicalReference">
            <summary>
            Tests if the object's parent is a cyclical reference back
            to itself.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OAccount.FindAccounts(System.String)">
            <summary>
            Gets a list of accounts that match the
            search criteria.
            </summary>
            <param name="value"></param>
            <returns>List:OAccount</returns>
        </member>
        <member name="M:LogicLayer.OAccount.IsDeactivatable">
            <summary>
            Returns false if: 
            <list>
                <item>1. The number of children accounts below this one is greater than 0.</item>
            </list>
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OAccount.MoveAccounts(System.Collections.Generic.List{System.Object},System.Guid,System.Int32@,System.Int32@)">
            <summary>
            Moves a list of accounts specified in the accountIds
            parameter under an account specified by moveToAccountId.
            When complete, it returns the number of accounts that
            cannot be moved successfully due to cyclical references.
            </summary>
            <param name="accountIds"></param>
            <param name="moveToAccountId"></param>
        </member>
        <member name="M:LogicLayer.OAccount.GetAccountByPath(System.String,System.Boolean)">
            <summary>
            Extract AccountID from Account hierachy string
            20120119 bug fix ptb
            Only accept lineitem
            </summary>
            <param name="path"></param>
            <returns>Guid</returns>
        </member>
        <member name="M:LogicLayer.OAccount.GetAccountByPath(System.String)">
            <summary>
            Extract AccountID from Account hierachy string
            </summary>
            <param name="path"></param>
            <returns>Guid</returns>
        </member>
        <member name="M:LogicLayer.OAccount.IsAccountInList(LogicLayer.OAccount,System.String[],System.Int32)">
            <summary>
            Check if the Account in the hierachy string
            </summary>
            <param name="loc"></param>
            <param name="strList"></param>
            <param name="locLevel"></param>
            <returns>Boolean</returns>
        </member>
        <member name="P:LogicLayer.OAccount.Type">
            <summary>
            [Column] Gets or sets the type of account.
            <list>
                <item>0 - Category </item>\
                <item>1 - Line Item </item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OAccount.AccountCode">
            <summary>
            [Column] Gets or sets the financial account code
            for this account.
            </summary>
        </member>
        <member name="P:LogicLayer.OAccount.Description">
            <summary>
            [Column] Gets or sets the description 
            for this account.
            </summary>
        </member>
        <member name="P:LogicLayer.OAccount.AllowsBudgeting">
            <summary>
            [Column] Gets or sets a flag indicating
            whether a budget can be created against
            this account.
            </summary>
        </member>
        <member name="P:LogicLayer.OAccount.Parent">
            <summary>
            [One-to-one join] Gets a reference to the
            OAccount object representing the parent
            category of this account.
            </summary>
        </member>
        <member name="P:LogicLayer.OAccount.TypeText">
            <summary>
            Gets the type name of this 
            </summary>
            <returns>string</returns>
        </member>
        <member name="P:LogicLayer.OAccount.AllowsBudgetingText">
            <summary>
            Gets the text indicating whether a budget
            can be created against this account.
            </summary>
        </member>
        <member name="T:LogicLayer.TScheduledWorkStaggeredLocation">
            <summary>
            Summary description for OVendor
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkStaggeredLocation.ScheduledWorkID">
            <summary>
            [Column] Gets or sets the foreign key to the ScheduledWork table 
            that indicates the scheduled work object that contains
            this record.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkStaggeredLocation.LocationID">
            <summary>
            [Column] Gets or sets the foreign key to the Location table 
            that indicates the location that the work generated will be
            associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkStaggeredLocation.UnitsToStagger">
            <summary>
            [Column] Gets or sets the number of days/weeks/months/years
            to stagger the work. This means that the work generated
            for this location will be moved forward by the specified
            number of days/weeks/months/years from the date all works
            for that cycle are originally scheduled to start.
            <para></para>
            The scheduled work's StaggerBy will
            indicate the unit (day/week/month/year) to stagger. 
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkStaggeredLocation.ScheduledWork">
            <summary>
            Gets or sets the OScheduledWork object that represents
            the scheduled work that contains this record.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkStaggeredLocation.Location">
            <summary>
            Gets or sets the OLocation object that represents
            the location that the work generated will be
            associated with.
            </summary>
        </member>
        <member name="T:LogicLayer.ODocumentTemplate">
            <summary>
            Represents a document template.
            </summary>
        </member>
        <member name="M:LogicLayer.ODocumentTemplate.GetAllDocumentTemplate">
            <summary>
            Get All Document Template
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ODocumentTemplate.GetDocumentTemplates(System.String,Anacle.DataFramework.PersistentObject,System.String)">
            <summary>
            Gets a list of document templates for the specified object type.
            </summary>
            <param name="objectTypeName"></param>
            <param name="persistentObject"></param>
            <param name="currentObjectState"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ODocumentTemplate.GetPropertyByObjectType(System.Xml.XmlNode,System.String,System.String,System.String,System.Data.DataTable,System.Data.DataTable)">
            <summary>
            Retrieves property's name, description and type.
            </summary>
            <param name="node"></param>
            <param name="objectType"></param>
            <param name="parentObjectType"></param>
            <param name="parentPropertyName"></param>
            <param name="table1"></param>
            <param name="table2"></param>
        </member>
        <member name="M:LogicLayer.ODocumentTemplate.LoadCommonProperty(System.Xml.XmlNode,System.String,System.Data.DataTable,System.Boolean)">
            <summary>
            Loads common properties of DataFramework and LogicLayer persistent objects.
            </summary>
            <param name="node"></param>
            <param name="objectType"></param>
            <param name="table"></param>
            <param name="isLogicLayerObject"></param>
        </member>
        <member name="M:LogicLayer.ODocumentTemplate.GetPropertyType(System.String,System.String)">
            <summary>
            Gets data type for specified property.
            </summary>
            <param name="typeName"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.ODocumentTemplate.ObjectTypeName">
            <summary>
            [Columm] Gets or sets the object type name.
            </summary>
        </member>
        <member name="P:LogicLayer.ODocumentTemplate.FileName">
            <summary>
            [Column] Gets or sets the file name.
            </summary>
        </member>
        <member name="P:LogicLayer.ODocumentTemplate.FileDescription">
            <summary>
            [Column] Gets or sets the file description.
            </summary>
        </member>
        <member name="P:LogicLayer.ODocumentTemplate.ContentType">
            <summary>
            [Column] Gets or sets the content type of the file.
            </summary>
        </member>
        <member name="P:LogicLayer.ODocumentTemplate.FileBytes">
            <summary>
            [Column] Gets or sets the file bytes.
            </summary>
        </member>
        <member name="P:LogicLayer.ODocumentTemplate.FileSize">
            <summary>
            [Column] Gets or sets the size of the file.
            </summary>
        </member>
        <member name="P:LogicLayer.ODocumentTemplate.ApplicableStates">
            <summary>
            [Column] Gets or sets a comma-separated list of state names
            of the object (as defined in the object's workflow file)
            that are applicable to this document. '*' indicates
            that this document applies to every state of the object,
            or if the object is not involved in any workflow.
            </summary>
        </member>
        <member name="P:LogicLayer.ODocumentTemplate.FLEECondition">
            <summary>
            [Column] Gets or sets the Fast Lightweight Expression Evaluator
            condition that returns a flag indicating whether this document
            template is applicable to the object.
            </summary>
        </member>
        <member name="P:LogicLayer.ODocumentTemplate.OutputFormat">
            <summary>
            [Columm] Gets or sets a flag indicating whether the
            generated document is editable or not.
            </summary>
        </member>
        <member name="P:LogicLayer.ODocumentTemplate.OutputFormatText">
            <summary>
            Gets the output format in a translated text.
            </summary>
        </member>
        <member name="P:LogicLayer.ODocumentTemplate.OutputFileExtension">
            <summary>
            Gets the output content MIME type.
            </summary>
        </member>
        <member name="P:LogicLayer.ODocumentTemplate.OutputContentMIMEType">
            <summary>
            Gets the output content MIME type.
            </summary>
        </member>
        <member name="T:LogicLayer.DocumentOutputFormat">
            <summary>
            Enumerates the various output formats supported by the document
            template.
            </summary>
        </member>
        <member name="T:LogicLayer.OBudgetReallocationTo">
            <summary>
            Represents the money that will be reallocated from the specified
            budget account.
            </summary>
            <summary>
            Represents the money that will be reallocated from the specified
            budget account.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocationTo.BudgetReallocationID">
            <summary>
            [Column] Gets or sets the foreign key to the 
            budget reallocation record that this detail belongs under.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocationTo.AccountID">
            <summary>
            [Column] Gets or sets the budget account that this
            money is reallocated from.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocationTo.Interval01Amount">
            <summary>
            [Column] Gets or sets the amount to reallocate in one of
            the 36 intervals in the budget period.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocationTo.TotalAmount">
            <summary>
            [Column] Gets or sets the total amount reallocationed.
            </summary>
        </member>
        <member name="T:LogicLayer.ReportParameters">
            <summary>
            This is the Reports class that will be used by the Report 
            Builder to call methods within this class. All reports that are 
            to be exposed to the Report Builder at the Web Application layer 
            must declare one of the following prototypes:
            
                public static DataTable ReportMethodName(Hashtable 
                    parameters);
            
                public static DataSet ReportMethodName(Hashtable 
                    parameters);
            
            </summary>
        </member>
        <member name="M:LogicLayer.ReportParameters.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:LogicLayer.ReportParameters.ParameterNames">
            <summary>
            Get the list of parameter names currently stored in the
            parameter list.
            </summary>
        </member>
        <member name="P:LogicLayer.ReportParameters.Item(System.String)">
            <summary>
            Returns the value of the parameterName stored in this list.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:LogicLayer.OOPCDAServer">
            <summary>
            Represents an OPC DA Server record that contains a group of
            points. 
            </summary>
        </member>
        <member name="M:LogicLayer.OOPCDAServer.IsDeactivatable">
            <summary>
            Returns a flag indicating whether the OPC DA
            server object can be deactivated. It can be deactivated
            if:
            <list>
                <item>1 - There are points associated with the
                OPC DA server object.</item>
            </list>
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OOPCDAServer.GetAllOPCDAServers">
            <summary>
            Gets a list of all OPC DA servers.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OOPCDAServer.Description">
            <summary>
            [Column] Gets or sets the description of the 
            DA server.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCDAServer.AutomaticPollingEnabled">
            <summary>
            [Column] Gets or sets a flag indicating whether
            automatic polling is enabled.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCDAServer.SampleIntervalInMinutes">
            <summary>
            [Column] Gets or sets the sampling interval in
            the number of minutes. For performance reasons, 
            this applies to all points in this OPC DA Server
            group.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCDAServer.NumberOfMinutesToKeepHistory">
            <summary>
            [Column] Gets or sets the number of minutes to
            keep the reading history. For performance reasons, 
            this applies to all points in this OPC DA Server
            group.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCDAServer.Points">
            <summary>
            Gets a list of OPoint objects represent the
            list of points associated with this OPC DA
            server.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCDAServer.AutomaticPollingEnabledText">
            <summary>
            Returns a string of text representing whether
            receiving events from this AE server is enabled.
            </summary>
        </member>
        <member name="T:LogicLayer.OOPCAEEventHistory">
            <summary>
            Represents an OPC alarm or an event so that when this
            event is generated by the OPC AE server, an appropriate
            action can be taken.
            </summary>
        </member>
        <member name="M:LogicLayer.OOPCAEEventHistory.Contains(System.String[],System.String)">
            <summary>
            Checks if a string exists in an array of strings.
            </summary>
            <param name="names"></param>
            <param name="name"></param>
        </member>
        <member name="M:LogicLayer.OOPCAEEventHistory.CreateWork(LogicLayer.OOPCAEEvent)">
            <summary>
            Creates a new work and transits it. 
            </summary>
        </member>
        <member name="M:LogicLayer.OOPCAEEventHistory.CheckForEvent(LogicLayer.OOPCAEEvent)">
            <summary>
            Checks if the reading has breached the OPC point's
            range of acceptable values. 
            </summary>
            <returns>True if there is a breach of reading, and a work
            has been created.</returns>
            <param name="point"></param>
        </member>
        <member name="M:LogicLayer.OOPCAEEventHistory.GetEventHistories(System.Guid,System.Int32)">
            <summary>
            Gets the most recent readings by location and location type
            parameter.
            </summary>
            <param name="location"></param>
            <param name="locationTypeParameter"></param>
            <param name="numberOfResults"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OOPCAEEventHistory.OPCAEEventID">
            <summary>
            [Column] Gets or sets the foreign key to the
            OPCAEEvent table that indicates the AE Event
            that was received from the OPC AE server.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEventHistory.DateOfEvent">
            <summary>
            [Column] Gets or sets the date of the
            event received from the OPC AE server.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEventHistory.Source">
            <summary>
            [Column] Gets or sets the source of the
            event received from the OPC AE server.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEventHistory.ConditionName">
            <summary>
            [Column] Gets or sets the condition name
            of the event received from the OPC AE server.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEventHistory.SubConditionName">
            <summary>
            [Column] Gets or sets the sub-condition name
            of the event received from the OPC AE server.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEventHistory.Message">
            <summary>
            [Column] Gets or sets the message
            of the event received from the OPC AE server.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEventHistory.EventCategory">
            <summary>
            [Column] Gets or sets the event category
            of the event received from the OPC AE server.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEventHistory.Severity">
            <summary>
            [Column] Gets or sets the severity
            of the event received from the OPC AE server.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEventHistory.EventType">
            <summary>
            [Column] Gets or sets a flag indicating the
            whether event received from the OPC AE server
            is a tracking event.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEventHistory.CreateOnEventWorkID">
            <summary>
            [Column] Gets or sets the foreign key to the Work
            table indicate the work that was generated as a
            result of receiving this event from the OPC AE
            server.
            </summary>
        </member>
        <member name="T:LogicLayer.AEEventType">
            <summary>
            Enumerates the list of OPC AE event types.
            </summary>
        </member>
        <member name="F:LogicLayer.AEEventType.Simple">
            <summary>
            A simple event.
            </summary>
        </member>
        <member name="F:LogicLayer.AEEventType.Tracking">
            <summary>
            A tracking event.
            </summary>
        </member>
        <member name="F:LogicLayer.AEEventType.Condition">
            <summary>
            A conditional event.
            </summary>
        </member>
        <member name="T:LogicLayer.OTenantActivity">
            <summary>
            </summary>
        </member>
        <member name="T:LogicLayer.OTenantContact">
            <summary>
            </summary>
            <summary>
            </summary>
        </member>
        <member name="T:LogicLayer.TRFQBudgetReallocationFromPeriod">
            <summary>
            Created by TVO
            </summary>
        </member>
        <member name="T:LogicLayer.ORFQBudgetReallocationFromPeriod">
            <summary>
            Represents a budget reallocation record that 
            </summary>
        </member>
        <member name="T:LogicLayer.OUserPermanentPosition">
            <summary>
            </summary>
        </member>
        <member name="T:LogicLayer.OCurrency">
            <summary>
            
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="M:LogicLayer.OCurrency.IsDeactivatable">
            <summary>
            Disallow delete:
            1. If the currency is the system's base currency.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCurrency.GetAllCurrencies">
            <summary>
            Get all currencies.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCurrency.GetAllCurrencies(System.Nullable{System.Guid})">
            <summary>
            Get all currencies.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCurrency.ValidateExchangeRateHasNoOverlaps(LogicLayer.OCurrencyExchangeRate)">
            <summary>
            Validates that the currency exchange rate does not
            overlap with another existing rate in this currency.
            </summary>
            <param name="currencyExchangeRate"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCurrency.GetExchangeRate(System.DateTime,System.Guid)">
            <summary>
            Gets the foreign-to-base exchange rate of the specified
            currency ID given the date to query.
            </summary>
            <param name="date"></param>
            <param name="currencyId"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OCurrency.Description">
            <summary>
            [Column] Gets or sets a human-readable description associated with this
            currency. An example of such description would be, 'American Dollar', 
            'Sterling Pound'
            </summary>
        </member>
        <member name="P:LogicLayer.OCurrency.CurrencySymbol">
            <summary>
            [Column] Gets or sets a maximum five-character symbol to represent
            the currency. Examples of currency symbols are '$', '£', '€'.
            </summary>
        </member>
        <member name="P:LogicLayer.OCurrency.CurrencyNameAndDescription">
            <summary>
            Gets a string representation of the
            currency name and the description.
            </summary>
        </member>
        <member name="P:LogicLayer.OCurrency.CurrencyExchangeRates">
            <summary>
            Gets a list represent the exchange rates applicable for the
            conversion from the base currency to this currency for specific
            periods.
            </summary>
        </member>
        <member name="P:LogicLayer.OCurrency.DataFormatString">
            <summary>
            Gets the data format string corresponding to this
            currency.
            <para></para>
            This is often called in pages (Invoice, POs) where a secondary 
            currency will appear in addition to the base currency, so that
            the data format string can be set on gridview columns that
            display the secondary currencies.
            </summary>
            <param name="currencyName"></param>
            <returns></returns>
        </member>
        <member name="T:LogicLayer.Resources.WorkflowStates">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.Activated">
            <summary>
              Looks up a localized string similar to Activated.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.Approved">
            <summary>
              Looks up a localized string similar to Approved.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.ApprovedForTransfer">
            <summary>
              Looks up a localized string similar to Pending for Transfer.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.Awarded">
            <summary>
              Looks up a localized string similar to Approved.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.Cancelled">
            <summary>
              Looks up a localized string similar to Cancelled.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.CancelledAndRevised">
            <summary>
              Looks up a localized string similar to Cancelled and Revised.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.Close">
            <summary>
              Looks up a localized string similar to Closed.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.Committed">
            <summary>
              Looks up a localized string similar to Committed.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.Created">
            <summary>
              Looks up a localized string similar to Created.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.Draft">
            <summary>
              Looks up a localized string similar to Draft.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.InProgress">
            <summary>
              Looks up a localized string similar to In-Progress.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.PendingAdjustment">
            <summary>
              Looks up a localized string similar to Pending Adjustment.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.PendingApproval">
            <summary>
              Looks up a localized string similar to Pending Approval.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.PendingApproval_Invoice">
            <summary>
              Looks up a localized string similar to Pending Invoice Approval.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.PendingAssignment">
            <summary>
              Looks up a localized string similar to Pending Assignment.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.PendingCancelAndRevised">
            <summary>
              Looks up a localized string similar to Pending Cancellation and Revised.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.PendingCancellation">
            <summary>
              Looks up a localized string similar to Pending Cancellation.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.PendingCheckout">
            <summary>
              Looks up a localized string similar to Pending Checkout.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.PendingClosure">
            <summary>
              Looks up a localized string similar to Pending Closure.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.PendingContractor">
            <summary>
              Looks up a localized string similar to Pending Contractor.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.PendingEvaluation">
            <summary>
              Looks up a localized string similar to Pending Evaluation.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.PendingExecution">
            <summary>
              Looks up a localized string similar to Pending Execution.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.PendingHelpdesk">
            <summary>
              Looks up a localized string similar to Pending Helpdesk.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.PendingInvitation">
            <summary>
              Looks up a localized string similar to Pending Invitation.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.PendingMaterial">
            <summary>
              Looks up a localized string similar to Pending Material.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.PendingPlanning">
            <summary>
              Looks up a localized string similar to Pending Planning.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.PendingQuotation">
            <summary>
              Looks up a localized string similar to Pending Quotation.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.PendingReceipt">
            <summary>
              Looks up a localized string similar to Pending Receipt.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.PendingReturn">
            <summary>
              Looks up a localized string similar to Pending Return.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.RejectedforRedraft">
            <summary>
              Looks up a localized string similar to Rejected for Redraft.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.RejectedforRework">
            <summary>
              Looks up a localized string similar to Rejected for Rework.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.Start">
            <summary>
              Looks up a localized string similar to Start.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.WorkflowStates.Terminated">
            <summary>
              Looks up a localized string similar to Terminated.
            </summary>
        </member>
        <member name="T:LogicLayer.ServiceView">
            <summary>
            Views all existing EAM services.
            </summary>
        </member>
        <member name="M:LogicLayer.ServiceView.ViewWindowsService">
            <summary>
            Retrieves all existing EAM services currently installed on system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ServiceView.TranslateServiceStatus(System.ServiceProcess.ServiceControllerStatus)">
            <summary>
            Maps the status of eam service to value specified in resources.
            </summary>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ServiceView.StartService(System.String,System.TimeSpan,LogicLayer.ImpersonateUser)">
            <summary>
            Starts eam service specified by service name by using access right of the user impersonated by system.
            </summary>
            <param name="serviceName"></param>
            <param name="timeout"></param>
            <param name="user"></param>
        </member>
        <member name="M:LogicLayer.ServiceView.StopService(System.String,System.TimeSpan,LogicLayer.ImpersonateUser)">
            <summary>
            Stops eam service specified by service name by using access right of the user impersonated by system.
            </summary>
            <param name="serviceName"></param>
            <param name="timeout"></param>
            <param name="user"></param>
        </member>
        <member name="M:LogicLayer.ServiceView.IsAuthorizedUser(LogicLayer.ImpersonateUser)">
            <summary>
            if logon user has role as administrator, return token for this user
            else return 0
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ServiceView.StartImpersonateUser(LogicLayer.ImpersonateUser)">
            <summary>
            Impersonates the authorized user.
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ServiceView.StopImpersonateUser(System.Security.Principal.WindowsImpersonationContext)">
            <summary>
            Stops impersonating authorized user.
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:LogicLayer.ServiceView.GetEamServiceName">
            <summary>
            Retrieves eam services names specified by EAMservice key.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ServiceView.IsEamServiceName(System.String,System.String[])">
            <summary>
            Checks service name against the list of eam service names.
            </summary>
            <param name="name"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="T:LogicLayer.ImpersonateUser">
            <summary>
            Info of user to be impersonated.
            </summary>
        </member>
        <member name="T:LogicLayer.OAttachment">
            <summary>
            Represents a file attachment that can be attached to
            any <code>PersistentObject</code>.
            </summary>
        </member>
        <member name="M:LogicLayer.OAttachment.ClearRemovedAttachments">
            <summary>
            This method to remove all the attachment
            which have been removed from the object.
            to release db space.
            </summary>
        </member>
        <member name="P:LogicLayer.OAttachment.AttachedObjectID">
            <summary>
            Gets or sets the foreign key of the <code>PersistentObject</code>to which
            this attachment is attached to.
            </summary>
        </member>
        <member name="P:LogicLayer.OAttachment.Filename">
            <summary>
            Gets or sets the file name of this attachment.
            </summary>
        </member>
        <member name="P:LogicLayer.OAttachment.ContentType">
            <summary>
            Gets or sets the MIME content type of this attachment.
            </summary>
        </member>
        <member name="P:LogicLayer.OAttachment.FileBytes">
            <summary>
            Gets or sets the binary image of the attachment.
            </summary>
        </member>
        <member name="P:LogicLayer.OAttachment.FileSize">
            <summary>
            Gets or sets the file size of this attachment.
            </summary>
        </member>
        <member name="P:LogicLayer.OAttachment.AttachmentTypeID">
            <summary>
            Gets or sets the document type of this attachment.
            </summary>
        </member>
        <member name="P:LogicLayer.OAttachment.FileDescription">
            <summary>
            Gets or sets the description given to this attachment.
            </summary>
        </member>
        <member name="P:LogicLayer.OAttachment.AttachmentType">
            <summary>
            Gets the OAttachmentType object that represents
            the type of attachment that the user has uploaded.
            </summary>
        </member>
        <member name="T:LogicLayer.TSurveyChecklistItem">
            <summary>
            Summary description for OSurveyChecklistItem
            </summary>
            <summary>
            Summary description for OSurveyChecklistItem
            </summary>
        </member>
        <member name="T:LogicLayer.OSurveyChecklistItem">
            <summary>
            Represents a step in a series of steps in a checklist, which can
            be attached to a work so that the assigned in-house technician
            or term contractor can perform inspections or actions indicated
            in the checklist.
            </summary>
            <summary>
            Represents a step in a series of steps in a checklist, which can
            be attached to a work so that the assigned in-house technician
            or term contractor can perform inspections or actions indicated
            in the checklist.
            </summary>
        </member>
        <member name="M:LogicLayer.OSurveyChecklistItem.Saving">
            --------------------------------------------------------------
            <summary>
            Set the survey number format
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="T:LogicLayer.TBudgetTransactionLog">
            <summary>
            Summary description for OBudgetConsumption
            </summary>
        </member>
        <member name="M:LogicLayer.OBudgetTransactionLog.TransferTransactionAmountToNonCommittedAmount">
            <summary>
            Moves the transaction amount to the non-committed amount;
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetTransactionLog.TransactionType">
            <summary>
            [Column] Gets or sets the budget transaction type.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetTransactionLog.BudgetID">
            <summary>
            [Column] Gets or sets the foreign key to the budget 
            table this consumption applies to.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetTransactionLog.AccountID">
            <summary>
            [Column] Gets or sets the foreign key to the account 
            table that this consumption applies to.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetTransactionLog.PurchaseBudgetID">
            <summary>
            [Column] Gets or sets the foreign key to the PurchaseRequest
            budget table that indicates the purchase request that
            consumed against the budget.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetTransactionLog.InvoiceID">
            <summary>
            [Column] Gets or sets the foreign key to the Invoice
            table that indicates the purchase order that
            consumed against the budget.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetTransactionLog.DateOfExpenditure">
            <summary>
            [Column] Gets or sets the date of consumption
            that the expense or purchase order object deducts
            from the budget. This date is usually the start
            date of the purchase order or expense.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetTransactionLog.TransactionAmount">
            <summary>
            [Column] Gets or sets the amount consumed from
            the budget specified in the date of consumption.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetTransactionLog.NonCommittedAmount">
            <summary>
            [Column] Gets or sets the non-committed amount.
            This non-committed amount is used to store the
            credit/debit memo amount.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetTransactionLog.ReturnAmount">
            <summary>
            [Column] Gets or sets the amount to be returned 
            to the previous transaction log, should the 
            purchase document be cancelled.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetTransactionLog.BudgetPeriodID">
            <summary>
            [Column] Gets or sets the foreign key to the budget
            period table that indicates the budget period
            that this transaction applies to.
            <para></para>
            This field is filled up only at the time the
            transaction log is created and will never be 
            updated again. Therefore, if this field is null, 
            it means that the budget was committed
            before the period was opened.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetTransactionLog.TransferFromBudgetTransactionLogID">
            <summary>
            [Column] Gets or sets the foreign key to
            the BudgetTransactionLog table that indicates
            the log entry that the amount wil be deducted from.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetTransactionLog.Budget">
            <summary>
            Gets a reference to the OBudget object that represents
            the budget the transaction was committed against.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetTransactionLog.Account">
            <summary>
            Gets a reference to the OAccount object that represents
            the account in the budget that the transaction was committed
            against.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetTransactionLog.PurchaseBudget">
            <summary>
            Gets a reference to the OPurchaseBudget object that
            generated this budget transaction log.
            </summary>
        </member>
        <member name="T:LogicLayer.BudgetTransactionType">
            <summary>
            Represents the different types of transactions.
            </summary>
        </member>
        <member name="F:LogicLayer.BudgetTransactionType.PurchasePendingApproval">
            <summary>
            RFQ/PO pending approval.
            </summary>
        </member>
        <member name="F:LogicLayer.BudgetTransactionType.PurchaseApproved">
            <summary>
            RFQ/PO approved.
            </summary>
        </member>
        <member name="F:LogicLayer.BudgetTransactionType.PurchaseInvoiceApproved">
            <summary>
            PO-matched invoice approved.
            </summary>
        </member>
        <member name="F:LogicLayer.BudgetTransactionType.PurchaseCreditDebitMemoApproved">
            <summary>
            PO-matched credit/debit memo approved.
            </summary>
        </member>
        <member name="F:LogicLayer.BudgetTransactionType.DirectInvoicePendingApproval">
            <summary>
            Direct invoice pending approval.
            </summary>
        </member>
        <member name="F:LogicLayer.BudgetTransactionType.DirectInvoiceApproved">
            <summary>
            Direct invoice approved.
            </summary>
        </member>
        <member name="F:LogicLayer.BudgetTransactionType.DirectCreditDebitMemoApproved">
            <summary>
            Direct credit/debit memo approved.
            </summary>
        </member>
        <member name="T:LogicLayer.BudgetTransaction">
            <summary>
            Represents a temporary class used to store information
            about what will be committed against budgets.
            </summary>
        </member>
        <member name="F:LogicLayer.BudgetTransaction.BudgetPeriodID">
            <summary>
            
            </summary>
        </member>
        <member name="T:LogicLayer.OOPCAEEvent">
            <summary>
            Represents an OPC alarm or an event so that when this
            event is generated by the OPC AE server, an appropriate
            action can be taken.
            </summary>
        </member>
        <member name="M:LogicLayer.OOPCAEEvent.EventRaised(LogicLayer.OOPCAEEventHistory)">
            <summary>
            This method is called when an alarm matching the 
            conditions is raised.
            <para></para>
            You can override the implementation of this method
            to derive more functionality whenever an alarm/event
            is raised.
            </summary>
        </member>
        <member name="M:LogicLayer.OOPCAEEvent.ValidateNoDuplicateOPCEventSource">
            <summary>
            Validates that there is no other point with the 
            same OPC item name using the same OPC DA server.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.Description">
            <summary>
            [Column] Gets or sets the description of this point.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.OPCEventSource">
            <summary>
            [Column] Gets or sets the OPC Event source name.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.OPCAEServerID">
            <summary>
            [Column] Gets or sets the foreign key to the
            OPCAEServer table that represents the AE Server
            in which this point is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.IsApplicableForLocation">
            <summary>
            [Column] Gets or sets a flag indicating whether
            or not the point is applicable for a location
            or for an equipment.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.LocationID">
            <summary>
            [Column] Gets or sets the foreign key to the
            Location table that represents the location
            that this point is attached to. The point
            can only be attached to either a Location or
            an Equipment but not both.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.EquipmentID">
            <summary>
            [Column] Gets or sets the foreign key to the
            Equipment table that represents the equipment
            that this point is attached to. The point
            can only be attached to either a Location or
            an Equipment but not both.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.ConditionNames">
            <summary>
            [Column] Gets or sets a comma separated list of
            condition names that causes a breached event.
            Use '*' to indicate that all conditions will
            cause a breach.
            <para></para>
            Note: This applies only to condition events.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.SubConditionNames">
            <summary>
            [Column] Gets or sets a comma separated list of
            sub-condition names that causes a breached event.
            Use '*' to indicate that all sub-conditions will
            cause a breach.
            <para></para>
            Note: This applies only to condition events.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.SeverityFrom">
            <summary>
            [Column] Gets or sets the range of the severity 
            level that causes a breached event.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.SeverityTo">
            <summary>
            [Column] Gets or sets the range of the severity 
            level that causes a breached event.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.CreateWorkOnEvent">
            <summary>
            [Column] Gets or sets a flag that indicates whether
            a work will be created when the reading breaches
            the acceptable range.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.NumberOfEventsToTriggerAction">
            <summary>
            [Column] Gets or sets the number of consecutive events 
            that have breached the acceptable limits so far before
            a Work will be created.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.NumberOfEventsSoFar">
            <summary>
            [Column] Gets or sets the number of consecutive events that 
            have breached the acceptable limits so far. Once an action is 
            taken, this value will be reset to 0.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.CreateOnlyIfWorksAreCancelledOrClosed">
            <summary>
            [Column] Gets or sets a flag that indicates if
            a work should be created if existing works created by
            this event are cancelled or closed.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.PointTriggerID">
            <summary>
            [Column] Gets or sets the foreign key to the PointTrigger
            table that indicates the trigger parameters to be used
            to create the work when an event is raised.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.TypeOfWorkID">
            <summary>
            [Column] Gets or sets the foreign key to the code table
            that indicates the type of work of the Work that
            will be created if the readings breach the acceptable
            range.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.TypeOfServiceID">
            <summary>
            [Column] Gets or sets the foreign key to the code table
            that indicates the type of service of the Work that
            will be created if the readings breach the acceptable
            range.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.TypeOfProblemID">
            <summary>
            [Column] Gets or sets the foreign key to the code table
            that indicates the type of problem of the Work that
            will be created if the readings breach the acceptable
            range.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.Priority">
            <summary>
            [Column] Gets or sets the foreign key to the code table
            that indicates the priority of the Work that
            will be created if the readings breach the acceptable
            range.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.WorkDescription">
            <summary>
            [Column] Gets or sets the foreign key to the code table
            that indicates the description of the Work that
            will be created if the readings breach the acceptable
            range.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.SaveHistoricalEvents">
            <summary>
            [Column] Gets or sets a flag that indicates
            whether historical events will be saved.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.Location">
            <summary>
            [One-to-One Join OPCPoint.LocationID = Location.ObjectID]
            Gets the OLocation object that represents the
            location this OPC point is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.Equipment">
            <summary>
            [One-to-One Join OPCPoint.EquipmentID = Equipment.ObjectID]
            Gets the OEquipment object that represents the
            equipment this OPC point is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.OPCAEServer">
            <summary>
            [One-to-One Join OPCPoint.OPCAEServerID = OPCAEServer.ObjectID]
            Gets the OOPCAEServer object that represents that
            AE Server that this OPC point is associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.PointTrigger">
            <summary>
            Gets or sets a OPointTrigger object that indicates the 
            trigger parameters to be used to create the work when 
            an event is raised.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEEvent.LatestEvent">
            <summary>
            This method will return latest record of this OPCAEEvent if applicable,
            otherwise null will be returned
            </summary>
            <returns></returns>
        </member>
        <member name="T:LogicLayer.ONotificationProcess">
            <summary>
            Represents an Notification process specific to a persistent object
            type and a state within its workflow. This Notification process
            specifies Notification hierarchies applicable to the persistent object
            depending on the location/equipment specified in the persistent
            object.
            </summary>
        </member>
        <member name="M:LogicLayer.ONotificationProcess.GetAllNotificationProcesses">
            <summary>
            Returns a list of all active Notification processes in the system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ONotificationProcess.GetNotificationProcesses(LogicLayer.LogicLayerPersistentObjectBase)">
            <summary>
            Gets a list of Notification process details object by the
            specified Notification process code and applicable to the 
            persistent object.
            </summary>
            <param name="logicLayerPersistentObject"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ONotificationProcess.LinkNotificationProcessTimings">
            <summary>
            Links the notification process timings to the notification
            hierarchy levels.
            </summary>
        </member>
        <member name="M:LogicLayer.ONotificationProcess.ValidateNonDefaultNotificationProcessTimings">
            <summary>
            Validates that if the non-default timings are
            used, that all process timings are in 
            increasing order, with no gaps in between.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ONotificationProcess.FindNotificationProcessTimingByLevel(System.Int32)">
            <summary>
            Gets the notification process timing by hierarchy level.
            </summary>
            <param name="hierarchyLevel"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ONotificationProcess.GetNextNotificationDateTime(LogicLayer.LogicLayerPersistentObjectBase,System.Object,System.Object)">
            <summary>
            Get the next notification date based on a reference field on the specified
            object and the notification time in minutes.
            </summary>
            <param name="referenceField"></param>
            <param name="notificationTimeInMinutes"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ONotificationProcess.GetNextNotificationDateTime(LogicLayer.LogicLayerPersistentObjectBase,System.Nullable{System.DateTime},System.Nullable{System.DateTime}@,System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)">
            <summary>
            Gets the next notification date time.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.TypeOfWorkID">
            <summary>
            [Column] Gets or sets the foreign key to the
            Code table that represents the Type Of Work
            this Notification process applies to if this process is for Work object.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.TypeOfServiceID">
            <summary>
            [Column] Gets or sets the foreign key to the
            Code table that represents the Type Of Service
            this Notification process applies to if this process is for Work object.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.LocationID">
            <summary>
            [Column] Gets or sets the foreign key to the
            Location table that represents the location
            this Notification process applies to.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.EquipmentID">
            <summary>
            [Column] Gets or sets the foreign key to the
            Equipment table that represents the equipment
            this Notification process applies to.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.Description">
            <summary>
            [Column] Gets or sets the description of
            this Notification process detail.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.IsApplicableToPriority0">
            <summary>
            [Column] Gets or sets a flag indicating if this
            notification process is applicable to tasks
            of priority 0.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.IsApplicableToPriority1">
            <summary>
            [Column] Gets or sets a flag indicating if this
            notification process is applicable to tasks
            of priority 0.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.IsApplicableToPriority2">
            <summary>
            [Column] Gets or sets a flag indicating if this
            notification process is applicable to tasks
            of priority 0.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.IsApplicableToPriority3">
            <summary>
            [Column] Gets or sets a flag indicating if this
            notification process is applicable to tasks
            of priority 0.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.NotificationHierarchyID">
            <summary>
            [Column] Gets or sets the Foreign key to the NotificationHierarchy table.
            This is compulsory when the ModeOfNotification = 1
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.NotificationMilestonesID">
            <summary>
            [Column] Gets or sets the Foreign key to the NotificationMilestones table.
            This is compulsory when the ModeOfNotification = 1
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.NotificationLevelAsLimit">
            <summary>
            [Column] Gets or sets the notification level will be used
            as the service level limit.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.UseDefaultTimings">
            <summary>
            [Column] Gets or sets a flag indicating whether or not to use
            the default timings specified in the notification hierarchy.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.MessageTemplate1ID">
            <summary>
            [Column] Gets or sets the foreign key to the MessageTemplate 
            table that indicates the message template to be used
            when sending notification for milestone 1.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.MessageTemplate2ID">
            <summary>
            [Column] Gets or sets the foreign key to the MessageTemplate 
            table that indicates the message template to be used
            when sending notification for milestone 2.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.MessageTemplate3ID">
            <summary>
            [Column] Gets or sets the foreign key to the MessageTemplate 
            table that indicates the message template to be used
            when sending notification for milestone 3.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.MessageTemplate4ID">
            <summary>
            [Column] Gets or sets the foreign key to the MessageTemplate 
            table that indicates the message template to be used
            when sending notification for milestone 4.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.NotificationHierarchy">
            <summary>
            Gets or sets the ONotificationHierarchy object representing
            the hierarchy of users/roles and their Notification limits
            that will be used for approving objects.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.NotificationMilestones">
            <summary>
            Gets or sets the ONotificationMilestones object representing
            the milestones applicable to this notification process.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.NotificationProcessTimings">
            <summary>
            Gets a reference to the list of notification process timings.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.TypeOfWork">
            <summary>
            Gets or sets the OCode object representing the
            Type Of Work to which this Notification process applies.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.TypeOfService">
            <summary>
            Gets or sets the OCode object representing the
            Type Of Service to which this Notification process applies.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.Location">
            <summary>
            Gets or sets the OLocation object representing the
            location to which this Notification process applies.
            </summary>
        </member>
        <member name="P:LogicLayer.ONotificationProcess.Equipment">
            <summary>
            Gets or sets the OEquipment object representing the
            equipment to which this Notification process applies.
            </summary>
        </member>
        <member name="T:LogicLayer.OPurchaseRequest">
            <summary>
            Represents a purchase request object raised for procuring 
            materials or services.
            </summary>
            <summary>
            Represents a purchase request object raised for procuring 
            materials or services.
            </summary>
        </member>
        <member name="F:LogicLayer.OPurchaseRequest.tempPurchaseBudgetSummaries">
            <summary>
            A cached copy of the budget summary table that
            can be queried from the database
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseRequest.ComputeTempBudgetSummaries">
            <summary>
            Computes the temporary list of budget
            summaries.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseRequest.UpdateApplicablePurchaseSettings">
            <summary>
            Gets the most applicable purchase settings and store it
            in a temporary variable.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseRequest.ValidateBudgetAmountEqualsLineItemAmount">
            <summary>
            Validates that the budget amount is equals to the line
            item amount.
            <para></para>
            This function is generic and can be applied to any of
            the WJ/RFQ/PO objects provided the line items implement
            the ItemNumber and the Amount properties.
            </summary>
            <returns>Returns -1 if the validation succeeds. Returns 0 if 
            the total WJ amount does not equal the budget amount .
            Returns any other number if that line number does
            not equal the budget amount</returns>
        </member>
        <member name="M:LogicLayer.OPurchaseRequest.ValidateSufficientBudget">
            <summary>
            Validates that there is sufficient amount in the budgets
            for the deduction.
            </summary>
            <returns>Returns a string of a list of budget periods and accounts
            that are insufficient. Returns an empty string otherwise.
            </returns>
        </member>
        <member name="M:LogicLayer.OPurchaseRequest.SubmitForApproval">
            <summary>
            Submits for Request for Quotation for approval by doing: <br/>
            1. Creates the budget transaction logs. <br/>
            2. Creates the budget summaries and stamp them with the current
            budget available balance. <br/>
            <para></para>
            This method is called from the RFQ workflow after. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseRequest.Approve">
            <summary>
            Approves the Request for Quotation by doing the following:<br/>
            1. Update all budget transactions to indicated Approved.<br/>
            2. Create budget summaries if not already created.<br/>
            3. Stamp budget summaries with current budget balance at approval.<br/>
            <para></para>
            This method is called from the workflow. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseRequest.Reject">
            <summary>
            Rejects the Request for Quotation by doing the following:
            1. Cancels all budget transactions. 
            2. Clears all budget summaries.
            <para></para>
            This method is called from the workflow. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseRequest.Cancel">
            <summary>
            Cancels the Request for Quotation by doing the following:
            1. Unlink all RFQ line items from the WJ line items. 
            2. Cancel all budget transactions.
            <para></para>
            This method is called from the RFQ workflow after. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseRequest.Close">
            <summary>
            Closes the Request for Quotation by doing the following: <br/>
            1. Cancels all budget transactions. <br/>
            <para></para>
            This method is called from the workflow. It should
            not be called by the developer directly.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseRequest.Deactivating">
            --------------------------------------------------------------
            <summary>
            Deactivate all purchase request line items, when this 
            purchase request is deactivated.
            <para></para>
            Then, releases all budgets.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OPurchaseRequest.ValidateBudgetSpendingPolicy">
            <summary>
            Validates that the budget spending policy is adhered to, that is,
            budgets can be spent or not if they are not yet created for
            a finacial period.
            <para></para>
            Returns a list of budgets that failed because budget periods
            are not available.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseRequest.Saving">
            --------------------------------------------------------------
            <summary>
            Called just before the object is saved.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OPurchaseRequest.ReorderItems(LogicLayer.OPurchaseRequestItem)">
            --------------------------------------------------------------
            <summary>
            Re-order the list of items in the checklist response set.
            </summary>
            <param name="i"></param>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OPurchaseRequest.ValidatePRLineItemsNotGeneratedToRFQOrPO(System.Collections.Generic.List{System.Guid})">
            <summary>
            Validates that the list of purchase request line item numbers
            and descriptions that have not been generated into RFQs or POs.
            </summary>
            <param name="purchaseRequestItemIds"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.Background">
            <summary>
            [Column] Gets or Sets the Background
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.IsSubmittedForApproval">
            <summary>
            [Column] Gets or sets a flag indicating that the
            request for quotation has been submitted for approval.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.IsApproved">
            <summary>
            [Column] Gets or sets a flag indicating that the
            request for quotation has been approved.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.Scope">
            <summary>
            [Column] Gets or Sets the Scope
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.PurchaseTypeID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table 
            that indicates the purchase type.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.MinimumNumberOfQuotationsPolicy">
            <summary>
            [Column] Gets or sets a value indicating the policy
            of the system with respect to creating purchase orders
            from quotations.
            <para></para>
            <list>
                <item>0 - A minimum number of quotations is not required.</item>
                <item>1 - A minimum number of quotations is preferred. A warning is displayed if the minimum quotations is not satisfied.</item>
                <item>2 - A minimum number of quotations is required. </item>
            </list>
            <para></para>
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.MinimumNumberOfQuotations">
            <summary>
            [Column] Gets or sets the minimum number of quotations
            required before a Purchase Order can be created from a
            Request for Quotation. This value must be more than
            or equals to 1. At the very least, there must be at
            least 1 quotation in a Request for Quotation before
            any Purchase Order can be created anyway.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.MinimumApplicableRFQAmount">
            <summary>
            [Column] Gets or sets the minimum amount (inclusive)
            that will result in the minimum quotation policy taking effect.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.BudgetValidationPolicy">
            <summary>
            [Column] Gets or sets a value indicating
            the budget validation policy.
            <list>
                <item>0 - Budget consumption must be equal to line items. (default) </item>
                <item>1 - Budget consumption must be less than or equal to line items. </item>
                <item>2 - No validation. </item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.PurchaseType">
            <summary>
            Gets or sets the Purchase Type object the represents
            the purchase type of this request for quotation.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.PurchaseBudgets">
            <summary>
            Gets a one-to-many list of OPurchaseBudget objects that represents
            the budget distribution for this request for quotation.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.PurchaseBudgetSummaries">
            <summary>
            Gets a one-to-many list of OPurchaseBudgetSummary objects that represents
            information about this Purchase Request's commitment to the budgets.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:LogicLayer.OPurchaseRequest.TempPurchaseBudgetSummaries" -->
        <member name="P:LogicLayer.OPurchaseRequest.Description">
            <summary>
            [Column] Gets or sets the description for this purchase
            request object.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.DateRequired">
            <summary>
            [Column] Gets or sets the date the materials or 
            services are required.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.PurchaseAdministratorID">
            <summary>
            [Column] Gets or sets the foreign key to the User table 
            that indicates the purchase administrator to follow
            up with this request.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.PurchaseRequestorID">
            <summary>
            [Column] Gets or sets the foreign key to the User table 
            that indicates the requestor who raised this purchase
            request.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.LocationID">
            <summary>
            [Column] Gets or sets the foreign key to the Location table
            that indicates the location this purchase request is 
            intended for.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.EquipmentID">
            <summary>
            [Column] Gets or sets the foreign key to the Equipment table
            that indicates the location this purchase request is 
            intended for.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.StoreID">
            <summary>
            [Column] Gets or sets the foreign key to the Store table 
            that indicates the store this purchase request (for 
            materials) is intended for. 
            <para></para>
            If this WJ is generated from using the "Generate Low Inventory
            Purchase Request" from the Store module, this field will
            have a value.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.ShipToAddress">
            <summary>
            [Column] Gets or sets the address to ship the materials
            or perform the services at.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.ShipToAttention">
            <summary>
            [Column] Gets or sets the person in-charge who will
            attend to the receipt of the materials or services.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.BillToAddress">
            <summary>
            [Column] Gets or sets the address to bill to.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.BillToAttention">
            <summary>
            [Column] Gets or sets the person in-charge who will
            attend to the billing.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.BudgetDistributionMode">
            <summary>
            [Column] Gets or sets the budget distribution mode.
            <para></para>
            <list>
                <item>0 - Budget Distribution by Entire WJ. </item>
                <item>1 - Budget Distribution by WJ line items. </item>
            </list>
            <para></para>
            Note that when the budget distribution is by an entire
            WJ, then the user will be allowed to copy only the entire
            WJ to a new RFQ/PO, but will not be allowed to copy 
            individual line items to a RFQ/PO.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.IsCommitted">
            <summary>
            [Column] Gets or sets a flag indicating that the
            purchase request has been committed.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.Location">
            <summary>
            Gets or sets the OLocation object that represents
            the location this purchase request is intended for.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.Equipment">
            <summary>
            Gets or sets the OEquipment object that represents
            the equipment this purchase request is intended for.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.Store">
            <summary>
            Gets or sets the OStore object that represents
            the store this purchase request (for materials) 
            is intended for.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.PurchaseRequestItems">
            <summary>
            Gets a one-to-many list of OPurchaseRequestItem objects that represents
            a list of materials or services requested.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.PurchaseAdministrator">
            <summary>
            Gets or sets the OUser object that represents
            the purchase administrator to follow
            up with this request.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.PurchaseRequestor">
            <summary>
            Gets or sets the OUser object that represents
            the requestor who raised this purchase request.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.TaskLocations">
            <summary>
            Gets the location indicated by this purchase request.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.TaskEquipments">
            <summary>
            Gets the equipment indicated by this purchase request.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequest.TaskAmount">
            <summary>
            Gets the task amount of this purchase request.
            </summary>
        </member>
        <member name="T:LogicLayer.BudgetVariationStatus">
            <summary>
            Represents the different staus of transactions.
            </summary>
        </member>
        <member name="T:LogicLayer.TACGData">
            <summary>
            Summary description for TACGData
            </summary>
        </member>
        <member name="T:LogicLayer.OACGData">
            <summary>
            Summary description for OACGData
            </summary>
        </member>
        <member name="P:LogicLayer.OACGData.Year">
            <summary>
            [Column] Gets or sets the Year.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGData.LocationID">
            <summary>
            [Column] Gets or sets the LocationID.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGData.ACGDataID">
            <summary>
            [Column] Gets or sets the ACGDataID.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGData.Location">
            <summary>
            [Column] Gets or sets the Location.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGData.ACGDataCarPark">
            <summary>
            [Column] Gets or sets the ACGDataCarPark.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGData.ACGDataRevenue">
            <summary>
            [Column] Gets or sets the ACGDataRevenue.
            </summary>
        </member>
        <member name="T:LogicLayer.TLocationStockTake">
            <summary>
            Summary description for OStoreStockTake
            </summary>
        </member>
        <member name="M:LogicLayer.OLocationStockTake.SubmitForApproval">
            <summary>
            <para></para>
            This method is called from the workflow. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OLocationStockTake.Reject">
            <summary>
            <para></para>
            This method is called from the workflow. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OLocationStockTake.Approve">
            <summary>
            <para></para>
            This method is called from the workflow. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OLocationStockTake.Cancel">
            <summary>
            <para></para>
            This method is called from the workflow. It should
            not be called by the developer directly.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LogicLayer.CRVTenderService.TenderService">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.#ctor">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.GetActiveCRVSerialNumbers(System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.GetActiveCRVSerialNumbersAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.GetActiveCRVSerialNumbersAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.ConfirmCRVSerialUsage(System.String,System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.ConfirmCRVSerialUsageAsync(System.String,System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.ConfirmCRVSerialUsageAsync(System.String,System.String,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.UpdateTenderProjectRefNo(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.UpdateTenderProjectRefNoAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.UpdateTenderProjectRefNoAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.GetFullTenderInfo(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.GetFullTenderInfoAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.GetFullTenderInfoAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.GetTenderNoOfContracts(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.GetTenderNoOfContractsAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.GetTenderNoOfContractsAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.CloseTender(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.CloseTenderAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.CloseTenderAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.CancelTender(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.CancelTenderAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.CancelTenderAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.UpdateTenderVendorAwardStatus(System.String,System.String,LogicLayer.CRVTenderService.CRVTenderVendor)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.UpdateTenderVendorAwardStatusAsync(System.String,System.String,LogicLayer.CRVTenderService.CRVTenderVendor)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.UpdateTenderVendorAwardStatusAsync(System.String,System.String,LogicLayer.CRVTenderService.CRVTenderVendor,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.GetGroupProjectInformation(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.GetGroupProjectInformationAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.GetGroupProjectInformationAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.UpdateGroupProjectInformation(System.String,System.String,LogicLayer.CRVTenderService.GroupProjectInformation)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.UpdateGroupProjectInformationAsync(System.String,System.String,LogicLayer.CRVTenderService.GroupProjectInformation)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.UpdateGroupProjectInformationAsync(System.String,System.String,LogicLayer.CRVTenderService.GroupProjectInformation,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.CreateGroupProjectContract(System.String,System.String,LogicLayer.CRVTenderService.GProjectContract)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.CreateGroupProjectContractAsync(System.String,System.String,LogicLayer.CRVTenderService.GProjectContract)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.CreateGroupProjectContractAsync(System.String,System.String,LogicLayer.CRVTenderService.GProjectContract,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.UpdateGroupProjectContract(System.String,System.String,LogicLayer.CRVTenderService.GProjectContract)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.UpdateGroupProjectContractAsync(System.String,System.String,LogicLayer.CRVTenderService.GProjectContract)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.UpdateGroupProjectContractAsync(System.String,System.String,LogicLayer.CRVTenderService.GProjectContract,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.GetGroupProcurementInformation(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.GetGroupProcurementInformationAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.GetGroupProcurementInformationAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.UpdateGroupProcurementInformation(System.String,System.String,LogicLayer.CRVTenderService.GroupProcurementInformation)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.UpdateGroupProcurementInformationAsync(System.String,System.String,LogicLayer.CRVTenderService.GroupProcurementInformation)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.UpdateGroupProcurementInformationAsync(System.String,System.String,LogicLayer.CRVTenderService.GroupProcurementInformation,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.CreateGroupProcurementContract(System.String,System.String,LogicLayer.CRVTenderService.GProcurementContract)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.CreateGroupProcurementContractAsync(System.String,System.String,LogicLayer.CRVTenderService.GProcurementContract)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.CreateGroupProcurementContractAsync(System.String,System.String,LogicLayer.CRVTenderService.GProcurementContract,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.UpdateGroupProcurementContract(System.String,System.String,LogicLayer.CRVTenderService.GProcurementContract)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.UpdateGroupProcurementContractAsync(System.String,System.String,LogicLayer.CRVTenderService.GProcurementContract)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.UpdateGroupProcurementContractAsync(System.String,System.String,LogicLayer.CRVTenderService.GProcurementContract,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.CRVTenderService.TenderService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVTenderService.TenderService.GetActiveCRVSerialNumbersCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVTenderService.TenderService.ConfirmCRVSerialUsageCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVTenderService.TenderService.UpdateTenderProjectRefNoCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVTenderService.TenderService.GetFullTenderInfoCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVTenderService.TenderService.GetTenderNoOfContractsCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVTenderService.TenderService.CloseTenderCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVTenderService.TenderService.CancelTenderCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVTenderService.TenderService.UpdateTenderVendorAwardStatusCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVTenderService.TenderService.GetGroupProjectInformationCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVTenderService.TenderService.UpdateGroupProjectInformationCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVTenderService.TenderService.CreateGroupProjectContractCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVTenderService.TenderService.UpdateGroupProjectContractCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVTenderService.TenderService.GetGroupProcurementInformationCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVTenderService.TenderService.UpdateGroupProcurementInformationCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVTenderService.TenderService.CreateGroupProcurementContractCompleted">
            <remarks/>
        </member>
        <member name="E:LogicLayer.CRVTenderService.TenderService.UpdateGroupProcurementContractCompleted">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.CRVTender">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CRVTender.ObjectID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CRVTender.ObjectNumber">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CRVTender.ModifiedDateTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CRVTender.TargetType">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CRVTender.Department">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CRVTender.ProjectRefNo">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CRVTender.ProjectTitle">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CRVTender.ProjectDescription">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CRVTender.AwardReason">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CRVTender.NoAwardReason">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CRVTender.AwardDate">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CRVTender.AnticipatedAwardDate">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CRVTender.NumberOfContracts">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CRVTender.CRVTenderVendors">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.CRVTenderVendor">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CRVTenderVendor.ObjectID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CRVTenderVendor.CRVVendorID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CRVTenderVendor.VendorBRN">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CRVTenderVendor.Status">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CRVTenderVendor.AwardDate">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CRVTenderVendor.ModifiedDateTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CRVTenderVendor.Reason">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.GProcurementContract">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProcurementContract.ObjectID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProcurementContract.ContractRefNo">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProcurementContract.TradeTypeID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProcurementContract.Description">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProcurementContract.CRVVendorID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProcurementContract.VendorBRN">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProcurementContract.AwardedAmount">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProcurementContract.StartDate">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProcurementContract.EndDate">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProcurementContract.ContractStatus">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProcurementContract.ModifiedDateTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProcurementContract.IsTermContract">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.GroupProcurementInformation">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProcurementInformation.ObjectID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProcurementInformation.ProjectTitle">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProcurementInformation.ProjectRefNo">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProcurementInformation.ProjectDescription">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProcurementInformation.ContractSum">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProcurementInformation.Currency">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProcurementInformation.Remark">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProcurementInformation.ModifiedDateTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProcurementInformation.GProcurementContracts">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.GProjectContract">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProjectContract.ObjectID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProjectContract.ContractRefNo">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProjectContract.TradeTypeID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProjectContract.Description">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProjectContract.ArchitectName">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProjectContract.CRVVendorID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProjectContract.VendorBRN">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProjectContract.AwardedAmount">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProjectContract.StartDate">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProjectContract.EndDate">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProjectContract.ContractStatus">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProjectContract.ModifiedDateTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GProjectContract.IsTermContract">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.GroupProjectInformation">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProjectInformation.ObjectID">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProjectInformation.ProjectTitle">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProjectInformation.ProjectRefNo">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProjectInformation.ProjectDescription">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProjectInformation.Country">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProjectInformation.City">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProjectInformation.Currency">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProjectInformation.ProjectManager">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProjectInformation.Remark">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProjectInformation.GrossFloorArea">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProjectInformation.SiteArea">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProjectInformation.ConstructionCost">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProjectInformation.ConstructionFloorArea">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProjectInformation.ModifiedDateTime">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GroupProjectInformation.GProjectContracts">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.GetActiveCRVSerialNumbersCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.GetActiveCRVSerialNumbersCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GetActiveCRVSerialNumbersCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.ConfirmCRVSerialUsageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.ConfirmCRVSerialUsageCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.ConfirmCRVSerialUsageCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.UpdateTenderProjectRefNoCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.UpdateTenderProjectRefNoCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.UpdateTenderProjectRefNoCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.GetFullTenderInfoCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.GetFullTenderInfoCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GetFullTenderInfoCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.GetTenderNoOfContractsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.GetTenderNoOfContractsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GetTenderNoOfContractsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.CloseTenderCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.CloseTenderCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CloseTenderCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.CancelTenderCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.CancelTenderCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CancelTenderCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.UpdateTenderVendorAwardStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.UpdateTenderVendorAwardStatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.UpdateTenderVendorAwardStatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.GetGroupProjectInformationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.GetGroupProjectInformationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GetGroupProjectInformationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.UpdateGroupProjectInformationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.UpdateGroupProjectInformationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.UpdateGroupProjectInformationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.CreateGroupProjectContractCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.CreateGroupProjectContractCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CreateGroupProjectContractCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.UpdateGroupProjectContractCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.UpdateGroupProjectContractCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.UpdateGroupProjectContractCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.GetGroupProcurementInformationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.GetGroupProcurementInformationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.GetGroupProcurementInformationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.UpdateGroupProcurementInformationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.UpdateGroupProcurementInformationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.UpdateGroupProcurementInformationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.CreateGroupProcurementContractCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.CreateGroupProcurementContractCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.CreateGroupProcurementContractCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.UpdateGroupProcurementContractCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.CRVTenderService.UpdateGroupProcurementContractCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.CRVTenderService.UpdateGroupProcurementContractCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.Resources.Notifications">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Notifications.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Notifications.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Notifications.User_ResetPasswordBody">
             <summary>
               Looks up a localized string similar to Dear {0},
            
            Your password for the Anacle.EAM system has being resetted successfully.
            
            Please use the following password to login : {1}.
             </summary>
        </member>
        <member name="P:LogicLayer.Resources.Notifications.User_ResetPasswordSubject">
            <summary>
              Looks up a localized string similar to Password Reset for the Anacle.EAM system.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Notifications.Work_EscalationAckBody">
             <summary>
               Looks up a localized string similar to Dear {0},
            
            The job {ObjectNumber} is still pending acknowledgement. The details of the job are as follows:
            
            Location Path     : {Location.Path}
            Equipment Path  : {Equipment.Path}
            Job Description: {WorkDescription}
            
            Type of Job   : {TypeOfWork.ObjectName}
            Type of Service : {TypeOfService.ObjectName}
            Type of Problem : {TypeOfProblem.ObjectName}
            Priority        : {Priority}
            
            Scheduled Start : {ScheduledStartDateTime}
            Scheduled End   : {ScheduledEndDateTime}
            
            ------------------------------------ [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:LogicLayer.Resources.Notifications.Work_EscalationAckSubject">
            <summary>
              Looks up a localized string similar to Job {0} - Escalation, still pending acknowledgement.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Notifications.Work_EscalationArrBody">
             <summary>
               Looks up a localized string similar to Dear {0},
            
            The job {ObjectNumber} is still pending arrival on-site. The details of the job are as follows:
            
            Location Path   : {Location.Path}
            Equipment Path  : {Equipment.Path}
            Job Description: {WorkDescription}
            
            Type of Job    : {TypeOfWork.ObjectName}
            Type of Service : {TypeOfService.ObjectName}
            Type of Problem : {TypeOfProblem.ObjectName}
            Priority        : {Priority}
            
            Scheduled Start : {ScheduledStartDateTime}
            Scheduled End   : {ScheduledEndDateTime}
            
            ------------------------------------- [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:LogicLayer.Resources.Notifications.Work_EscalationArrSubject">
            <summary>
              Looks up a localized string similar to Job {0} - Escalation, still pending arrived on-site.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Notifications.Work_EscalationComBody">
             <summary>
               Looks up a localized string similar to Dear {0},
            
            The job {ObjectNumber} is still pending completion. The details of the job are as follows:
            
            Location Path   : {Location.Path}
            Equipment Path  : {Equipment.Path}
            Job Description: {WorkDescription}
            
            Type of Job       : {TypeOfWork.ObjectName}
            Type of Service : {TypeOfService.ObjectName}
            Type of Problem : {TypeOfProblem.ObjectName}
            Priority        : {Priority}
            
            Scheduled Start : {ScheduledStartDateTime}
            Scheduled End   : {ScheduledEndDateTime}
            
            --------------------------------------- [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:LogicLayer.Resources.Notifications.Work_EscalationComSubject">
            <summary>
              Looks up a localized string similar to Job {0} - Escalation, still pending completion.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Notifications.Work_NotifyExecutionBody">
            <summary>
              Looks up a localized string similar to Job Number {0} -has been accepted and assigned..
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Notifications.Work_NotifyExecutionSubject">
            <summary>
              Looks up a localized string similar to Job Number {0} -has been accepted and assigned..
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Notifications.Work_SmsNotifyExecution">
            <summary>
              Looks up a localized string similar to Dear {0},Job {1} - Pending your execution. Priority: {2} Descr: {3}.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Notifications.Work_SmsNotifyPendingPlanning">
            <summary>
              Looks up a localized string similar to Dear {0}, Job {1} - Pending your planning. Priority: {2} Descr: {3}.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Notifications.Work_SmsNotifySupervisorForSMM">
            <summary>
              Looks up a localized string similar to Dear {0}, Job {1} - Pending your planning. Priority: {2} Descr: {3}.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Notifications.Work_SmsNotifyTechnicianForSMM">
            <summary>
              Looks up a localized string similar to Dear {0},Job {1} - Pending your execution. Priority: {2} Descr: {3}.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Notifications.Work_SmsSupervisorNotify">
            <summary>
              Looks up a localized string similar to Dear {0}, Job {1} has been assigned. Please update status.
            </summary>
        </member>
        <member name="T:LogicLayer.TServiceLevelDetail">
            <summary>
            Summary description for OChecklist
            </summary>
        </member>
        <member name="T:LogicLayer.OServiceLevelDetail">
            <summary>
            Represents a set up of acknowledgement, arrival and completion
            time limits by the type of service and priority. 
            </summary>
        </member>
        <member name="P:LogicLayer.OServiceLevelDetail.ServiceLevelID">
            <summary>
            [Column] Gets or sets the foreign key to the ServiceLevel table 
            that indicates 
            </summary>
        </member>
        <member name="P:LogicLayer.OServiceLevelDetail.StepNumber">
            <summary>
            [Column] Gets or sets the step number of this service level.
            </summary>
        </member>
        <member name="P:LogicLayer.OServiceLevelDetail.Priority">
            <summary>
            [Column] Gets or sets the priority of the work this set of
            limits will apply to.
            </summary>
        </member>
        <member name="P:LogicLayer.OServiceLevelDetail.TypeOfServiceID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table 
            that indicates the type of service of the work this
            set of limits will apply to.
            </summary>
        </member>
        <member name="P:LogicLayer.OServiceLevelDetail.AcknowledgementLimitInMinutes">
            <summary>
            [Column] Gets or sets the acknowledgement time in minutes.
            </summary>
        </member>
        <member name="P:LogicLayer.OServiceLevelDetail.ArrivalLimitInMinutes">
            <summary>
            [Column] Gets or sets the arrival time in minutes.
            </summary>
        </member>
        <member name="P:LogicLayer.OServiceLevelDetail.CompletionLimitInMinutes">
            <summary>
            [Column] Gets or sets the completion time in minutes.
            </summary>
        </member>
        <member name="P:LogicLayer.OServiceLevelDetail.TypeOfService">
            <summary>
            Gets or sets the OCode object that represents
            the type of service of the work this
            set of limits will apply to.
            </summary>
        </member>
        <member name="T:LogicLayer.TScheduledWorkCost">
            <summary>
            Summary description for OVendor
            </summary>
        </member>
        <member name="T:LogicLayer.OScheduledWorkCost">
            <summary>
            Represents information about the costs of the maintenance work 
            that will be associated with the works created by the scheduled 
            work object. Each scheduled work cost record can represent one
            of the following types: a craft, a material from store, or
            an adhoc cost.
            </summary>
        </member>
        <member name="M:LogicLayer.OScheduledWorkCost.RecomputeEstimatedTotal">
            <summary>
            Recompute the estimated and actual total. This should
            only be called after the cost has been updated.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.ScheduledWorkID">
            <summary>
            [Column] Gets or sets the foreign key to the ScheduledWork table 
            that indicates the scheduled work object that contains this record.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.CostType">
            <summary>
            [Column] Gets or sets a value that indicates the type of 
            cost that this record represents. 
            <para></para>
            <list>
              <item>0 - Craft of a technician. The actual technician is 
            not specified when creating a scheduled work.</item>
              <item>1 - Obsolete, not used anymore.</item>
              <item>2 - Others.</item>
              <item>3 - Material</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.PartID">
            <summary>
            [Column] This is obsolete and not in use.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.CraftID">
            <summary>
            [Column] Gets or sets the foreign key to the Craft table 
            that indicates the craft of the technicians that this
            cost is associated with. This is applicable only if
            CostType = 0.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.UserID">
            <summary>
            [Column] This is obsolete and not in use.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.FixedRateID">
            <summary>
            [Column] This is obsolete and not in use.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.UnitOfMeasureID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table 
            that indicates the unit of measure that this material
            will be checked out from the store as. This is applicable
            only if CostType = 3.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.StoreID">
            <summary>
            [Column] Gets or sets the foreign key to the Store table 
            that indicates the store that the material for this cost
            item will be checked out from. This is applicable
            only if CostType = 3.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.StoreBinID">
            <summary>
            [Column] Gets or sets the foreign key to the StoreBin table 
            that indicates the bin that the material for this cost
            item will be checked out from. This is applicable
            only if CostType = 3.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.CatalogueID">
            <summary>
            [Column] Gets or sets the foreign key to the Catalogue table 
            that indicates the catalogue of the material that will be
            checked out. This is applicable
            only if CostType = 3.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.CostDescription">
            <summary>
            [Column] Gets or sets the description of this cost item.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.EstimatedOvertime">
            <summary>
            [Column] Gets or sets a value that indicates whether 
            the technician is expected to work overtime for this
            scheduled work. 
            <para></para>
            <list>
              <item>0 - No, technician is not expected to work overtime.</item>
              <item>1 - Yes, technician is expected to work overtime.</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.EstimatedUnitCost">
            <summary>
            [Column] Gets or sets the estimated unit cost of this cost
            item. If CostType = 0, this represents the estimated hourly
            rate of technicians of the specified craft.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.EstimatedCostFactor">
            <summary>
            [Column] Gets or sets a cost factor applied to the cost
            to give the final cost.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.EstimatedQuantity">
            <summary>
            [Column] Gets or sets estimated quantity required
            to complete maintenance of works created by this
            scheduled work.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.EstimatedCostTotal">
            <summary>
            [Column] Gets or sets the estimated total for this cost
            item. This can be computed by taking EstimatedUnitCost x
            EstimatedCostFactor x EstimatedQuantity.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.Store">
            <summary>
            Gets or sets the OStore object that represents 
            the store that the material for this cost
            item will be checked out from. This is applicable
            only if CostType = 3.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.StoreBin">
            <summary>
            Gets or sets the OStoreBin object that represents
            the bin that the material for this cost
            item will be checked out from. This is applicable
            only if CostType = 3.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.ScheduledWork">
            <summary>
            Gets or sets the OScheduledWork object that represents
            indicates the scheduled work object that contains this record.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.Craft">
            <summary>
            Gets or sets the OCraft object that represents
            the craft of the technicians that this
            cost is associated with. This is applicable only if
            CostType = 0.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.Technician">
            <summary>
            [Column] This is obsolete and not in use.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.FixedRate">
            <summary>
            [Column] This is obsolete and not in use.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.Catalogue">
            <summary>
            Gets or sets the OCatalogue object that represents
            the catalogue of the material that will be
            checked out. This is applicable
            only if CostType = 3.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.UnitOfMeasure">
            <summary>
            Gets or sets the OCode object that represents
            the unit of measure that this material
            will be checked out from the store as. This is applicable
            only if CostType = 3.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.EstimatedSubTotal">
            <summary>
            Gets the estimated sub total of this cost item.
            This is be computed by taking EstimatedUnitCost x
            EstimatedCostFactor x EstimatedQuantity.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.CostTypeName">
            <summary>
            Gets the localized text for the type of cost.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkCost.CraftStore">
            <summary>
            Gets the name of the craft (if CostType = 0) or the
            name of the store (if CostType = 3).
            </summary>
        </member>
        <member name="T:LogicLayer.OCatalogue">
            <summary>
            Represents a master catalogue of store items that can be tracked
            by this system. Apart from tracking stock code, manufacturer 
            information, this also tracks the standard unit price for this 
            item, which may then be used in a purchase agreement to cost 
            for purchase of store items in a purchase order.
            </summary>
            <summary>
            Represents a master catalogue of store items that can be tracked
            by this system. Apart from tracking stock code, manufacturer 
            information, this also tracks the standard unit price for this 
            item, which may then be used in a purchase agreement to cost 
            for purchase of store items in a purchase order.
            </summary>
        </member>
        <member name="M:LogicLayer.OCatalogue.IsDeactivableAnywhere">
            <summary>
            Returns a flag to indicate if this Catalog is deactivatable.
            It is NOT deactivatable when:
            1. There is at least a store item that is tied to this catalog.
            2. There are undeleted contracts tied to this catalog.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCatalogue.IsDeactivatable">
            <summary>
            Disallows delete if:
            1. There is at least a store item that is tied to this catalog.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCatalogue.FindCatalogue(System.Boolean,System.String,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCatalogue.Saving">
            <summary>
            Set object number as - if it is a catalogue group 
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.IsCatalogueItem">
            <summary>
            [Column] Gets or sets a value that indicates whether this
            catalogue item is catalogue type or a physical item.
            <para></para>
            	<list>
            		<item>0 - Catalogue Type</item>
            		<item>1 - Catalogue Item</item>
            	</list>
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.IsGeneratedFromEquipmentType">
            <summary>
            [Column] Gets or sets a flag that indicates whether
            this catalog object is automatically generated 
            from an equipment type.
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.StockCode">
            <summary>
            [Column] Gets or sets the stock code of this catalogue
            item.
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.Manufacturer">
            <summary>
            [Column] Gets or sets manufacture of this item.
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.Model">
            <summary>
            [Column] Gets or sets model of this item.
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.UnitOfMeasureID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table.
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.EquipmentTypeID">
            <summary>
            [Column] Gets or sets the foreign key to the EquipmentType
            table.
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.InventoryCatalogType">
            <summary>
            [Column] Gets or sets a value indicating the type
            of the inventory catalog
            <list>
                <item>0 - Consumable (like bulbs, lamps, wires)</item>
                <item>1 - Non-Consumable (like chairs, tables)</item>
                <item>2 - Equipment (like air-condition, AHU, HVACs, elevators)</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.UnitPrice">
            <summary>
            [Column] Gets or sets the standard unit price in dollar value 
            of this catalogue item.
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.Children">
            <summary>
            Gets a one-to-many list of OCatalogue objects that represents
            the next level catalogue items under this current item.
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.Parent">
            <summary>
            Gets or sets the OCatalogue object that represents the 
            parent catalogue that this current item belongs under.
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.UnitOfMeasure">
            <summary>
            Gets or sets the OCode object that represents the unit of measure that the catalogue item belongs to.
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.EquipmentType">
            <summary>
            Gets the equipment type associated with this catalog.
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.InventoryCatalogTypeText">
            <summary>
            [Column] 
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.IsCatalogueItemText">
            <summary>
            Gets a Yes/No text indicating whether this item is a catalogue item.
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.DeletedItemsPath">
            <summary>
            Gets the parent path up until this node in the catalogue tree.
            
            This differs from the normal Path property in that it shows
            the path of the entire tree if the 
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.DefaultChargeOut">
            <summary>
            [Column] Gets or sets the DefaultChargeOut.
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.PremiumType">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.IsRemovedAfterExpended">
            <summary>
            [Column] Gets or sets the IsRemovedAFterExpended.
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.IsSharedAcrossAllStores">
            <summary>
            [Column] Gets or sets the IsSharedAcrossAllStores.
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.ObtainedMethod">
            <summary>
            [Column] Gets or sets the method this catalog
            was obtained from.
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.HasInputTax">
            <summary>
            [Column] Gets or sets the method whether this catalog
            item has input tax or not.
            <list>
                <items>0 - No </items>
                <items>1 - Yes </items>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.Store">
            <summary>
            Gets a list of stores 
            </summary>
        </member>
        <member name="P:LogicLayer.OCatalogue.TaskLocations">
            <summary>
            Gets the location indicated by this catalogue.
            </summary>
        </member>
        <member name="T:LogicLayer.InventoryCatalogType">
            <summary>
            Contains values enumerating all inventory catalog types.
            </summary>
        </member>
        <member name="F:LogicLayer.InventoryCatalogType.Consumable">
            <summary>
            A consumable inventory. Consumables are inventory
            that can be consumed in a Work object for maintenance.
            They cannot be issued to an Issue Location store.
            <para></para>
            Each consumable inventory is a collection and individual
            items are not tracked separately.
            <para></para>
            Examples of consumables are bulbs, lamps, wires and
            other spare parts.
            </summary>
        </member>
        <member name="F:LogicLayer.InventoryCatalogType.NonConsumable">
            <summary>
            A non-consumable inventory. Non-consumables are inventory
            that cannot be consumed in a Work object for maintenance.
            They can be issued to an Issue Location store.
            <para></para>
            Each non-consumable is a collection, and individual items
            are not tracked separately.
            <para></para>
            Examples of non-consumables are chairs, tables, television,
            and minor equipment.
            </summary>
        </member>
        <member name="F:LogicLayer.InventoryCatalogType.Equipment">
            <summary>
            An equipment inventory. Equipment are capital expenditure
            items that cannot be used in a Work object for maintenance.
            They can be issued to an Issue Location store.
            <para></para>
            Each equipment inventory represents 1 unit of that equipment.
            Multiple equipment in the same store are represented by multiple
            StoreBinItem records.
            <para></para>
            Examples of non-consumables are chairs, tables, television,
            and minor equipment.
            </summary>
        </member>
        <member name="T:LogicLayer.MessageTemplateUsage">
            <summary>
            Enumerates the possible usage for a message template.
            </summary>
        </member>
        <member name="F:LogicLayer.MessageTemplateUsage.General">
            <summary>
            The message template is used generally and usually
            called from the source code.
            </summary>
        </member>
        <member name="F:LogicLayer.MessageTemplateUsage.NotifyAssignedWorkflowRecipients">
            <summary>
            The message template is used in a workflow to notify
            assigned recipients when a workflow enters a new state 
            and the SetStateAndAssign or SetStateAndAssignApprovers 
            is called.
            </summary>
        </member>
        <member name="T:LogicLayer.TCase">
            <summary>
            Summary description for OVendor
            </summary>
            <summary>
            Summary description for TCase
            </summary>
        </member>
        <member name="T:LogicLayer.OCase">
            <summary>
            Summary description for OCase
            </summary>
        </member>
        <member name="M:LogicLayer.OCase.Saving">
            <summary>
            Called just before the object is saved.
            </summary>
        </member>
        <member name="M:LogicLayer.OCase.Saved">
            <summary>
            Create the related Works/RFQs/POs.
            </summary>
        </member>
        <member name="M:LogicLayer.OCase.SaveRelatedDocumentsAsDraft">
            <summary>
            Creates the related documents such as works, RFQs and POs.
            </summary>
        </member>
        <member name="M:LogicLayer.OCase.ValidateCaseNotClosedOrCancelled(System.Nullable{System.Guid})">
            <summary>
            Validates that the case with the specified ID is not
            closed or cancelled, or that the case does not exist.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCase.ValidateAllDocumentsClosedOrCancelled">
            <summary>
            Validates to ensure that all documents are closed
            or cancelled. Returns true if so, false otherwise.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:LogicLayer.OCase.CloseCaseWhenAllDocumentsClosedOrCancelled(System.Nullable{System.Guid})">
            <summary>
            
            </summary>
            <param name="caseId"></param>
        </member>
        <member name="M:LogicLayer.OCase.GetAccessibleOpenCases(LogicLayer.OUser,System.String,System.Nullable{System.Guid})">
            <summary>
            Gets a list of all cases accessible by the user.
            </summary>
            <param name="user"></param>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OCase.LocationID">
            <summary>
            [Column] Gets or sets the foreign key to the location table.
            </summary>
        </member>
        <member name="P:LogicLayer.OCase.EquipmentID">
            <summary>
            [Column] Gets or sets the foreign key to the equipment table.
            </summary>
        </member>
        <member name="P:LogicLayer.OCase.RequestorID">
            <summary>
            [Column] Gets or sets the foreign key to the user table.
            </summary>
        </member>
        <member name="P:LogicLayer.OCase.RequestorType">
            <summary>
            [Column] Gets or sets the requestor type.
            </summary>
        </member>
        <member name="P:LogicLayer.OCase.RequestorName">
            <summary>
            [Column] Gets or sets the requestor name.
            </summary>
        </member>
        <member name="P:LogicLayer.OCase.RequestorCellPhone">
            <summary>
            [Column] Gets or sets the requestor cell phone.
            </summary>
        </member>
        <member name="P:LogicLayer.OCase.RequestorFax">
            <summary>
            [Column] Gets or sets the requestor fax number.
            </summary>
        </member>
        <member name="P:LogicLayer.OCase.RequestorEmail">
            <summary>
            [Column] Gets or sets the requestor email address.
            </summary>
        </member>
        <member name="P:LogicLayer.OCase.RequestorPhone">
            <summary>
            [Column] Gets or sets the requestor phone number.
            </summary>
        </member>
        <member name="P:LogicLayer.OCase.Priority">
            <summary>
            [Column] Gets or sets the priority of this case object.
            </summary>
        </member>
        <member name="P:LogicLayer.OCase.ProblemDescription">
            <summary>
            [Column] Gets or sets the description for this case.
            </summary>
        </member>
        <member name="P:LogicLayer.OCase.IsAutoClose">
            <summary>
            [Column] Gets or sets the flag that indicates whether
            this case should automatically transit to "Close" status
            when all objects: OWork, ORequestForQuotation, OPurchaseOrder
            are at status "Close" or "Cancelled".
            </summary>
        </member>
        <member name="P:LogicLayer.OCase.ReportedDateTime">
            <summary>
            [Column] Gets or sets the date/time that this case
            was reported by the user.
            </summary>
        </member>
        <member name="P:LogicLayer.OCase.CompletionDateTime">
            <summary>
            [Column] Gets or sets the date/time that this case
            was completed and closed.
            </summary>
        </member>
        <member name="P:LogicLayer.OCase.Location">
            <summary>
            Gets or sets the location associated with this case.
            </summary>
        </member>
        <member name="P:LogicLayer.OCase.Equipment">
            <summary>
            Gets or sets the equipment associated with this case.
            </summary>
        </member>
        <member name="P:LogicLayer.OCase.Works">
            <summary>
            Gets a one-to-many list of OWork objects that represents the list 
            of works associated with this case.
            </summary>
        </member>
        <member name="P:LogicLayer.OCase.RequestForQuotations">
            <summary>
            Gets a one-to-many list of ORequestForQuotation objects that represents the list 
            of request for quotations associated with this case.
            </summary>
        </member>
        <member name="P:LogicLayer.OCase.PurchaseOrders">
            <summary>
            Gets a one-to-many list of OPurchaseOrder objects that represents the list 
            of purchase orders associated with this case.
            </summary>
        </member>
        <member name="P:LogicLayer.OCase.TaskLocations">
            <summary>
            Gets the location associated with this Case.
            </summary>
        </member>
        <member name="P:LogicLayer.OCase.TaskEquipments">
            <summary>
            Gets the location associated with this Case.
            </summary>
        </member>
        <member name="P:LogicLayer.OCase.RequestorHistoryForOneMonth">
            --------------------------------------------------------------
            <summary>
            Get the Requestor history based on the Requestor ID for the past
            month.
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="P:LogicLayer.OCase.LocationHistoryForOneMonth">
            --------------------------------------------------------------
            <summary>
            Get the location history based on the location ID for the past
            month.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="T:LogicLayer.TOperatingUnit">
            <summary>
            Summary description for OOperatingUnit
            </summary>
        </member>
        <member name="T:LogicLayer.OOperatingUnit">
            <summary>
            Represents an operating unit.
            </summary>
        </member>
        <member name="P:LogicLayer.OBackgroundServiceRun.LastRunStatusText">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OBackgroundServiceRun.CurrentStatusText">
            <summary>
            
            </summary>
        </member>
        <member name="T:Pop3.Pop3Component">
            <summary>
            Summary description for Pop3Attachment.
            </summary>
        </member>
        <member name="T:LogicLayer.ORFQBudgetReallocationFrom">
            <summary>
            Represents the money that will be reallocated from the specified
            budget account.
            </summary>
        </member>
        <member name="P:LogicLayer.ORFQBudgetReallocationFrom.RFQBudgetReallocationFromPeriodID">
            <summary>
            [Column] Gets or sets the foreign key to the 
            budget reallocation record that this detail belongs under.
            </summary>
        </member>
        <member name="P:LogicLayer.ORFQBudgetReallocationFrom.AccountID">
            <summary>
            [Column] Gets or sets the budget account that this
            money is reallocated from.
            </summary>
        </member>
        <member name="P:LogicLayer.ORFQBudgetReallocationFrom.Interval01Amount">
            <summary>
            [Column] Gets or sets the amount to reallocate in one of
            the 36 intervals in the budget period.
            </summary>
        </member>
        <member name="P:LogicLayer.ORFQBudgetReallocationFrom.TotalAmount">
            <summary>
            [Column] Gets or sets the total amount reallocationed.
            </summary>
        </member>
        <member name="T:LogicLayer.TACGDataCarPark">
            <summary>
            Summary description for TACGDataCarPark
            </summary>
        </member>
        <member name="T:LogicLayer.OACGDataCarPark">
            <summary>
            Summary description for OACGDataCarPark
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataCarPark.ACGDataID">
            <summary>
            [Column] Gets or sets the ACGDataID.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataCarPark.Month">
            <summary>
            [Column] Gets or sets the Month.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataCarPark.TotalNumberOfLots">
            <summary>
            [Column] Gets or sets the TotalNumberOfLots.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataCarPark.SeasonLotSold">
            <summary>
            [Column] Gets or sets the SeasonLotSold.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataCarPark.TenantRateInclGST">
            <summary>
            [Column] Gets or sets the TenantRateInclGST.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataCarPark.NonTenantRateInclGST">
            <summary>
            [Column] Gets or sets the NonTenantRateInclGST.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataCarPark.PerEntryCost">
            <summary>
            [Column] Gets or sets the PerEntryCost.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataCarPark.ACGData">
            <summary>
            [Column] Gets or sets the ACGData
            </summary>
        </member>
        <member name="M:LogicLayer.OBMSTransmissionStatus.isBMSCodeDuplicated(System.String,System.Collections.Hashtable,System.Decimal)">
            <summary>
            
            </summary>
            <param name="BMSCode"></param>
            <param name="ListBMSCode"></param>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBMSTransmissionStatus.SaveBMSTransmissionStatus(LogicLayer.OBMSTransmissionStatus,System.Int32)">
            <summary>
            
            </summary>
            <param name="BMSTransmissionStatus"></param>
            <param name="Status"></param>
        </member>
        <member name="M:LogicLayer.ORole.GetAllRoles">
            <summary>
            Gets a list of all roles.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORole.Saved">
            <summary>
            Overrides the Saved method to clear the FunctionID/RoleID of the 
            removed ORoleFunction objects.
            </summary>
        </member>
        <member name="M:LogicLayer.ORole.IsDuplicateRoleCode">
            <summary>
            Determines if this role is a duplicate of another
            role with the same role code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORole.GetRolesByPosition(LogicLayer.OPosition)">
            <summary>
            Get all roles that the specified position is associated to
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ORole.Saving">
            <summary>
            When user create a new role and save it to database,
            a position associtated to this role is automatically created
            with position name is same as the RoleCode of this role.
            </summary>
        </member>
        <member name="M:LogicLayer.ORole.Deactivated">
            <summary>
            Removes all positions that are currently associated
            to this role.
            </summary>
        </member>
        <member name="P:LogicLayer.ORole.AssignableRoles">
            <summary>
            Gets a list of ORole objects representing the list of 
            roles that a user of the current role is allowed to grant to 
            or revoke from other users when creating or editing
            a user record.
            </summary>
        </member>
        <member name="P:LogicLayer.ORole.RoleCode">
            <summary>
            [Column] Gets or sets the role code that is
            used by the application to identify this role.
            </summary>
        </member>
        <member name="P:LogicLayer.ORole.RoleName">
            <summary>
            [Column] Gets or sets the role name of this
            role.
            </summary>
        </member>
        <member name="P:LogicLayer.ORole.RoleFunctions">
            <summary>
            Gets the list of ORoleFunction objects that represent
            the list of functions and create/edit/view/delete rights
            that this role has been granted access to.
            </summary>
        </member>
        <member name="P:LogicLayer.ORole.ReportRole">
            <summary>
            Gets the list of OReport objects that represents the list
            of reports that this role has been granted access
            to.
            </summary>
        </member>
        <member name="P:LogicLayer.ORole.DashboardRole">
            <summary>
            Gets the list of ODashboard objects that represents
            the list of dashboards that this role has been granted
            access to.
            </summary>
        </member>
        <member name="P:LogicLayer.ORole.Positions">
            <summary>
            Gets or sets the positions associated
            with this role.
            </summary>
        </member>
        <member name="T:LogicLayer.OBill">
            <summary>
            Represents the Bill for an OPC point obtained
            from the server, entered by a user through the work
            module, or entered by the user through the Point module.
            </summary>
            <summary>
            Represents the Bill for an OPC point obtained
            from the server, entered by a user through the work
            module, or entered by the user through the Point module.
            </summary>
        </member>
        <member name="M:LogicLayer.OBill.GenerateNextBatchID">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBill.GenerateNextBatchNumber">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBill.CreateBill(LogicLayer.OReading,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="reading"></param>
            <param name="batchID"></param>
            <param name="batchNo"></param>
        </member>
        <member name="M:LogicLayer.OBill.AddBillItem(System.Nullable{System.Guid},LogicLayer.OReading)">
            <summary>
            
            </summary>
            <param name="BillID"></param>
            <param name="reading"></param>
        </member>
        <member name="M:LogicLayer.OBill.TotalBillCharge">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OBill.BillStatus">
            <summary>
            
            </summary>
        </member>
        <member name="T:LogicLayer.ExcelWebServices.ExcelReaderWebService">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExcelWebServices.ExcelReaderWebService.#ctor">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExcelWebServices.ExcelReaderWebService.ExcelToDataTable(System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExcelWebServices.ExcelReaderWebService.ExcelToDataTableAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExcelWebServices.ExcelReaderWebService.ExcelToDataTableAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:LogicLayer.ExcelWebServices.ExcelReaderWebService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:LogicLayer.ExcelWebServices.ExcelReaderWebService.ExcelToDataTableCompleted">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExcelWebServices.ExcelToDataTableCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:LogicLayer.ExcelWebServices.ExcelToDataTableCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:LogicLayer.ExcelWebServices.ExcelToDataTableCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:LogicLayer.OUtility">
            <summary>
            Represents a single bill consisting of multiple line items of 
            readings, consumption and cost.
            </summary>
        </member>
        <member name="M:LogicLayer.OUtility.Saving">
            <summary>
            Remove any UtilityValue object from the UtilityValues list if it does not have a value
            </summary>
        </member>
        <member name="P:LogicLayer.OUtility.LocationID">
            <summary>
            [Column] Gets or sets the foreign key to the Location table 
            that indicates the location that this utility entry applies
            to.
            </summary>
        </member>
        <member name="P:LogicLayer.OUtility.Description">
            <summary>
            [Column] Gets or sets a description for this utility entry.
            </summary>
        </member>
        <member name="P:LogicLayer.OUtility.StartDate">
            <summary>
            [Column] Gets or sets the starting date this utility entry
            is applicable from. Usually, this is the starting date of
            the utility bill.
            </summary>
        </member>
        <member name="P:LogicLayer.OUtility.EndDate">
            <summary>
            [Column] Gets or sets the end date this utility entry
            is applicable from. Usually, this is the end date of
            the utility bill.
            </summary>
        </member>
        <member name="P:LogicLayer.OUtility.UtilityValues">
            <summary>
            Gets a one-to-many list of OUtilityValue objects that represents
            a list of consumptions readings or costs.
            </summary>
        </member>
        <member name="P:LogicLayer.OUtility.Location">
            <summary>
            Gets or sets the OLocation object that represents
            the location that this utility entry applies to.
            </summary>
        </member>
        <member name="M:LogicLayer.OCustomizedObjectConsumer.GetCustomizedAttributeFields(System.String,System.Guid,System.Boolean)">
            <summary>
            
            </summary>
            <param name="attachedObjectName"></param>
            <param name="attachedPropertyID"></param>
            <param name="excludeNoneField">indicate whether to include field without value such as separator</param>
        </member>
        <member name="M:LogicLayer.OCustomizedObjectConsumer.PopulateCustomizedFieldList(LogicLayer.OCustomizedField,System.Web.UI.Control)">
            <summary>
            Populate data of all list in the object record
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
        </member>
        <member name="M:LogicLayer.OCustomizedObjectConsumer.BindToList``1(Anacle.UIFramework.UIFieldDropDownList,``0)">
            ------------------------------------------------------------------
            <summary>
            Bind to a dropdown list
            </summary>
            <param name="c"></param>
            <param name="dataSource"></param>
            <param name="textField"></param>
            <param name="valueField"></param>
            ------------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OCustomizedObjectConsumer.BindToList``1(Anacle.UIFramework.UIFieldRadioList,``0)">
            ------------------------------------------------------------------
            <summary>
            Bind to a radio list
            </summary>
            <param name="c"></param>
            <param name="dataSource"></param>
            <param name="textField"></param>
            <param name="valueField"></param>
            ------------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OCustomizedObjectConsumer.GetAttachedObjectSetting(System.String)">
            <summary>
            return setting on attached property name, tabview ID of the attribute object
            </summary>
            <param name="editObjectTable"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OCustomizedObjectConsumer.GetAttachedObjectAttributeID(System.String,System.String,System.Guid)">
            <summary>
            return the attribute id of the edit object from database
            </summary>
            <param name="mainObject"></param>
            <param name="editObjectTable"></param>
            <param name="mainObjectID"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OFunction.Saved">
            <summary>
            Overrides the Saved method to clear the FunctionID/RoleID of the 
            removed ORoleFunction objects.
            </summary>
        </member>
        <member name="M:LogicLayer.OFunction.Deactivated">
            <summary>
            Removes all positions that are currently associated
            to this role.
            </summary>
        </member>
        <member name="M:LogicLayer.OFunction.GetAllFunction">
            <summary>
            Gets list of all functions which sorted by Object Type
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OFunction.IsDuplicateObjectType">
            <summary>
            Determines if this function is a duplicate function
            based on the object type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OFunction.ListFunctionName">
            <summary>
            Queries all function names and returns
            them in a DataView.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OFunction.GetAllFunctions">
            <summary>
            Gets a list of all functions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OFunction.GetFunctionByObjectType(System.String)">
            <summary>
            Gets a function based on the object type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OFunction.GetRoleCodes(System.String)">
            <summary>
            Gets a list of role codes of the roles
            associated with this function.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OFunction.GetMenusAccessibleByUser(LogicLayer.OUser)">
            <summary>
            Gets the function menus accessible by the user and returns
            it as a DataTable.
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OFunction.GetFunctionsCreateableByUser(LogicLayer.OUser)">
            <summary>
            Gets a list of all functions createable by the specified
            user.
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OFunction.GetAllFunctionsWithObjectTypes">
            <summary>
            Gets and returns a list of functions with a specified object
            type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OFunction.GetAllObjectTypeNames(System.String)">
            <summary>
            Gets and returns a list of all object type names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OFunction.GetObjectTypeNamesByImplementation(System.String,System.Type)">
            <summary>
            Gets and returns a list of all object type names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OFunction.GetAllFunctionsWithCustomizableObjectTypes">
            <summary>
            Gets and returns a list of functions with a specified object
            type and that the object type is customizable.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OFunction.FunctionName">
            <summary>
            [Column] Gets or sets the name of the function.
            </summary>
        </member>
        <member name="P:LogicLayer.OFunction.CategoryName">
            <summary>
            [Column] Gets or sets the name of the category.
            </summary>
        </member>
        <member name="P:LogicLayer.OFunction.SubCategoryName">
            <summary>
            [Column] Gets or sets the name of the sub category. 
            This field is optional.
            </summary>
        </member>
        <member name="P:LogicLayer.OFunction.ObjectTypeName">
            <summary>
            [Column] Gets or sets the ObjectType of the Function
            </summary>
        </member>
        <member name="P:LogicLayer.OFunction.MainUrl">
            <summary>
            [Column] Gets or sets the Url of the Main page
            </summary>
        </member>
        <member name="P:LogicLayer.OFunction.EditUrl">
            <summary>
            [Column] Gets or sets the Url of the Edit page
            </summary>
        </member>
        <member name="P:LogicLayer.OFunction.IsCustomizable">
            <summary>
            [Column] Gets or sets a flag indicating whether
            the object editable by this function is customizable
            or not.
            </summary>
        </member>
        <member name="P:LogicLayer.OFunction.DisplayOrder">
            <summary>
            [Column] Gets or sets displayed order of the function
            </summary>
        </member>
        <member name="P:LogicLayer.OFunction.RoleFunctions">
            <summary>
            [One-to-One Join OPCPoint.EquipmentID = Equipment.ObjectID]
            Gets a list of ORoleFunction objects representing
            the list of roles that have access to this function.
            </summary>
        </member>
        <member name="P:LogicLayer.OFunction.CategoryAndFunctionName">
            <summary>
            Gets a string that concatenates the category and 
            the function name.
            </summary>
        </member>
        <member name="T:LogicLayer.OTenantLease">
            <summary>
            </summary>
            <summary>
            </summary>
        </member>
        <member name="M:LogicLayer.OTenantLease.TranslateStatusName(System.String)">
            <summary>
            
            </summary>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OTenantLease.FromAmosText">
            <summary>
            
            </summary>
        </member>
        <member name="T:LogicLayer.TChargeType">
            <summary>
            Summary description for TACGData
            </summary>
            <summary>
            Summary description for TACGData
            </summary>
        </member>
        <member name="T:LogicLayer.OChargeType">
            <summary>
            Summary description for OACGData
            </summary>
            <summary>
            Summary description for OACGData
            </summary>
        </member>
        <member name="M:LogicLayer.OChargeType.GetChargeTypesByInstanceID(System.String)">
            <summary>
            
            </summary>
            <param name="amosInstanceID"></param>
            <returns></returns>
        </member>
        <member name="T:LogicLayer.TSurveyResponseFrom">
            <summary>
            Summary description for OSurveyResponseFrom
            </summary>
            <summary>
            Summary description for OSurveyResponseFrom
            </summary>
        </member>
        <member name="T:LogicLayer.OOPCAEServer">
            <summary>
            Represents an OPC AE Server record that contains a group of
            points. 
            </summary>
        </member>
        <member name="M:LogicLayer.OOPCAEServer.IsDeactivatable">
            <summary>
            Returns a flag indicating whether the OPC AE
            server object can be deactivated. It can be deactivated
            if:
            <list>
                <item>1 - There are points associated with the
                OPC AE server object.</item>
            </list>
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OOPCAEServer.GetAllOPCAEServers">
            <summary>
            Gets a list of all OPC AE servers.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OOPCAEServer.Description">
            <summary>
            [Column] Gets or sets the description of the 
            AE server.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEServer.ReceivingEventsEnabled">
            <summary>
            [Column] Gets or sets a flag indicating whether
            this receiving events from this AE server is enabled.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEServer.SampleIntervalInMinutes">
            <summary>
            [Column] Gets or sets the sampling interval in
            the number of minutes. For performance reasons, 
            this applies to all points in this OPC AE Server
            group.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEServer.BufferTimeInMilliseconds">
            <summary>
            [Column] Gets or sets the buffer is in milliseconds. 
            This tells the server how often to send event notifications. 
            This is a minimum time - do not send event notifications 
            any faster that this is greater than 0, in which case the 
            server will send an event notification sooner to obey the 
            dwMaxSize parameter. 
            <para></para>
            A value of 0 means that the server should send event 
            notifications as soon as it gets them. 
            This parameter along with the dwMaxSize parameter are 
            used to improve communications efficiency between client 
            and server. 
            <para></para>
            This parameter is a recommendation from the client, and 
            the server is allowed to ignore the parameter. 
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEServer.MaxNumberOfEventsPerCallback">
            <summary>
            [Column] The requested maximum number of events that will 
            be sent in a single callback. A value of 0 means that there is 
            no limit to the number of events that will be sent in a single 
            callback. 
            <para></para>
            Note that a value greater than 0, may cause the server to 
            call the OnEvent callback more frequently than specified in the BufferTime 
            parameter when a large number of events are being generated in 
            order to limit the number of events to the MaxSize. 
            <para></para>
            This parameter is a recommendation from the client and the server is 
            allowed to ignore this parameter. 
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEServer.NumberOfMinutesToKeepHistory">
            <summary>
            [Column] Gets or sets the number of minutes to
            keep the reading history. For performance reasons, 
            this applies to all points in this OPC AE Server
            group.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEServer.OPCAEEvents">
            <summary>
            Gets a list of OPoint objects represent the
            list of points associated with this OPC AE
            server.
            </summary>
        </member>
        <member name="P:LogicLayer.OOPCAEServer.ReceivingEventsEnabledText">
            <summary>
            Returns a string of text representing whether
            receiving events from this AE server is enabled.
            </summary>
        </member>
        <member name="T:LogicLayer.OPurchaseSettings">
            <summary>
            Represents a purchase order object as a legal document to a
            vendor to purchase materials or services.
            </summary>
            <summary>
            Represents a purchase order object as a legal document to a
            vendor to purchase materials or services.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseSettings.Saving">
            <summary>
            Updates several fields in the purchase settings
            if the minimum number of quotations rule is
            not required.
            </summary>
        </member>
        <member name="M:LogicLayer.OPurchaseSettings.GetPurchaseSettings(LogicLayer.OLocation,LogicLayer.OCode)">
            <summary>
            Gets the most appropriate purchase settings object and
            returns it to the caller.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseSettings.GetPurchaseSettings(LogicLayer.OLocation,LogicLayer.OCode,System.Nullable{System.Guid})">
            <summary>
            Gets the most appropriate purchase settings object and
            returns it to the caller.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OPurchaseSettings.ValidateNoDuplicateLocation">
            <summary>
            Validates to ensure that no purchase settings with the
            same location exists.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OPurchaseSettings.LocationID">
            <summary>
            [Column] Gets or sets the foreign key to the Location table 
            that indicates the location where any service is to be 
            carried out in.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseSettings.PurchaseTypeID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table
            that indicates the purchase type. The purchase types usually
            describes whether or not the WJ/RFQ/PO document is a Capex,
            or a Non-Capex purchase. 
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseSettings.BudgetValidationPolicy">
            <summary>
            [Column] Gets or sets a value indicating
            the budget validation policy.
            <list>
                <item>0 - Budget consumption must be equal to line items. (default) </item>
                <item>1 - Budget consumption must be less than or equal to line items. </item>
                <item>2 - No validation. </item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseSettings.MinimumNumberOfQuotationsPolicy">
            <summary>
            [Column] Gets or sets a value indicating the policy
            of the system with respect to creating purchase orders
            from quotations.
            <para></para>
            <list>
                <item>0 - A minimum number of quotations is not required.</item>
                <item>1 - A minimum number of quotations is preferred. A warning is displayed if the minimum quotations is not satisfied.</item>
                <item>2 - A minimum number of quotations is required. </item>
            </list>
            <para></para>
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseSettings.MinimumNumberOfQuotations">
            <summary>
            [Column] Gets or sets the minimum number of quotations
            required before a Purchase Order can be created from a
            Request for Quotation. This value must be more than
            or equals to 1. At the very least, there must be at
            least 1 quotation in a Request for Quotation before
            any Purchase Order can be created anyway.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseSettings.MinimumApplicableRFQAmount">
            <summary>
            [Column] Gets or sets the minimum amount (inclusive)
            that will result in the minimum quotation policy taking effect.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseSettings.RFQToPOPolicy">
            <summary>
            [Column] Gets or sets a value indicating if a purchase order
            must be created from a request for quotation.
            <para></para>
            <list>
                <item>0 - Not required.</item>
                <item>1 - Preferred. A warning is displayed if the minimum quotations is not satisfied.</item>
                <item>2 - Required. </item>
            </list>
            <para></para>
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseSettings.MinimumApplicablePOAmount">
            <summary>
            [Column] Gets or sets the minimum amount (inclusive)
            that will result in the PO policy taking effect.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseSettings.Location">
            <summary>
            Gets or sets the OLocation object that represents
            the location where any service is to be 
            carried out in.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseSettings.PurchaseType">
            <summary>
            Gets or sets the OCode object that 
            represents the purchase type. The purchase types usually
            describes whether or not the WJ/RFQ/PO document is a Capex,
            or a Non-Capex purchase. 
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseSettings.MinimumNumberOfQuotationsPolicyText">
            <summary>
            Gets a translated text describing whether the 
            minimum number of quotations must be adhered
            to. 
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseSettings.BudgetValidationPolicyText">
            <summary>
            Gets a translated text describing the
            budget validation policy.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseSettings.RFQToPOPolicyText">
            <summary>
            Gets a translated text describing whether the 
            minimum number of quotations must be adhered
            to. 
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:LogicLayer.OPurchaseSettings.IsPOAllowedClosure" -->
        <member name="P:LogicLayer.OPurchaseSettings.InvoiceLargerThanPO">
            <summary>
            [Column] Gets or sets a flag indicating whether the invoice can be
            larger than the PO amount.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:LogicLayer.OPurchaseSettings.IsPOAllowedClosureText" -->
        <!-- Badly formed XML comment ignored for member "P:LogicLayer.OPurchaseSettings.IsInvoiceLargerThanPOText" -->
        <member name="T:LogicLayer.PurchasePolicy">
            <summary>
            Enumerates the different policies on the minimum number
            of quotations requirement.
            </summary>
        </member>
        <member name="F:LogicLayer.PurchasePolicy.NotRequired">
            <summary>
            Indicates that a minimum number of quotations
            is not required.
            </summary>
        </member>
        <member name="F:LogicLayer.PurchasePolicy.Preferred">
            <summary>
            Indicates that a minimum number of quotations
            is preferred.
            </summary>
        </member>
        <member name="F:LogicLayer.PurchasePolicy.Required">
            <summary>
            Indicates that a minimum number of quotations
            is required.
            </summary>
        </member>
        <member name="T:LogicLayer.PurchaseBudgetValidationPolicy">
            <summary>
            Enumerates the policies for the usage of budget.
            </summary>
        </member>
        <member name="F:LogicLayer.PurchaseBudgetValidationPolicy.BudgetConsumptionEqualsItems">
            <summary>
            Strict: Total budget items must be equal
            to the items' cost.
            </summary>
        </member>
        <member name="F:LogicLayer.PurchaseBudgetValidationPolicy.BudgetConsumptionLessThanItems">
            <summary>
            Total budget items must be less than the 
            </summary>
        </member>
        <member name="F:LogicLayer.PurchaseBudgetValidationPolicy.BudgetNotRequired">
            <summary>
            Budget is not required at all.
            </summary>
        </member>
        <member name="T:Pop3.Pop3Statics">
            <summary>
            Summary description for Pop3Statics.
            </summary>
        </member>
        <member name="T:LogicLayer.TACGDataRevenueItem">
            <summary>
            </summary>
        </member>
        <member name="T:LogicLayer.OACGDataRevenueItem">
            <summary>
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataRevenueItem.ACGDataRevenueID">
            <summary>
            [Column] Gets or sets the ACGDataRevenueID.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataRevenueItem.EntryType">
            <summary>
            [Column] Gets or sets the EntryType.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataRevenueItem.Month01Amount">
            <summary>
            [Column] Gets or sets the Month01Amount.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataRevenueItem.Month02Amount">
            <summary>
            [Column] Gets or sets the Month02Amount
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataRevenueItem.Month03Amount">
            <summary>
            [Column] Gets or sets the Month03Amount.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataRevenueItem.Month04Amount">
            <summary>
            [Column] Gets or sets the Month04Amount.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataRevenueItem.Month05Amount">
            <summary>
            [Column] Gets or sets the Month05Amount.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataRevenueItem.Month06Amount">
            <summary>
            [Column] Gets or sets the Month06Amount.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataRevenueItem.Month07Amount">
            <summary>
            [Column] Gets or sets the Month07Amount.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataRevenueItem.Month08Amount">
            <summary>
            [Column] Gets or sets the Month08Amount.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataRevenueItem.Month09Amount">
            <summary>
            [Column] Gets or sets the Month09Amount.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataRevenueItem.Month10Amount">
            <summary>
            [Column] Gets or sets the Month10Amount.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataRevenueItem.Month11Amount">
            <summary>
            [Column] Gets or sets the Month11Amount.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataRevenueItem.Month12Amount">
            <summary>
            [Column] Gets or sets the Month12Amount.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataRevenueItem.ACGDataRevenue">
            <summary>
            [Column] Gets or sets the ACGDataRevenue
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataRevenueItem.RevenueType">
            <summary>
            [Column] Gets or sets the RevenueType
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataRevenueItem.EntryTypeText">
            <summary>
            [Column] Gets or sets the EntryTypeText
            </summary>
        </member>
        <member name="T:LogicLayer.OBudgetReallocationFrom">
            <summary>
            Represents the money that will be reallocated from the specified
            budget account.
            </summary>
            <summary>
            Represents the money that will be reallocated from the specified
            budget account.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocationFrom.BudgetReallocationID">
            <summary>
            [Column] Gets or sets the foreign key to the 
            budget reallocation record that this detail belongs under.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocationFrom.AccountID">
            <summary>
            [Column] Gets or sets the budget account that this
            money is reallocated from.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocationFrom.Interval01Amount">
            <summary>
            [Column] Gets or sets the amount to reallocate in one of
            the 36 intervals in the budget period.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetReallocationFrom.TotalAmount">
            <summary>
            [Column] Gets or sets the total amount reallocationed.
            </summary>
        </member>
        <member name="T:LogicLayer.TLocationStockTakeReconciliationItem">
            <summary>
            Summary description for OStoreStockTakeItem
            </summary>
        </member>
        <member name="F:LogicLayer.TLocationStockTakeReconciliationItem.PhysicalQuantity">
            <summary>
            Captures the physical quantity of the catalogue item at stock take start.
            </summary>
        </member>
        <member name="T:LogicLayer.TContractPriceService">
            <summary>
            Summary description for OChecklist
            </summary>
            <summary>
            Summary description for OChecklist
            </summary>
        </member>
        <member name="T:LogicLayer.OContractPriceService">
            <summary>
            Represents part of a purchase agreement that indicates
            the fixed rates or set of fixed rates set out in the purchase 
            agreement contract along with a price factor applied to 
            the standard rates indicated in the fixed rates.
            </summary>
            <summary>
            Represents part of a purchase agreement that indicates
            the fixed rates or set of fixed rates set out in the purchase 
            agreement contract along with a price factor applied to 
            the standard rates indicated in the fixed rates.
            </summary>
        </member>
        <member name="P:LogicLayer.OContractPriceService.AllowVariation">
            <summary>
            [Column] Gets or sets a flag indicating if variation
            is allowed for the agreed price.
            </summary>
        </member>
        <member name="P:LogicLayer.OContractPriceService.VariationPercentage">
            <summary>
            [Column] Gets or sets the percentage variation allowed.
            </summary>
        </member>
        <member name="P:LogicLayer.OContractPriceService.AllowVariationText">
            <summary>
            Returns a translated string that indicates whether this item
            allows variation.
            </summary>
        </member>
        <member name="P:LogicLayer.OContractPriceService.ContractID">
            <summary>
            [Column] Gets or sets the foreign key to the Contract table.
            </summary>
        </member>
        <member name="P:LogicLayer.OContractPriceService.FixedRateID">
            <summary>
            [Column] Gets or sets the foreign key to the 
            FixedRates table.
            </summary>
        </member>
        <member name="P:LogicLayer.OContractPriceService.PriceFactor">
            <summary>
            [Column] Gets or sets the price factor that applies to the 
            items at and under the FixedRate item associated with this 
            agreement, so that when a Purchase Order is tied to this 
            contract, all prices of services are computed by multiplying 
            this price factor and the fixed price stated in the 
            FixedRate item.
            </summary>
        </member>
        <member name="P:LogicLayer.OContractPriceService.Contract">
            <summary>
            Gets or sets the OContract object that represents the 
            contract that is associated with this agreement.
            </summary>
        </member>
        <member name="P:LogicLayer.OContractPriceService.FixedRate">
            <summary>
            Gets or sets the OFixedRate object that represents the fixed rate item or items that this agreement covers.
            </summary>
        </member>
        <member name="T:LogicLayer.TPurchaseInvoiceVendorItem">
            <summary>
            Summary description for OPurchaseOrder
            </summary>
        </member>
        <member name="T:LogicLayer.OPurchaseInvoiceVendorItem">
            <summary>
            Represents a purchase order object as a legal document to a
            vendor to purchase materials or services.
            </summary>
        </member>
        <member name="T:LogicLayer.TSurveyPlannerAccess">
            <summary>
            Summary description for OSurveyPlanner
            </summary>
        </member>
        <member name="T:LogicLayer.OCRVTenderService">
            <summary>
            Contains all the declarations to instantiate the Schema classes.
            </summary>
        </member>
        <member name="T:LogicLayer.TScheduledWorkStaggeredEquipment">
            <summary>
            Summary description for OVendor
            </summary>
        </member>
        <member name="T:LogicLayer.OScheduledWorkStaggeredEquipment">
            <summary>
            Represents information the equipment that will be associated with
            the works scheduled, and the number of days or weeks or months or
            years to stagger that work.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkStaggeredEquipment.ScheduledWorkID">
            <summary>
            [Column] Gets or sets the foreign key to the ScheduledWork table 
            that indicates the scheduled work object that contains
            this record.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkStaggeredEquipment.EquipmentID">
            <summary>
            [Column] Gets or sets the foreign key to the Equipment table 
            that indicates the equipment that the work generated will be
            associated with.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkStaggeredEquipment.UnitsToStagger">
            <summary>
            [Column] Gets or sets the number of days/weeks/months/years
            to stagger the work. This means that the work generated
            for this equipment will be moved forward by the specified
            number of days/weeks/months/years from the date all works
            for that cycle are originally scheduled to start.
            <para></para>
            The scheduled work's StaggerBy will
            indicate the unit (day/week/month/year) to stagger. 
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkStaggeredEquipment.ScheduledWork">
            <summary>
            Gets or sets the OScheduledWork object that represents
            the scheduled work that contains this record.
            </summary>
        </member>
        <member name="P:LogicLayer.OScheduledWorkStaggeredEquipment.Equipment">
            <summary>
            Gets or sets the OEquipment object that represents
            the equipment that the work generated will be
            associated with.
            </summary>
        </member>
        <member name="T:LogicLayer.ORunningNumber">
            <summary>
            Represents sets of running numbers used by various modules throughout
            the system. This class also contains methods for other modules to 
            automatically generate different sets of running numbers by specifying
            an 'running number type' identifier.
            </summary>
        </member>
        <member name="M:LogicLayer.ORunningNumber.GenerateNextNumber(System.DateTime,System.String,System.String)">
            <summary>
            This method creates a global running number based on the object type specified,
            the prefixes, and the last generated month/year number.
            <param name="date">The date the running number is generated for.</param>
            <param name="objectTypeName">The persistent object type name</param>
            <param name="codes">Any prefixes generated that requires a different
            sequence of numbers.</param>
            <returns>Returns the running number as an integer</returns>
            </summary>
        </member>
        <member name="M:LogicLayer.ORunningNumber.GenerateNextNumber(System.String,System.String,System.Boolean)">
             <summary>
             This method creates a global running number based on the type specified,
             and the last generated month/year number.
            <para></para>
             The format string should specify the output format of the string, for example:
            	“INV-{2:00}{1:00}-{0:0000}?
             where 
             <list>
               <item>{0} is the running Number</item>
               <item>{1} is the month</item>
               <item>{2} is the year</item>
             </list>        
             <para></para>
             The following are some examples on how to use this method:
                string NewPONumber = ORunningNumber.GenerateNextNumber("PurchaseOrder", "PO-{2:00}{1:00}-{0:0000}", true);
             The above will generate something like: "PO-0709-1234"
             <para></para>
                string NewPONumber = ORunningNumber.GenerateNextNumber("PurchaseOrder", "PO-{4:00}{1:00}-{0:0000}", false);
             The above will generate something like: "PO-200709-1234"
             </summary>
             <param name="objectTypeName">The type of running number.</param>
             <param name="formatString">The C# format string for the output.</param>
             <param name="twoDigitYear">A flag to indicate whether the year should be generated in two digits, or four digits.</param>
             <returns>The running number in a format that is specified using the formatString.</returns>
        </member>
        <member name="P:LogicLayer.ORunningNumber.ObjectTypeName">
            <summary>
            [Column] Gets or sets the name of the persistent object
            type.
            </summary>
        </member>
        <member name="P:LogicLayer.ORunningNumber.Codes">
            <summary>
            [Column] Gets or sets the prefixes associated with
            this running number entry.
            </summary>
        </member>
        <member name="P:LogicLayer.ORunningNumber.LastNumber">
            <summary>
            [Column] Gets or sets the last number that was generated
            for this set.
            </summary>
        </member>
        <member name="P:LogicLayer.ORunningNumber.LastMonth">
            <summary>
            [Column] Gets or sets the month the last number for this 
            set was generated.
            </summary>
        </member>
        <member name="P:LogicLayer.ORunningNumber.LastYear">
            <summary>
            [Column] Gets or sets the year the last number for this 
            set was generated.
            </summary>
        </member>
        <member name="T:LogicLayer.PurchaseMatchType">
            <summary>
            Enumerates the different types of invoices.
            </summary>
        </member>
        <member name="F:LogicLayer.PurchaseMatchType.DirectInvoice">
            <summary>
            A direct invoice that does not have PO.
            </summary>
        </member>
        <member name="F:LogicLayer.PurchaseMatchType.InvoiceMatchedToPO">
            <summary>
            An invoice that is matched to a PO.
            </summary>
        </member>
        <member name="F:LogicLayer.PurchaseMatchType.InvoiceMatchedToPOReceipt">
            <summary>
            An invoice that is matched to a PO receipt.
            </summary>
        </member>
        <member name="T:LogicLayer.PurchaseInvoiceType">
            <summary>
            Enumerates the different types of invoices.
            </summary>
        </member>
        <member name="F:LogicLayer.PurchaseInvoiceType.StandardInvoice">
            <summary>
            A standard invoice.
            </summary>
        </member>
        <member name="F:LogicLayer.PurchaseInvoiceType.CreditMemo">
            <summary>
            A credit memo.
            </summary>
        </member>
        <member name="F:LogicLayer.PurchaseInvoiceType.DebitMemo">
            <summary>
            A debit memo.
            </summary>
        </member>
        <member name="M:LogicLayer.OCustomizedRecordObject.GetCustomizedRecordFields">
            --------------------------------------------------------------
            <summary>
            Get all the object record fields for this object in display order
            </summary>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="T:LogicLayer.OChecklistResponseSet">
            <summary>
            Represents a single choice in a collection of responses.
            For example, "Yes" may be a response in a response set
            of "Yes/No/Unknown".
            </summary>
        </member>
        <member name="M:LogicLayer.OChecklistResponseSet.IsDeactivatable">
            <summary>
            Disallows delete if:
            1. There is at least one checklist that uses this response.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OChecklistResponseSet.Saving">
            --------------------------------------------------------------
            <summary>
            Automatically compute the maximum score.
            </summary>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OChecklistResponseSet.ReorderItems(LogicLayer.OChecklistResponse)">
            --------------------------------------------------------------
            <summary>
            Re-order the list of items in the checklist response set.
            </summary>
            <param name="i"></param>
            --------------------------------------------------------------
        </member>
        <member name="P:LogicLayer.OChecklistResponseSet.ScoreDenominator">
            <summary>
            [Column] Gets or sets the maximum score that can be
            attained for this response set.
            </summary>
        </member>
        <member name="P:LogicLayer.OChecklistResponseSet.ChecklistResponses">
            <summary>
            Gets a list of ChecklistResponse objects associated with this ChecklistResponseSet
            </summary>
        </member>
        <member name="P:LogicLayer.OChecklistResponseSet.IsDesignChangeable">
            <summary>
            check if checklist changeable
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipmentTypePoint.IsIncreasingMeterText">
            <summary>
            Gets the text indicating whether this point is
            an increasing meter.
            </summary>
        </member>
        <member name="T:Pop3.Pop3MessageComponents">
            <summary>
            Summary description for Pop3MessageBody.
            </summary>
        </member>
        <member name="T:LogicLayer.TStoreBin">
            <summary>
            Summary description for OStoreItem
            </summary>
        </member>
        <member name="T:LogicLayer.OStoreBin">
            <summary>
            Represents a compartmentalization of the store into what
            is known as "bins" in Anacle.EAM. Each store must have
            a bin before checking in items. When a user creates a
            new store, a default bin is always created.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreBin.IsDeactivatable">
             <summary>
             This object is only deactivable if it has not been saved.
            
             Returns true if deactivable, false otherwise. The
             UIGridview makes use of this field to hide and show the
             DeleteObject button accordingly.
             </summary>
             <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreBin.HasItems(System.Guid)">
            <summary>
            Checks to see if the store bin with the specified storeBinId
            has any items currently held in the bin.
            </summary>
            <param name="storeBinId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreBin.GetStoreBinsByStoreID(System.Guid,System.Nullable{System.Guid})">
            <summary>
            Gets a list of store bins by the store ID.
            </summary>
            <param name="storeId"></param>
            <param name="includingStoreBinId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreBin.FindBinItem(System.Guid)">
            <summary>
            Find the batch whose type corresponds to the store item.
            </summary>
            <param name="storeItem"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreBin.FindBinItemByCatalogueID(System.Guid)">
            <summary>
            Find the batch whose type corresponds to the store item.
            </summary>
            <param name="storeItem"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreBin.AddBinItem(LogicLayer.OStoreItem,System.Guid,System.Nullable{System.Guid},System.Decimal,System.Nullable{System.DateTime},System.String,System.Decimal,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Add a new item batch into this bin.
            </summary>
            <param name="storeItem">The store catalog that this item belongs to.</param>
            <param name="catalogueId">The catalogue that this item should belong to.</param>
            <param name="quantity">The quantity in the base unit of measure to add.</param>
            <param name="expiryDate">The expiry date (if any) for this batch.</param>
            <param name="lotNumber">The batch number as specified by the manufacturer.</param>
            <param name="unitPrice">The unit price.</param>
            <param name="fromStoreId">The ID of the store to transfer the item from.
            Leave this empty perform a check-in instead of a transfer.</param>
            <param name="toStoreId">The ID of the store to transfer the item to,
            or check-in the item to.</param>
            <param name="sourceObjectId">The source object that caused a check-in or
            transfer.</param>
            <returns>An OStoreBinItem object representing the batch that was
            created.</returns>
        </member>
        <member name="M:LogicLayer.OStoreBin.GetTotalAvailableQuantity(System.Guid)">
            <summary>
            Sums the available quantity for all batches of item of the specified catalogueId
            that are stored in this Bin.
            </summary>
            <param name="catalogueId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreBin.GetTotalPhysicalQuantity(System.Guid)">
            <summary>
            Sums the physical quantity for all batches of item of the specified catalogueId
            that are stored in this Bin.
            </summary>
            <param name="catalogueId"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreBin.GetEquipmentStoreBinItem(System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Gets a list of equipment
            </summary>
            <param name="catalogueId"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OStoreBin.IsDefaultBin">
            <summary>
            [Column] Gets or sets a flag that indicates
            whether this bin is a default bin created by the
            OStore object. Default bins play a special role
            in the Asset Center. When OEquipment objects are
            created, they are automatically "checked-in" into
            the store and into the default store bin. And
            this flag is used to identify that.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBin.IsLocked">
            <summary>
            [Column] Gets or sets the IsLocked for this bin.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBin.StoreID">
            <summary>
            [Column] Gets or sets the foreign key to the Store table.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBin.Description">
            <summary>
            [Column] Gets or sets the description for this bin.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBin.Store">
            <summary>
            Gets or sets the OStore object that represents the store that
            has set up this bin.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBin.StoreBinItems">
            <summary>
            Gets a one-to-many list of OStoreBinItem objects that represents
            the various batches of stock items checked in to the store under
            this bin.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBin.StoreBinReservations">
            <summary>
            Gets a one-to-many list of OStoreBinReservation objects that
            represents the list of reservation of stock items in this bin.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBin.IsLockedText">
            <summary>
            Gets a translated text indicating whether the store bin
            is locked for stock taking.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBin.TotalPhysicalQuantity">
            <summary>
            Gets the total physical items in this bin, regardless of
            their catalogue type. This method is used to determine
            if this bin can be deactivated from the user interface.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBin.TotalPhysicalCost">
            <summary>
            Gets the total physical cost of stock for this bin.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreBin.StoreBinItemsConsolidated">
            <summary>
            Get a DataTable of the store bin items.
            </summary>
        </member>
        <member name="T:LogicLayer.StoreBinItemFIFOComparison">
            <summary>
            Comparer for FIFO.
            </summary>
        </member>
        <member name="T:LogicLayer.StoreBinItemLIFOComparison">
            <summary>
            Comparer for LIFO.
            </summary>
        </member>
        <member name="T:LogicLayer.StoreBinItemExpiryComparison">
            <summary>
            Comparer for Expiry date.
            </summary>
        </member>
        <member name="T:LogicLayer.TStoreAdjustItem">
            <summary>
            </summary>
        </member>
        <member name="T:LogicLayer.OStoreAdjustItem">
            <summary>
            Represents the record containing information about the 
            item to be adjusted.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjustItem.StoreAdjustID">
            <summary>
            [Column] Gets or sets the foreign key to the StoreAdjust table
            that indicates the adjustment object that contains this 
            item record.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjustItem.CatalogueID">
            <summary>
            [Column] Gets or sets the foreign key to the ? table.
            that indicates the catalogue of the item to adjust.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjustItem.StoreBinID">
            <summary>
            [Column] Gets or sets the foreign key to the ? table 
            that indicates the store bin that contains the item
            to adjust.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjustItem.StoreBinItemID">
            <summary>
            [Column] Gets or sets the foreign key to the StoreBinItem table 
            that indicates the item batch to adjust.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjustItem.AdjustUp">
            <summary>
            [Column] Gets or sets a value that indicates whether 
            the adjustment is upwards or downwards.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjustItem.Quantity">
            <summary>
            [Column] Gets or sets the quantity (in the base unit)
            to adjust. This value is always be positive, and the
            actual quantity to adjust depends on the AdjustUp value.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjustItem.StoreAdjust">
            <summary>
            Gets or sets the OStoreAdjust object that represents
            the adjustment object that contains this 
            item record.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjustItem.Catalogue">
            <summary>
            Gets or sets the OCatalogue object that represents
            the catalogue of the item to adjust.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjustItem.StoreBin">
            <summary>
            Gets or sets the OStoreBin object that represents
            the store bin that contains the item
            to adjust.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjustItem.StoreBinItem">
            <summary>
            Gets or sets the OStoreBinItem object that represents
            the item batch to adjust.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjustItem.SubTotal">
            <summary>
            Gets the sub-total as the unit price multiplied
            by the quantity.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjustItem.AdjustText">
            <summary>
            Gets the string text of the adjustment direction.
            </summary>
        </member>
        <member name="T:LogicLayer.TStoreAdjust">
            <summary>
            </summary>
        </member>
        <member name="T:LogicLayer.OStoreAdjust">
            <summary>
            Represents a store item adjustment form that contains a list of items that
            are to be adjusted to a single store. This can be used by the store
            manager to adjust his stock after a stock take finds additional or missing 
            stock.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreAdjust.IsDeactivatable">
            <summary>
            Disallow delete if:
            <para></para>
            1. The Adjustment has been committed into the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreAdjust.ValidateSufficientItemsForAdjustment">
            <summary>
            Validates if there are sufficient items in the store for check-out before
            committing the checkout. Returns true if there are sufficient items in the
            store, false, if at least one item is insufficient.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreAdjust.HasDuplicateAdjustItems(LogicLayer.OStoreAdjustItem)">
            <summary>
            Check if a duplicate adjustment already exists. Returns
            true if so, false otherwise.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreAdjust.Commit">
            <summary>
            Commits the transfer. Once this method is called, no items in the StoreTransferItems list
            should be modified.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreAdjust.Cancel">
            <summary>
            Cancel the check-in and saves to the database.
            The cancellation can take place only if there are
            no other transactions on the store bin items other
            than the one that was created by the check in.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreAdjust.ValidateCancellable">
            <summary>
            Validates and checks that this check in can be cancelled,
            that is, there must be no other transactions other than
            the one created by the check in.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjust.StoreID">
            <summary>
            [Column] Gets or sets the foreign key to the Store table
            that indicates the store where items will be adjusted.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjust.StoreStockTakeID">
            <summary>
            [Column] Gets or sets the foreign key to the StoreStockTake table
            that indicates which stock take generated this adjustment.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjust.Description">
            <summary>
            [Column] Gets or sets a description of the adjustment.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjust.IsCommitted">
            <summary>
            [Column] Gets or sets a flag indicating whether
            this adjustment has been committed.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjust.Store">
            <summary>
            Gets or sets the OStore object that represents
            the store where items will be adjusted.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjust.StoreAdjustItems">
            <summary>
            Gets a one-to-many list of OStoreAdjustItem objects that 
            represents the list of items and their quantities to 
            be adjusted.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjust.StoreStockTake">
            <summary>
            Gets a reference to the OStoreStockTake table that represents
            the represents the stock take that generated this adjustment.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjust.TaskLocations">
            <summary>
            Gets the list of locations associated with this task.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjust.TaskAmount">
            <summary>
            Gets the total amount of items that are to be checked in.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjust.CostOfStockAdjustedUpwards">
            <summary>
            Computes and returns the total cost of stock
            adjusted downwards.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjust.CostOfStockAdjustedDownwards">
            <summary>
            Computes and returns the total cost of stock
            adjusted downwards.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreAdjust.CostOfStockAdjusted">
            <summary>
            Computes and returns the total cost of stock
            adjusted and any direction.
            </summary>
        </member>
        <member name="T:LogicLayer.TFixedRate">
            <summary>
            Summary description for OChecklist
            </summary>
            <summary>
            Summary description for OChecklist
            </summary>
        </member>
        <member name="T:LogicLayer.OFixedRate">
            <summary>
            Represents a fixed rate item or a fixed rate group. A
            fixed rate item is a record describing services that 
            can be provided by an external vendor to the user's
            company. When used in a purchase agreement, it
            indicates the services and the unit price that the
            vendor provides to the company when a purchase order
            is raised for those services to the vendor.
            </summary>
            <summary>
            Represents a fixed rate item or a fixed rate group. A
            fixed rate item is a record describing services that 
            can be provided by an external vendor to the user's
            company. When used in a purchase agreement, it
            indicates the services and the unit price that the
            vendor provides to the company when a purchase order
            is raised for those services to the vendor.
            </summary>
        </member>
        <member name="M:LogicLayer.OFixedRate.IsDeactivatable">
            <summary>
            Overriden to prevent deactivation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OFixedRate.FindFixedRate(System.Boolean,System.String)">
            --------------------------------------------------------------
            <summary>
            Search for a fixed rate book/folder/item based on the
            name.
            </summary>
            <param name="isFixedRate"></param>
            <param name="value"></param>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="P:LogicLayer.OFixedRate.IsFixedRate">
            <summary>
            [Column] Gets or sets a value that indicates whether this fixed rate item is a fixed rate group or a physical item.
            <para></para>
            	<list>
            		<item>0 - Fixed Rate Group</item>
            		<item>1 - Fixed Rate Item</item>
            	</list>
            </summary>
        </member>
        <member name="P:LogicLayer.OFixedRate.LongDescription">
            <summary>
            [Column] Gets or sets the long description for this fixed 
            rate item. This is represented as a TEXT field in the database, 
            and has no limitation on the length. In contrast, the ObjectName field 
            can only hold up to 255 characters. 
            <para></para>
            This is applicable only if IsFixedRate = 1.
            </summary>
        </member>
        <member name="P:LogicLayer.OFixedRate.ItemCode">
            <summary>
            [Column] Gets or sets the item code for this
            fixed rate.
            </summary>
        </member>
        <member name="P:LogicLayer.OFixedRate.UnitPrice">
            <summary>
            [Column] Gets or sets the unit price of this item.
            </summary>
        </member>
        <member name="P:LogicLayer.OFixedRate.PageNumber">
            <summary>
            [Column] Gets or sets the page number for this fixed rate 
            item. This is applicable only if IsFixedRate = 1.
            </summary>
        </member>
        <member name="P:LogicLayer.OFixedRate.UnitOfMeasureID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table.
            </summary>
        </member>
        <member name="P:LogicLayer.OFixedRate.Parent">
            <summary>
            Gets or sets the OFixedRate object that represents the parent fixed rate that this current fixed rate item belongs under.
            </summary>
        </member>
        <member name="P:LogicLayer.OFixedRate.Children">
            <summary>
            Gets a one-to-many list of O objects that represents the 
            next level fixed rate items under this current item.
            </summary>
        </member>
        <member name="P:LogicLayer.OFixedRate.UnitOfMeasure">
            <summary>
            Gets or sets the OCode object that represents the unit of 
            measure for this item.
            </summary>
        </member>
        <member name="P:LogicLayer.OFixedRate.DefaultChargeOut">
            <summary>
            [Column] Gets or sets the DefaultChargeOut.
            </summary>
        </member>
        <member name="T:LogicLayer.OMemo">
            <summary>
            Represents a Memorandum object that can be used to 
            attach to any other PersistentObject in the system.
            </summary>
        </member>
        <member name="P:LogicLayer.OMemo.AttachedObjectID">
            <summary>
            Gets or sets the foreign key to the ObjectID of the PersistentObject
            that this OMemo object is attached to.
            </summary>
        </member>
        <member name="P:LogicLayer.OMemo.Message">
            <summary>
            Gets or sets the message of the memo.
            </summary>
        </member>
        <member name="T:LogicLayer.EnumBillToAMOSStatus">
            <summary>
            
            </summary>
        </member>
        <member name="T:LogicLayer.TStoreCheckOut">
            <summary>
            Summary description for OStoreItem
            </summary>
        </member>
        <member name="T:LogicLayer.OStoreCheckOut">
            <summary>
            Represents a check-out form that contains a list of items that
            are to be checked out from a single store.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreCheckOut.Cancel">
            <summary>
            Cancel the check-out and saves to the database.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreCheckOut.IsDeactivatable">
            <summary>
            Disallow delete if:
            <para></para>
            1. The Check-In has been committed into the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreCheckOut.ValidateSufficientItemsForCheckout">
            <summary>
            Validates if there are sufficient items in the store for check-out before
            committing the checkout. Returns true if there are sufficient items in the
            store, false, if at least one item is insufficient.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreCheckOut.HasDuplicateCheckOutItem(LogicLayer.OStoreCheckOutItem)">
             <summary>
             Check if there is a duplicate item in the list check-out items. An
             item is duplicate if another item with the same selected Catalogue and Bin
             is in the list.
            
             Returns false if no duplicates are found.
             </summary>
             <returns></returns>
        </member>
        <member name="M:LogicLayer.OStoreCheckOut.Commit">
            <summary>
            Commit the checkout and saves it to the database.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreCheckOut.ValidateCancellable">
            <summary>
            Validates and checks that this check out can be cancelled,
            that is, there must be no other transactions other than
            the one created by the check out.
            </summary>
        </member>
        <member name="M:LogicLayer.OStoreCheckOut.ValidateBinsNotLocked">
            <summary>
            Validates that none of the bins are locked.
            <para></para>
            Returns a list of store bins that are locked.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OStoreCheckOut.Description">
            <summary>
            [Column] Gets or sets the description of the check-out.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOut.DestinationType">
            <summary>
            [Column] Gets or sets the destination type.
            <para></para>
            	<list>
            		<item>0 - StoreDestinationType.None: No destination</item>
            		<item>1 - StoreDestinationType.User: Items are consumed by a user.</item>
            		<item>2 - StoreDestinationType.Work: Items are consumed by a work.</item>
            		<item>3 - StoreDestinationType.Location: Items are consumed by a location.</item>
            		<item>4 - StoreDestinationType.Equipment: Items are consumed by a equipment.</item>
            	</list>
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOut.WorkID">
            <summary>
            [Column] Gets or sets the foreign key to the Work table that
            indicates the Work this check out is meant for.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOut.UserID">
            <summary>
            [Column] Gets or sets the foreign key to the User table that
            indicates the User this check out is meant for.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOut.LocationID">
            <summary>
            [Column] Gets or sets the foreign key to the Location table.
            This is currently not used.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOut.EquipmentID">
            <summary>
            [Column] Gets or sets the foreign key to the Location table.
            This is currently not used.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOut.IsCommitted">
            <summary>
            [Column] Gets or sets a flag indicating whether
            this check out has been committed.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOut.Store">
            <summary>
            Gets or sets the OStore object that represents the store
            items will be checked out from.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOut.Work">
            <summary>
            Gets or sets the OWork object that represents the work
            that this check out will be meant for. Note that using this
            module to check-out items will not automatically add a
            work cost into the work.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOut.User">
            <summary>
            Gets or sets the OUser object that represents the user
            the items will be checked out to.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOut.Location">
            <summary>
            Gets or sets the OLocation object that represents the
            location the items will be checked out to. This is
            currently not in use.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOut.Equipment">
            <summary>
            Gets or sets the OEquipment object that represents the
            location the items will be checked out to. This is
            currently not in use.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOut.StoreCheckOutItems">
            <summary>
            Gets a one-to-many list of OStoreCheckOutItem objects that
            represents a list of items that will be checked out from
            the store once this object is committed.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOut.TaskLocations">
            <summary>
            Gets the list of locations associated with this task.
            </summary>
        </member>
        <member name="P:LogicLayer.OStoreCheckOut.TaskAmount">
            <summary>
            Gets the total amount of items that are to be checked in.
            </summary>
        </member>
        <member name="T:LogicLayer.TSurveyPlannerServiceLevel">
            <summary>
            Summary description for OSurveyTrade
            </summary>
        </member>
        <member name="P:LogicLayer.OReportColumnMapping.ResourceAssemblyName">
            <summary>
            Gets or sets the resource assembly name used to translate
            content in thec column.
            </summary>
        </member>
        <member name="P:LogicLayer.OReportColumnMapping.ResourceName">
            <summary>
            Gets or sets the resource name used to translate
            content in thec column. For example, Resources.WorkflowStates
            </summary>
        </member>
        <member name="T:LogicLayer.TLocationTypeParameter">
            <summary>
            Summary description for OLocationType
            </summary>
        </member>
        <member name="M:LogicLayer.OLocationTypeParameter.GetLocationTypeParameters(System.Guid)">
            <summary>
            Gets a list of location type parameters based on
            location type ID.
            </summary>
            <param name="locationTypeId"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OLocationTypeParameter.LocationTypeID">
            <summary>
            [Column] Gets or sets the foreign key to the
            LocationType table.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocationTypeParameter.UnitOfMeasureID">
            <summary>
            [Column] Gets or sets to the foreign key to the
            Code table to represent the unit of measure this
            reading is taken in.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocationTypeParameter.LocationType">
            <summary>
            Gets or sets the OLocationType object that contains
            this location type parameter.
            </summary>
        </member>
        <member name="P:LogicLayer.OLocationTypeParameter.UnitOfMeasure">
            <summary>
            Gets the OCode object representing the unit of
            measure that this parameter is taken in.
            </summary>
        </member>
        <member name="T:LogicLayer.TEquipmentTypeParameter">
            <summary>
            Summary description for OEquipmentType
            </summary>
        </member>
        <member name="T:LogicLayer.OEquipmentTypeParameter">
            <summary>
            Represents a parameter in a collection of parameters under
            an equipment type.
            </summary>
        </member>
        <member name="M:LogicLayer.OEquipmentTypeParameter.GetEquipmentTypeParameters(System.Guid)">
            <summary>
            Gets a list of location type parameters based on
            equipment type ID.
            </summary>
            <param name="equipmentTypeId"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OEquipmentTypeParameter.EquipmentTypeID">
            <summary>
            [Column] Gets or sets the foreign key to 
            the EquipmentType table.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipmentTypeParameter.UnitOfMeasureID">
            <summary>
            [Column] Gets or sets the foreign key to the OCode table.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipmentTypeParameter.EquipmentType">
            <summary>
            Gets or sets the OEquipmentType object 
            that represents the equipment type that 
            this parameter belongs to.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipmentTypeParameter.UnitOfMeasure">
            <summary>
            Gets or sets the OCode object that 
            represents the unit of measure the 
            reading of this parameter is taken in.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipmentTypeParameter.IsIncreasingMeter">
            <summary>
            [Column] Gets or sets a value that 
            indicates whether this parameter is an 
            increasing meter value, or an absolute 
            meter value.
            <para></para>
            An increasing meter value refers to 
            meters like water consumption meters, 
            power usage meters, where the reading 
            continues to increase over time until it 
            reaches the maximum and restarts over.
            <para></para>
            A non-increasing meter refers to 
            absolute meters like thermometers.
            <para></para>
            	<list>
            		<item>0 - This is a non-increasing 
            meter, like a thermometer.</item>
            		<item>1 - This is an increasing meter, 
            like a water/power usage meter.</item>
            	</list>
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipmentTypeParameter.ReadingMaximum">
            <summary>
            [Column] Gets or sets the maximum 
            value that the reading can reach, 
            before rewinding back to zero. This is 
            only applicable if IsIncreasingMeter is 1.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipmentTypeParameter.ReadingMultiplicationFactor">
            <summary>
            [Column] Gets or sets the factor to be 
            multiplied to the reading to get the true 
            value of the reading.
            </summary>
        </member>
        <member name="P:LogicLayer.OEquipmentTypeParameter.IsIncreasingMeterText">
            <summary>
            Gets the localized text that indicates 
            whether this parameter is an increasing 
            meter or not.
            </summary>
        </member>
        <member name="T:LogicLayer.TDashboard">
            <summary>
            Summary description for OChecklist
            </summary>
        </member>
        <member name="M:LogicLayer.ODashboard.GetDashboardByUserRoles(LogicLayer.OUser)">
            <summary>
            Gets a list of dashboards accessible by the 
            specified user based on his user roles.
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ODashboard.GetAllDashboards">
            <summary>
            Loads all dashboards from the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ODashboard.GetDropDownDashboardFields">
            <summary>
            Get all fields that are dropdowns only
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ODashboard.GetDropDownDashboardFields(System.String)">
            <summary>
            Get all fields that are dropdowns only
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ODashboard.TraverseCascade(System.Collections.Hashtable,LogicLayer.ODashboardField,System.Data.DataTable)">
            --------------------------------------------------------------
            <summary>
            Traverse into the cascading fields to search for loops.
            </summary>
            <param name="field"></param>
            <returns></returns>
            --------------------------------------------------------------      
        </member>
        <member name="M:LogicLayer.ODashboard.CascadeHasLoops">
            <summary>
            Checks to see if any of the fields has cascade loops.
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ODashboard.IsLoopCascade(System.Data.DataTable,LogicLayer.ODashboardField,LogicLayer.ODashboardField)">
            <summary>
            Checks if there is a loop cascade between a pair of report fields.
            </summary>
            <param name="cascadeTable"></param>
            <param name="field"></param>
            <param name="cascadeTo"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ODashboard.GetDashboardFieldsInOrder">
            <summary>
            Get all the dashboard fields for this dashboard in display order
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.ODashboard.ValidateNoDuplicateIdentifiers(LogicLayer.ODashboardField)">
            <summary>
            Validates to ensure that no two fields have the same identifiers.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LogicLayer.DashboardAxisType">
            <summary>
            Enumerates the various axis types.
            </summary>
        </member>
        <member name="F:LogicLayer.DashboardAxisType.Normal">
            <summary>
            A normal numeric or category axis that does not 
            have special scaling.
            </summary>
        </member>
        <member name="F:LogicLayer.DashboardAxisType.Stacked">
            <summary>
            A stacked axis that stacks a series on
            top of another series.
            </summary>
        </member>
        <member name="F:LogicLayer.DashboardAxisType.FullStacked">
            <summary>
            A stacked axis that stacks a series on
            top of another series and scales their
            values to a 100%.
            </summary>
        </member>
        <member name="F:LogicLayer.DashboardAxisType.DateTime">
            <summary>
            A date/time axis.
            </summary>
        </member>
        <member name="T:LogicLayer.DashboardSeriesType">
            <summary>
            Enumerates the types of series.
            </summary>
        </member>
        <member name="T:LogicLayer.DashboardPieType">
            <summary>
            Enumerates the types of pies charts.
            </summary>
        </member>
        <member name="T:LogicLayer.DashboardType">
            <summary>
            Enumerates the different types of dashboards 
            available for display.
            </summary>
        </member>
        <member name="T:LogicLayer.TCraft">
            <summary>
            Summary description for OChecklist
            </summary>
            <summary>
            Summary description for OChecklist
            </summary>
        </member>
        <member name="T:LogicLayer.OCraft">
            <summary>
            Represents a craft record containing information
            about the normal and overtime hourly rates of a technician.
            Basically, craft is a record indicating the superiority
            of the in-house technician in a company, and his pay scale.
            </summary>
            <summary>
            Represents a craft record containing information
            about the normal and overtime hourly rates of a technician.
            Basically, craft is a record indicating the superiority
            of the in-house technician in a company, and his pay scale.
            </summary>
        </member>
        <member name="M:LogicLayer.OCraft.IsDeactivatable">
            <summary>
            Disallows the deletion if:
            1. There is at least one user with this craft.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OCraft.NormalHourlyRate">
            <summary>
            [Column] Gets or sets the hourly rate for normal hours work.
            </summary>
        </member>
        <member name="P:LogicLayer.OCraft.OvertimeHourlyRate">
            <summary>
            [Column] Gets or sets the hourly rate for overtime work.
            </summary>
        </member>
        <member name="P:LogicLayer.OCraft.Users">
            <summary>
            Gets a one-to-many list of OUser objects that represents a list 
            of users associated with this craft.
            </summary>
        </member>
        <member name="P:LogicLayer.OCraft.DefaultChargeOut">
            <summary>
            [Column] Gets or sets the DefaultChargeOut.
            </summary>
        </member>
        <member name="P:LogicLayer.OCraft.DefaultOTChargeOut">
            <summary>
            [Column] Gets or sets the DefaultOTChargeOut.
            </summary>
        </member>
        <member name="T:LogicLayer.Resources.Errors">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Errors.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Errors.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Errors.BudgetAdjustment_InsufficientAmount">
            <summary>
              Looks up a localized string similar to There is insufficient amount in the budget for adjustment of the following accounts: {0}.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Errors.BudgetReallocation_budgetFromLess">
             <summary>
               Looks up a localized string similar to Unable to submit for
             approval because you are reallocating budget to {0}
            but reallocating any budget not from {0}..
             </summary>
        </member>
        <member name="P:LogicLayer.Resources.Errors.BudgetReallocation_budgetFromNotMatchTo">
             <summary>
               Looks up a localized string similar to Unable to submit for
             approval because the reallocating budget {0} has error in amount
            .
             </summary>
        </member>
        <member name="P:LogicLayer.Resources.Errors.BudgetReallocation_budgetToLess">
             <summary>
               Looks up a localized string similar to Unable to submit for approval because you are 
            reallocating budget from {0}  
            but reallocating any budget not to {0}..
             </summary>
        </member>
        <member name="P:LogicLayer.Resources.Errors.BudgetReallocation_InsufficientAmount">
            <summary>
              Looks up a localized string similar to There is insufficient amount in the source budget for adjustment of the following accounts: {0}.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Errors.CRVSerialNumberConfirmUsageUnsuccessful">
            <summary>
              Looks up a localized string similar to CRV serial number confirm usage unsuccessful. Please Use another CRV serial number..
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Errors.CRVTenderService_ConnectionFail">
            <summary>
              Looks up a localized string similar to CRV tender service connection fail..
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Errors.CRVTenderService_SystemCodeNotFound">
            <summary>
              Looks up a localized string similar to System Code not found for selected location..
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Errors.MessageTemplate_MessageTemplateCannotBeFound">
            <summary>
              Looks up a localized string similar to The message cannot be sent because the message template with the code &apos;{0}&apos; cannot be found..
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Errors.PurchaseBudget_UnableToTransferAmountFromTransactionLog">
            <summary>
              Looks up a localized string similar to Unable to transfer amount of ({0:#,##0.00}) from the previous purchase document..
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Errors.RequestForQuotation_UpdateCRVTenderVendorAwardStatusFail">
            <summary>
              Looks up a localized string similar to Update CRV Tender Vendor Award Status Fail.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Errors.Work_ItemAlreadyCheckOut">
            <summary>
              Looks up a localized string similar to Unable to check out item {0} because it is already checked out. Please uncheck the item..
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Errors.Workflow_ApprovalProcessDetailNotSpecified">
            <summary>
              Looks up a localized string similar to Unable to assign task to approvers because the Approval Process Detail is not specified, or has been deleted. This can happen if you configured the workflow to execute the SetStateAndAssignApprovers activity, but did not specify SubmitForApproval in the previous EventDriven activity..
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Errors.Workflow_ListInvalid">
            <summary>
              Looks up a localized string similar to Unable to assign users to the workflow task because the list returns by the workflow contains objects that are not of the OUser type..
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Errors.Workflow_NoWorkflowInstanceID">
            <summary>
              Looks up a localized string similar to Unable to trigger workflow event because the Activity for this PersistentObject &apos;{0}&apos; (ObjectID={1}) because there is no workflow instance ID. Did you forget to create this object with the IWorkflowEnabled interface?.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Errors.Workflow_UnableToAssignApprovers">
            <summary>
              Looks up a localized string similar to The workflow engine is unable to assign any approvers to the workflow task. This may be because the positions, approval hierarchies and approval processes have not been correctly configured..
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Errors.Workflow_UnableToAssignUsersOrPositions">
            <summary>
              Looks up a localized string similar to The workflow engine is unable to assign any users or positions to the workflow task..
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Errors.Workflow_UnauthorizedApproverException">
            <summary>
              Looks up a localized string similar to The workflow engine is unable to allow you to approve this task. This happens because the mode of forwarding for the approval process is &quot;All&quot; and because you are not an authorized user set up in the approval hierarchy..
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Errors.Workflow_WorkflowNotCreated">
            <summary>
              Looks up a localized string similar to Unable to trigger workflow event because the Activity for this PersistentObject &apos;{0}&apos; (ObjectID={1}) has not been created. Did you forget to create this object with the IWorkflowEnabled interface?.
            </summary>
        </member>
        <member name="F:LogicLayer.Workflow.currentUser">
            <summary>
            An OUser object of the user currently logged on 
            to the system.
            </summary>
        </member>
        <member name="M:LogicLayer.Workflow.CreateWorkflowForPersistentObject(LogicLayer.LogicLayerPersistentObject)">
            <summary>
            Creates a persistent object and a workflow instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.Workflow.CurrentUser">
            <summary>
            Gets or sets the User object of the user
            currently logged on to the system.
            </summary>
        </member>
        <member name="T:LogicLayer.EnumSMSSendType">
            <summary>
            Enum for SMS Send Type
            </summary>
        </member>
        <member name="T:LogicLayer.TBudgetPeriodOpeningBalance">
            <summary>
            
            </summary>
        </member>
        <member name="F:LogicLayer.OBudgetPeriodOpeningBalance.IsLow">
            <summary>
            A flag that indicates if the available amount in
            this budget account has fallen below threshold. (This flag
            is set in the method OBudgetPeriod.DetermineLowThresholdOpeningBalances)
            </summary>
        </member>
        <member name="M:LogicLayer.OBudgetPeriodOpeningBalance.ValidateTotal">
            <summary>
            Validates that the total of opening balances
            for all intervals equals the opening balance
            total.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OBudgetPeriodOpeningBalance.GetBudgetPeriodOpeningBalanceByBudgetIDAndDate(System.Guid[],System.Guid[],System.DateTime[])">
            <summary>
            Gets a list of opening balances by the budget ID and the
            starting date of deduction.
            </summary>
            <param name="budgetId"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OBudgetPeriodOpeningBalance.BudgetPeriodID">
            <summary>
            [Column] Gets or sets a foreign key to the
            BudgetPeriod table that indicates the budget
            period that this opening balance belongs under.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetPeriodOpeningBalance.AccountID">
            <summary>
            [Column] Gets or sets a foreign key to the 
            Account table that indicates the account 
            that this opening balance is meant for. It also
            indicates the account that is applicable to
            the budget period.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetPeriodOpeningBalance.IsActive">
            <summary>
            [Column] Gets or sets a flag that indicates
            whether or not this budget account is active
            or not.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetPeriodOpeningBalance.TotalOpeningBalance">
            <summary>
            [Column] Gets or sets the total funds
            available for expenditure at the opening 
            of the budget. 
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetPeriodOpeningBalance.OpeningBalance01">
            <summary>
            [Column] Gets or sets the funds available
            for an interval in the budget period. 
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetPeriodOpeningBalance.LowBudgetThreshold">
            <summary>
            [Column] Gets or sets the threshold in percentage
            so that if the available amount (after adjustments and
            commitments) falls below the (budget threshold * opening
            balance), a notification will be sent to the
            reminder recipients of the budget.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetPeriodOpeningBalance.Account">
            <summary>
            Gets or sets an OAccount object that represents
            that account this opening balance is meant for.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetPeriodOpeningBalance.BudgetPeriod">
            <summary>
            Gets or sets an OBudgetPeriod object that represents
            that budget period this opening balance is meant for.
            </summary>
        </member>
        <member name="P:LogicLayer.OBudgetPeriodOpeningBalance.TotalAvailableBalance">
            <summary>
            Gets the total available balance after all variations
            and commitments.
            </summary>
        </member>
        <member name="T:LogicLayer.OMessageAttachment">
            <summary>
            Represents a file attachment that can be attached to
            any <code>PersistentObject</code>.
            </summary>
        </member>
        <member name="M:LogicLayer.OMessageAttachment.NewAttachment(System.String,System.Byte[])">
            <summary>
            Creates a new OMessageAttachment object, so that you
            can use it to pass into the OMessage.SendMail method.
            </summary>
            <param name="filename"></param>
            <param name="fileBytes"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OMessageAttachment.MessageID">
            <summary>
            Gets or sets the foreign key of the <code>PersistentObject</code>to which
            this attachment is attached to.
            </summary>
        </member>
        <member name="P:LogicLayer.OMessageAttachment.Filename">
            <summary>
            Gets or sets the file name of this attachment.
            </summary>
        </member>
        <member name="P:LogicLayer.OMessageAttachment.FileBytes">
            <summary>
            Gets or sets the binary image of the attachment.
            </summary>
        </member>
        <member name="P:LogicLayer.OMessageAttachment.FileSize">
            <summary>
            Gets or sets the file size of this attachment.
            </summary>
        </member>
        <member name="T:MhtProcessor">
            <summary>
            Summary description for MhtProcessor
            </summary>
        </member>
        <member name="M:MhtProcessor.IsMhtContent(System.String)">
            <summary>
            Split.  
            </summary>
        </member>
        <member name="M:MhtProcessor.SplitMhtContent(System.String,System.String)">
            <summary>
            Split.  
            </summary>
        </member>
        <member name="T:LogicLayer.OTenantLeaseHOTO">
            <summary>
            </summary>
        </member>
        <member name="T:LogicLayer.EnumLeaseStatus">
            <summary>
            
            </summary>
        </member>
        <member name="T:LogicLayer.OCapitalandCompany">
            <summary>
            </summary>
        </member>
        <member name="P:LogicLayer.OCapitalandCompany.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OCapitalandCompany.Address">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OCapitalandCompany.Country">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OCapitalandCompany.PostalCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OCapitalandCompany.PhoneNo">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OCapitalandCompany.FaxNo">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OCapitalandCompany.ContactPerson">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OCapitalandCompany.RegNo">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OCapitalandCompany.PaymentName">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OCapitalandCompany.LogoFile">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OCapitalandCompany.LogoFileName">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OCapitalandCompany.ObjectNameAndAddress">
            <summary>
            Returns a concatenated string of both company
            name and the address.
            </summary>
        </member>
        <member name="P:LogicLayer.OCapitalandCompany.ImageUrl">
            <summary>
            Returns the image URL for the image.
            </summary>
        </member>
        <member name="T:LogicLayer.TAccountType">
            <summary>
            Summary description for OAccount
            </summary>
        </member>
        <member name="T:LogicLayer.OAccountType">
            <summary>
            
            </summary>
        </member>
        <member name="M:LogicLayer.OAccountType.GetAllAccountTypes">
            <summary>
            Gets a list of all account types.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OAccountType.IsTermContractType">
            <summary>
            [Column] Gets or sets a flag indicating whether
            this is a term contract type.
            <para></para>
            This flag is used by the ACG report generator to display
            all the term contract accounts.
            </summary>
        </member>
        <member name="P:LogicLayer.OAccountType.IsTermContractTypeText">
            <summary>
            Returns a text representing whether this account type
            is used as a term contract account type.
            </summary>
        </member>
        <member name="T:LogicLayer.Approvers">
            <summary>
            
            </summary>
        </member>
        <member name="T:LogicLayer.OMeter">
            <summary>
            Represents a condition-monitored point in which the 
            readings from any source can be tested against acceptable
            limits set up against this point. When the reading exceeds
            the acceptable limits, this can be set up to generate
            a Work object.
            <para></para>
            This point can also be associated with an OPC DA server,
            so that the OPC service can retrieve readings automatically
            from the OPC server.
            </summary>
        </member>
        <member name="T:LogicLayer.TSurveyPlannerRespondent">
            <summary>
            Summary description for OSurveyRespondent
            </summary>
        </member>
        <member name="T:LogicLayer.TSurveyPlannerNotification">
            <summary>
            Summary description for OSurveyReminder
            </summary>
        </member>
        <member name="T:LogicLayer.Resources.Objects">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.CenterAdmin">
            <summary>
              Looks up a localized string similar to Admin.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.CenterAnalysis">
            <summary>
              Looks up a localized string similar to Analysis.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.CenterAsset">
            <summary>
              Looks up a localized string similar to Asset.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.CenterBudget">
            <summary>
              Looks up a localized string similar to Budget.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.CenterInventory">
            <summary>
              Looks up a localized string similar to Inventory.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.CenterProcurement">
            <summary>
              Looks up a localized string similar to Procurement.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.CenterReportBuilder">
            <summary>
              Looks up a localized string similar to Report Builder.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.CenterService">
            <summary>
              Looks up a localized string similar to Service.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.CenterVendor">
            <summary>
              Looks up a localized string similar to Vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.CenterWork">
            <summary>
              Looks up a localized string similar to Work.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.MiscDatabase">
            <summary>
              Looks up a localized string similar to Database.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.MiscMyCreatedCases">
            <summary>
              Looks up a localized string similar to My Created Cases.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.MiscMyWork">
            <summary>
              Looks up a localized string similar to My Created Cases.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.MiscReassignTasks">
            <summary>
              Looks up a localized string similar to Reassign Tasks.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.MiscReportMigrate">
            <summary>
              Looks up a localized string similar to Migrate Report.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OAccount">
            <summary>
              Looks up a localized string similar to Account.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OACGData">
            <summary>
              Looks up a localized string similar to ACG Data.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OAnnouncement">
            <summary>
              Looks up a localized string similar to Announcement.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OApplicationSetting">
            <summary>
              Looks up a localized string similar to Application Setting.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OApprovalHierarchy">
            <summary>
              Looks up a localized string similar to Approval Hierarchy.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OApprovalProcess">
            <summary>
              Looks up a localized string similar to Approval Process.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OAttachmentType">
            <summary>
              Looks up a localized string similar to Attachment Type.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OAuditTrail">
            <summary>
              Looks up a localized string similar to Audit Trail.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OAuditTrailField">
            <summary>
              Looks up a localized string similar to Audit Trail (Database Fields).
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OBMSTransmissionStatus">
            <summary>
              Looks up a localized string similar to BMS Transmission Status.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OBudget">
            <summary>
              Looks up a localized string similar to Budget.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OBudgetAdjustment">
            <summary>
              Looks up a localized string similar to Budget Adjustment.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OBudgetGroup">
            <summary>
              Looks up a localized string similar to Budget Group.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OBudgetPeriod">
            <summary>
              Looks up a localized string similar to Budget Period.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OBudgetReallocation">
            <summary>
              Looks up a localized string similar to Budget Reallocation.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OCalendar">
            <summary>
              Looks up a localized string similar to Calendar.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OCampaign">
            <summary>
              Looks up a localized string similar to Campaign.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OCapitalandCompany">
            <summary>
              Looks up a localized string similar to Company.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OCase">
            <summary>
              Looks up a localized string similar to Case.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OCatalogue">
            <summary>
              Looks up a localized string similar to Inventory Catalog.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OChecklist">
            <summary>
              Looks up a localized string similar to Checklist.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OChecklistResponse">
            <summary>
              Looks up a localized string similar to Checklist Response.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OCode">
            <summary>
              Looks up a localized string similar to Code.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OCodeType">
            <summary>
              Looks up a localized string similar to Code Type.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OCompany">
            <summary>
              Looks up a localized string similar to Company.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OContract">
            <summary>
              Looks up a localized string similar to Contract.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OCraft">
            <summary>
              Looks up a localized string similar to Crafts.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OCurrency">
            <summary>
              Looks up a localized string similar to Currency.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OCurrencyExchange">
            <summary>
              Looks up a localized string similar to Currency Exchange Rate.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OCustomizedObject">
            <summary>
              Looks up a localized string similar to Customized Object.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OCustomizedRecordObject">
            <summary>
              Looks up a localized string similar to Customized Object.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.ODashboard">
            <summary>
              Looks up a localized string similar to Dashboard.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.ODocumentTemplate">
            <summary>
              Looks up a localized string similar to Document Template.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.ODocumentTemplateType">
            <summary>
              Looks up a localized string similar to Document Template Type.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OEmailLog">
            <summary>
              Looks up a localized string similar to Received Email History.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OEquipment">
            <summary>
              Looks up a localized string similar to Equipment.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OEquipmentType">
            <summary>
              Looks up a localized string similar to Equipment Type.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OEquipmentWriteOff">
            <summary>
              Looks up a localized string similar to Equipment Write-Off.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OFixedRate">
            <summary>
              Looks up a localized string similar to Service Catalog.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OFunction">
            <summary>
              Looks up a localized string similar to Function.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OLanguage">
            <summary>
              Looks up a localized string similar to Language.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OLocation">
            <summary>
              Looks up a localized string similar to Location.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OLocationType">
            <summary>
              Looks up a localized string similar to Location Type.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OMessage">
            <summary>
              Looks up a localized string similar to Message History.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OMessageTemplate">
            <summary>
              Looks up a localized string similar to Message Template.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OMeter">
            <summary>
              Looks up a localized string similar to Meter.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.ONotificationHierarchy">
            <summary>
              Looks up a localized string similar to Notification Hierarchy.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.ONotificationMilestones">
            <summary>
              Looks up a localized string similar to Notification Milestones.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.ONotificationProcess">
            <summary>
              Looks up a localized string similar to Notification Process.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OOPCAEEvent">
            <summary>
              Looks up a localized string similar to OPC AE Event.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OOPCAEServer">
            <summary>
              Looks up a localized string similar to OPC AE Server.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OOPCDAServer">
            <summary>
              Looks up a localized string similar to OPC DA Server.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OPoint">
            <summary>
              Looks up a localized string similar to Point.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OPointTariff">
            <summary>
              Looks up a localized string similar to Point Tariffs and Discounts.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OPointTrigger">
            <summary>
              Looks up a localized string similar to Trigger Template.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OPosition">
            <summary>
              Looks up a localized string similar to Position.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OPurchaseInvoice">
            <summary>
              Looks up a localized string similar to Purchase Invoice.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OPurchaseOrder">
            <summary>
              Looks up a localized string similar to PO / LOA.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OPurchaseRequest">
            <summary>
              Looks up a localized string similar to Purchase Request.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OPurchaseSettings">
            <summary>
              Looks up a localized string similar to Purchase Settings.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OReading">
            <summary>
              Looks up a localized string similar to Reading.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OReading_BillToAMOS">
            <summary>
              Looks up a localized string similar to Bill To AMOS.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OReading_Multiple">
            <summary>
              Looks up a localized string similar to Reading (Multiple).
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OReport">
            <summary>
              Looks up a localized string similar to Report.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.ORequestForQuotation">
            <summary>
              Looks up a localized string similar to Work Justification.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.ORole">
            <summary>
              Looks up a localized string similar to Role.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.ORunningNumberGenerator">
            <summary>
              Looks up a localized string similar to Running Number Generator.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OSafetyPrecaution">
            <summary>
              Looks up a localized string similar to Safety Precaution.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OScheduledWork">
            <summary>
              Looks up a localized string similar to Scheduled Work.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OServiceLevel">
            <summary>
              Looks up a localized string similar to Service Level.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OSessionAudit">
            <summary>
              Looks up a localized string similar to Login History.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OShift">
            <summary>
              Looks up a localized string similar to Shift.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OStore">
            <summary>
              Looks up a localized string similar to Store.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OStoreAdjust">
            <summary>
              Looks up a localized string similar to Adjustment.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OStoreCheckIn">
            <summary>
              Looks up a localized string similar to Check-In.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OStoreCheckOut">
            <summary>
              Looks up a localized string similar to Check-Out.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OStoreRequest">
            <summary>
              Looks up a localized string similar to Request.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OStoreStock">
            <summary>
              Looks up a localized string similar to Stock View.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OStoreStockTake">
            <summary>
              Looks up a localized string similar to Stock Take.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OStoreTransfer">
            <summary>
              Looks up a localized string similar to Transfer.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OSurveyGroup">
            <summary>
              Looks up a localized string similar to Survey Group.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OSurveyPlanner">
            <summary>
              Looks up a localized string similar to Survey Planner.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OSurveyRespondent">
            <summary>
              Looks up a localized string similar to Survey Respondent.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OTaxCode">
            <summary>
              Looks up a localized string similar to Tax Code.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OTechnicianRoster">
            <summary>
              Looks up a localized string similar to Technician Roster.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OTenant">
            <summary>
              Looks up a localized string similar to Tenant.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OTenantActivity">
            <summary>
              Looks up a localized string similar to Tenant Activity.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OTenantContact">
            <summary>
              Looks up a localized string similar to Tenant Contact.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OTenantLease">
            <summary>
              Looks up a localized string similar to Tenant Lease.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OUnitConversion">
            <summary>
              Looks up a localized string similar to Unit Conversion.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OUser">
            <summary>
              Looks up a localized string similar to User.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OUserCreation">
            <summary>
              Looks up a localized string similar to User Creation.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OUserUpdate">
            <summary>
              Looks up a localized string similar to User Update.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OUtility">
            <summary>
              Looks up a localized string similar to Utility.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OVendor">
            <summary>
              Looks up a localized string similar to Vendor.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OVendorPrequalification">
            <summary>
              Looks up a localized string similar to Vendor Prequalification.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OWork">
            <summary>
              Looks up a localized string similar to Work.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.OWorkflowRepository">
            <summary>
              Looks up a localized string similar to Workflow Repository.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.ServiceView">
            <summary>
              Looks up a localized string similar to EAM Services.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.String1">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.SubCategoryAuditTrail">
            <summary>
              Looks up a localized string similar to Audit Trails.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.SubCategoryCodes">
            <summary>
              Looks up a localized string similar to Codes.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.SubCategoryGeneralAdmin">
            <summary>
              Looks up a localized string similar to General Administration.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.SubCategoryReportBuilder">
            <summary>
              Looks up a localized string similar to Dashboard/Report Builder.
            </summary>
        </member>
        <member name="P:LogicLayer.Resources.Objects.SubCategorySystemAdmin">
            <summary>
              Looks up a localized string similar to System Administration.
            </summary>
        </member>
        <member name="T:LogicLayer.TWorkParameterReading">
            <summary>
            Summary description for OVendor
            </summary>
        </member>
        <member name="T:LogicLayer.OWorkParameterReading">
            <summary>
            Represents a parameter reading tied to a work object.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkParameterReading.WorkID">
            <summary>
            [Column] Gets or sets the foreign key to the Work table 
            that indicates the work that contains this reading record.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkParameterReading.EquipmentTypeParameterID">
            <summary>
            [Column] Gets or sets the foreign key to the EquipmentTypeParameter 
            table that indicates the equipment type parameter that this
            reading is taken for.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkParameterReading.LocationTypeParameterID">
            <summary>
            [Column] Gets or sets the foreign key to the LocationTypeParameter 
            table that indicates the location type parameter that this
            reading is taken for.
            that indicates
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkParameterReading.UnitOfMeasureID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table 
            that indicates the unit of measure of the parameter reading.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkParameterReading.Reading">
            <summary>
            [Column] Gets or sets the reading value of the parameter.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkParameterReading.Work">
            <summary>
            Gets or sets the OWork object that represents the
            work object that contains this reading record.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkParameterReading.UnitOfMeasure">
            <summary>
            Gets or sets the OCode object that represents
            the unit of measure of the parameter reading.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkParameterReading.EquipmentTypeParameter">
            <summary>
            Gets or sets the OEquipmentTypeParameter object that represents
            the equipment type parameter that this
            reading is taken for.
            </summary>
        </member>
        <member name="P:LogicLayer.OWorkParameterReading.LocationTypeParameter">
            <summary>
            Gets or sets the OLocationTypeParameter object that represents
            the location type parameter that this
            reading is taken for.
            </summary>
        </member>
        <member name="M:LogicLayer.OReport.ReorderItems(LogicLayer.OReportField)">
            --------------------------------------------------------------
            <summary>
            Re-order the display order of the individual fields in this 
            report.
            </summary>
            <param name="reportField"></param>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OReport.GetAllReportsByUserAndCategoryName(LogicLayer.OUser)">
            --------------------------------------------------------------
            <summary>
            Get all reports that the specified user has access to 
            and returns them as a DataTable.
            </summary>
            <param name="user"></param>
            <param name="categoryName"></param>
            <returns></returns>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OReport.GetReportFieldsInOrder">
            <summary>
            Get all the report fields for this report in display order
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OReport.GetDropDownReportFields">
            <summary>
            Get all fields that are dropdowns only
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OReport.TraverseCascade(System.Collections.Hashtable,LogicLayer.OReportField,System.Data.DataTable)">
            --------------------------------------------------------------
            <summary>
            Traverse into the cascading fields to search for loops.
            </summary>
            <param name="field"></param>
            <returns></returns>
            --------------------------------------------------------------      
        </member>
        <member name="M:LogicLayer.OReport.CascadeHasLoops">
            <summary>
            Checks to see if any of the fields has cascade loops.
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OReport.IsLoopCascade(System.Data.DataTable,LogicLayer.OReportField,LogicLayer.OReportField)">
            <summary>
            Checks if there is a loop cascade between a pair of report fields.
            </summary>
            <param name="cascadeTable"></param>
            <param name="field"></param>
            <param name="cascadeTo"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OReport.GetStaticReportSettings(LogicLayer.OReport,System.Byte[],System.String,System.String)">
            <summary>
            retrieve the static report setting such as Report dataset, query and parameter order if necessary 
            </summary>
            <param name="report"></param>
            <param name="b"></param>
            <param name="contents"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:LogicLayer.OReport.GetAllReports">
            <summary>
            Loads all reports from the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OReport.GetStaticReportSettings(LogicLayer.OReportTemplate,System.Byte[],System.String,System.String,System.String)">
            <summary>
            retrieve the static report setting such as Report dataset, query and parameter order if necessary
            </summary>
            <param name="reportTemplate"></param>
            <param name="b"></param>
            <param name="contents"></param>
            <param name="fileName"></param>
            <param name="templateName"></param>
        </member>
        <member name="M:LogicLayer.OReport.UpdateTableColumnName(System.Data.DataSet)">
            <summary>
            update the data table name with the column's display name for drag and drop report
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:LogicLayer.OReport.UpdateTableColumnName(System.Data.DataTable)">
            <summary>
            update the data table name with the column's display name for drag and drop report
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:LogicLayer.OReport.RemoveDataTableColumn(System.Data.DataSet)">
            <summary>
            remove invisible column so that system will not show it in dynamic report
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:LogicLayer.OReport.RemoveDataTableColumn(System.Data.DataTable)">
            <summary>
            remove invisible column so that system will not show it in dynamic report
            
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:LogicLayer.OReport.ValidateNoDuplicateIdentifiers(LogicLayer.OReportField)">
            <summary>
            Validates to ensure that no two fields have the same identifiers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OReport.Clone">
            <summary>
            Returns a clone copy of this object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OReport.OdbcSyntax">
            <summary>
            [Column] Gets or sets whether the Report's using ODBC Connection
            </summary>
        </member>
        <member name="P:LogicLayer.OReport.ReportType">
            <summary>
            [Column] Gets or sets type of the report
            </summary>
        </member>
        <member name="P:LogicLayer.OReport.ReportFileBytes">
            <summary>
            [Column] Gets or sets Bytes of the rdl or crystal report
            </summary>
        </member>
        <member name="P:LogicLayer.OReport.ReportFileName">
            <summary>
            [Column] Gets or sets file name of the rdl or crystal report
            </summary>
        </member>
        <member name="P:LogicLayer.OReport.ReportQuery">
            <summary>
            [Column] Gets or sets query string if the Spreadsheet report's not using CSharp
            </summary>
        </member>
        <member name="P:LogicLayer.OReport.UseCSharpQuery">
            <summary>
            [Column] Gets or sets whether the report uses CSharp
            </summary>
        </member>
        <member name="P:LogicLayer.OReport.CSharpMethodName">
            <summary>
            [Column] Gets or sets the CSharp method name if the report's using CSharp
            </summary>
        </member>
        <member name="P:LogicLayer.OReport.CategoryName">
            <summary>
            [Column] Gets or set the foreign key to the LocalizableCaption table to
            indicates Category Name
            </summary>
        </member>
        <member name="P:LogicLayer.OReport.ReportName">
            <summary>
            [Column] Gets or set the foreign key to the LocalizableCaption table to
            indicates Report Name
            </summary>
        </member>
        <member name="P:LogicLayer.OReport.CategoryAndReportName">
            <summary>
            Gets a string that concatenates the category
            and the report name of this report.
            </summary>
        </member>
        <member name="P:LogicLayer.OReport.AuditObjectDescription">
            <summary>
            Returns the category and report name for audit trailing.
            </summary>
        </member>
        <member name="M:LogicLayer.OLanguage.GetAllLanguages">
            <summary>
            Gets a list of all languages.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OLanguage.CultureCode">
            <summary>
            [Column] Gets or sets the culture code of country.
            </summary>
        </member>
        <member name="P:LogicLayer.OLanguage.DisplayOrder">
            <summary>
            [Column] Gets or sets the priority number of a displayed language
            </summary>
        </member>
        <member name="T:LogicLayer.TAnnouncement">
            <summary>
            Represents the schema for the Announcement table.
            </summary>
        </member>
        <member name="T:LogicLayer.OAnnouncement">
            <summary>
            Represents the current activity or a task of an object.
            </summary>
        </member>
        <member name="M:LogicLayer.OAnnouncement.GetAnnouncementsTable(LogicLayer.OUser,System.DateTime)">
            <summary>
            Gets a list of all announcements applicable to the
            current user and at the specified date time.
            </summary>
            <param name="user"></param>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OAnnouncement.Announcement">
            <summary>
            [Column] Gets or sets the announcement text that is
            to be display to the user.
            </summary>
        </member>
        <member name="P:LogicLayer.OAnnouncement.StartDate">
            <summary>
            [Column] Gets or sets the first date that this
            announcement should appear to the assigned users.
            Set this to null to indicate that there is no
            limit.
            </summary>
        </member>
        <member name="P:LogicLayer.OAnnouncement.EndDate">
            <summary>
            [Column] Gets or sets the last date that this
            announcement should appear to the assigned users.
            Set this to null to indicate that there is no
            limit.
            </summary>
        </member>
        <member name="P:LogicLayer.OAnnouncement.IsViewableByAll">
            <summary>
            [Column] Gets or sets a flag indicating whether
            this announcement can be viewed by all users,
            regardless of their position.
            </summary>
        </member>
        <member name="P:LogicLayer.OAnnouncement.Positions">
            <summary>
            Gets a list of positions that are able to see 
            this announcement.
            </summary>
        </member>
        <member name="T:LogicLayer.EnumTaskImportance">
            <summary>
            
            </summary>
        </member>
        <member name="M:LogicLayer.DocumentGenerator.TrustAllCertificates(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Method to trust all certificates
            </summary>
            <param name="obj"></param>
            <param name="certificate"></param>
            <param name="chain"></param>
            <param name="errors"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.DocumentGenerator.WKHtmlToPdf(System.String)">
            <summary>
            Generate a PDF from a HTML file.
            </summary>
            <param name="Url"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.DocumentGenerator.GenerateFromCrystalReportTemplate(System.Byte[],System.Data.DataSet,System.Nullable{System.Int32})">
            <summary>
            Generate a Word, Excel or PDF report from a Crystal Reports template.
            </summary>
            <param name="templateFileBytes"></param>
            <param name="ds"></param>
            <param name="outputFormat"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.DocumentGenerator.GenerateFromRDLTemplate(System.Byte[],System.Data.DataSet,System.Nullable{System.Int32})">
            <summary>
            Generates an Excel or PDF output given a RDL template and a DataSet.
            </summary>
            <param name="templateFileBytes"></param>
            <param name="ds"></param>
            <param name="outputFormat"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.DocumentGenerator.GenerateFromMHTTemplate(System.Byte[],System.Object,System.Object,System.Nullable{System.Int32})">
            <summary>
            Generate a document report from an MHT template.
            </summary>
            <param name="templateFileBytes"></param>
            <param name="persistentObject"></param>
            <param name="applicationSettingsObject"></param>
            <param name="outputFormat"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.DocumentGenerator.GenerateDocument(LogicLayer.ODocumentTemplate,System.Object)">
            <summary>
             Generates a document from a given document template object.
            </summary>
            <param name="documentTemplate"></param>
            <param name="persistentObject"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.DocumentGenerator.GenerateDocument(System.Nullable{System.Guid},System.Object)">
            <summary>
             Generates a document from a given document template ID.
            </summary>
            <param name="documentTemplateId"></param>
            <param name="persistentObject"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.DocumentGenerator.GenerateDocument(System.Byte[],System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object)">
            <summary>
             Generates a document from a given document template.
            </summary>
            <param name="templateFileBytes"></param>
            <param name="templateType"></param>
            <param name="outputFormat"></param>
            <param name="persistentObject"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.DocumentGenerator.MergePdfDocuments(System.String,System.String[])">
            <summary>
            Merges multiple PDFs into one single PDF using PDFSharp library.
            </summary>
            <param name="outputFileName"></param>
            <param name="inputFileNames"></param>
        </member>
        <member name="T:Pop3.Pop3Message">
            <summary>
            DLM: Stores the From:, To:, Subject:, body and attachments
            within an email. Binary attachments are Base64-decoded
            </summary>
        </member>
        <member name="T:LogicLayer.QuotationReceived">
             <summary>
            
             </summary>
        </member>
        <member name="T:LogicLayer.BudgetSummary">
             <summary>
            
             </summary>
        </member>
        <member name="T:LogicLayer.OPurchaseRequestItem">
            <summary>
            Represents the item requested in a purchase request object.
            </summary>
            <summary>
            Represents the item requested in a purchase request object.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequestItem.EstimatedUnitPrice">
            <summary>
            [Column] Gets or sets the EstimatedUnitPrice
            that indicates the purchase request that contains this item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequestItem.Subtotal">
            <summary>
            Gets the sub total awarded for this
            line item. The sub-total is the unit price (in base currency) 
            multiplied by the quantity provided.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequestItem.PurchaseRequestID">
            <summary>
            [Column] Gets or sets the foreign key to the PurchaseRequest table 
            that indicates the purchase request that contains this item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequestItem.ItemNumber">
            <summary>
            [Column] Gets or sets the item number of this purchase
            request item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequestItem.ItemType">
            <summary>
            [Column] Gets or sets a value that indicates the type
            this item belongs to.
            <para></para>
            <list>
              <item>0 - Material</item>
              <item>1 - Services</item>
              <item>2 - Others</item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequestItem.ItemDescription">
            <summary>
            [Column] Gets or sets the description of this item.
            This description is filled up with the material's (catalogue)
            or service's (fixed rate) name. If ItemType = 2, however,
            this description is entered by the user manually through
            the user interface.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequestItem.CatalogueID">
            <summary>
            [Column] Gets or sets the foreign key to the Catalogue table 
            that indicates the material item requested.
            This is applicable if ItemType = 0.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequestItem.FixedRateID">
            <summary>
            [Column] Gets or sets the foreign key to the FixedRate table 
            that indicates the service item requested.
            This is applicable if ItemType = 1.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequestItem.UnitOfMeasureID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table 
            that indicates the unit of measure of this material
            or service. 
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequestItem.QuantityRequired">
            <summary>
            [Column] Gets or sets the quantity required.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequestItem.UnitPrice">
            <summary>
            [Column] Gets or sets the estimated unit price of
            this item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequestItem.ReceiptMode">
            <summary>
            [Column] Gets or sets the mode that this purchase order item should be
            received in.
            <list>
                <item>0 - Receive quantity </item>
                <item>1 - Receive dollar amount </item>
            </list>
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequestItem.PurchaseRequest">
            <summary>
            Gets or sets the OPurchaseRequest object that represents
            the purchase request that contains this item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequestItem.UnitOfMeasure">
            <summary>
            Gets or sets the OCode object that represents
            the unit of measure of this material
            or service. 
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequestItem.Catalogue">
            <summary>
            Gets or sets the OCatalogue object that represents
            the material item requested.
            This is applicable if ItemType = 0.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequestItem.FixedRate">
            <summary>
            Gets or sets the OFixedRate object that represents
            the service item requested.
            This is applicable if ItemType = 1.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequestItem.ReceiptModeText">
            <summary>
            Gets the text of the mode of receipt for this
            purchase order item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequestItem.Amount">
            <summary>
            Gets the amount in dollars of this line item.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequestItem.PurchaseOrderItem">
            <summary>
            Gets the purchase order item that this request item 
            has been copied to.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequestItem.RequestForQuotationItem">
            <summary>
            Gets the request for quotation item that this request
            item has been copied to.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequestItem.ItemTypeText">
            <summary>
            Gets the localized text for the item type.
            </summary>
        </member>
        <member name="P:LogicLayer.OPurchaseRequestItem.CopiedToObjectNumber">
            <summary>
            Gets the request for quotation number or purchase
            order number that this item has been copied.
            </summary>
        </member>
        <member name="T:LogicLayer.BudgetDeductionPolicy">
            <summary>
            Enumerates the various deduction policies 
            that the user can implement for the budget.
            </summary>
        </member>
        <member name="F:LogicLayer.BudgetDeductionPolicy.DeductAtSubmission">
            <summary>
            Indicates the budget available balance
            is deducted at the point when the procurement
            object is submitted for approval.
            </summary>
        </member>
        <member name="F:LogicLayer.BudgetDeductionPolicy.DeductAtApproval">
            <summary>
            Indicates the budget available balance
            is deducted at the point when the procurement
            object is approved.
            </summary>
        </member>
        <member name="T:LogicLayer.EnumBillStatus">
            <summary>
            
            </summary>
        </member>
        <member name="M:LogicLayer.OUserUpdate.UpdatePositions">
            <summary>
            Runs through all the UserUpdateUser in UserUpdate Object
            If there are any positions in the UserUpdateUser Object
            It Will replace the current users with the new positions.
            </summary>
        </member>
        <member name="P:LogicLayer.OVendorEvaluation.TaskLocations">
            <summary>
            Gets a list of all locations applicable to this task.
            </summary>
        </member>
        <member name="T:LogicLayer.TSurveyServiceLevel">
            <summary>
            Summary discription for OSurveyGroup.
            </summary>
        </member>
        <member name="T:LogicLayer.OSurveyServiceLevel">
            <summary>
            Represents a survey group.
            </summary>
        </member>
        <member name="M:LogicLayer.OSurveyServiceLevel.GetSurveyServiceLevels">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OSurveyServiceLevel.SurveyChecklistID">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyServiceLevel.SurveyChecklist">
            <summary>
            
            </summary>
        </member>
        <member name="P:LogicLayer.OSurveyServiceLevel.SurveyTargetType">
            <summary>
            
            </summary>
        </member>
        <member name="T:LogicLayer.TUnitConversion">
            <summary>
            Summary description for OChecklist
            </summary>
        </member>
        <member name="T:LogicLayer.OUnitConversion">
            <summary>
            Represents a record of a base unit from which conversions to 
            target unit can be set up.
            </summary>
        </member>
        <member name="M:LogicLayer.OUnitConversion.HasDuplicateUnitOfMeasure">
            <summary>
            Checks if there's duplicate conversion with the same 'From' unit of measure.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUnitConversion.FindConversion(System.Guid)">
            <summary>
            Find the unit conversion based on the target UnitOfMeasureID.
            </summary>
            <param name="TargetUnitOfMeasureID"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUnitConversion.FindConversion(System.Guid,System.Guid)">
            <summary>
            Find the unit conversion based on base UnitOfMeasureID and the target UnitOfMeasureID.
            </summary>
            <param name="BaseUnitOfMeasureID"></param>
            <param name="TargetUnitOfMeasureID"></param>
            <param name="reverse"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUnitConversion.FindConversionFactor(System.Guid,System.Guid)">
            <summary>
            Find the conversion factor from the fromUnitOfMeasureID,
            to the toUnitOfMeasureID.
            </summary>
            <param name="fromUnitOfMeasureID"></param>
            <param name="toUnitOfMeasureID"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUnitConversion.GetConversions(System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Gets a list of all possible target conversions given the base UnitOfMeasureID, and
            returns it in a DataTable. This datatable will also include the base UnitOfMeasureID,
            and the conversion factor for this will be 1.0.
            </summary>
            <param name="FromUnitOfMeasureID"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUnitConversion.ConvertBaseToActualQuantity(System.Guid,System.Guid,System.Decimal)">
            <summary>
            Compute the conversion such that 
            the result = baseQuantity * conversionFactor.
            </summary>
            <param name="reverse"></param>
            <param name="baseUnitOfMeasureId"></param>
            <param name="actualUnitOfMeasureId"></param>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUnitConversion.ComputeBaseToActualCost(System.Guid,System.Guid,System.Decimal)">
            <summary>
            Compute the conversion such that 
            the result = baseCost / conversionFactor.
            </summary>
            <param name="reverse"></param>
            <param name="baseUnitOfMeasureId"></param>
            <param name="actualUnitOfMeasureId"></param>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUnitConversion.ConvertActualToBaseQuantity(System.Guid,System.Guid,System.Decimal)">
            <summary>
            Convert actual quantity to base quantity.
            </summary>
            <param name="baseUnitOfMeasureId"></param>
            <param name="actualUnitOfMeasureId"></param>
            <param name="actualQuantity"></param>
            <returns></returns>
        </member>
        <member name="M:LogicLayer.OUnitConversion.ConvertActualToBaseCost(System.Guid,System.Guid,System.Decimal)">
            <summary>
            Convert actual quantity to base quantity.
            </summary>
            <param name="baseUnitOfMeasureId"></param>
            <param name="actualUnitOfMeasureId"></param>
            <param name="actualQuantity"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OUnitConversion.FromUnitOfMeasureID">
            <summary>
            [Column] Gets or sets the foreign key to the Code table that indicates
            the base unit of measure to convert from.
            </summary>
        </member>
        <member name="P:LogicLayer.OUnitConversion.FromUnitOfMeasure">
            <summary>
            Gets or sets the OCode object that represents the base unit measure to 
            convert from.
            </summary>
        </member>
        <member name="P:LogicLayer.OUnitConversion.UnitConversionsTo">
            <summary>
            Gets a one-to-many list of OUnitConversionTo objects that represents all 
            the possible unit of measures to convert to.
            </summary>
        </member>
        <member name="T:LogicLayer.PurchaseItemType">
            <summary>
            Enumerates the different line item types in the Procurement module.
            </summary>
        </member>
        <member name="F:LogicLayer.PurchaseItemType.Material">
            <summary>
            Indicates that the line item is a material/inventory item.
            </summary>
        </member>
        <member name="F:LogicLayer.PurchaseItemType.Service">
            <summary>
            Indicates that the line item is a service item.
            </summary>
        </member>
        <member name="F:LogicLayer.PurchaseItemType.Others">
            <summary>
            Indicates that the line item is any other item that do not
            fall into the Material or Service categories.
            </summary>
        </member>
        <member name="T:LogicLayer.ReceiptModeType">
            <summary>
            Enumerates the various receipt modes.
            </summary>
        </member>
        <member name="F:LogicLayer.ReceiptModeType.Quantity">
            <summary>
            Indicates that the line item is received by the quantity.
            This mode is commonly used for inventory items.
            </summary>
        </member>
        <member name="F:LogicLayer.ReceiptModeType.Dollar">
            <summary>
            Indicates that the line item is received by dollar amount.
            This mode is commonly used for services.
            </summary>
        </member>
        <member name="T:LogicLayer.BudgetDistribution">
            <summary>
            Represents the different types of budget distribution
            available for all 
            </summary>
        </member>
        <member name="F:LogicLayer.BudgetDistribution.EntireAmount">
            <summary>
            Distribute the budget by the entire amount.
            </summary>
        </member>
        <member name="F:LogicLayer.BudgetDistribution.LineItem">
            <summary>
            Distribute the budget by line items.
            </summary>
        </member>
        <member name="T:LogicLayer.OChecklistResponse">
            <summary>
            Represents a collection of responses available to the user 
            for selection in a checklist item. An example of set of
            responses is as follows: Yes/No/Unknown. There are 3 responses,
            and the 3 together form a logical response set.
            </summary>
        </member>
        <member name="P:LogicLayer.OChecklistResponse.ChecklistResponseSetID">
            <summary>
            [Column] Gets or sets the foreign key to the
            ChecklistResponseSet table.
            </summary>
        </member>
        <member name="P:LogicLayer.OChecklistResponse.ScoreNumerator">
            <summary>
            [Column] Gets or sets the actual score accumulated by the
            checklist if the user selects this response for the checklist
            item.
            </summary>
        </member>
        <member name="P:LogicLayer.OChecklistResponse.DisplayOrder">
            <summary>
            [Column] Gets or sets the order of display of this response
            in relation to the rest of the responses in the response set.
            </summary>
        </member>
        <member name="P:LogicLayer.OChecklistResponse.ChecklistResponseSet">
            <summary>
            Gets or sets the OChecklistResponseSet object that contains
            this response as one of its many responses.
            </summary>
        </member>
        <member name="T:LogicLayer.OChecklist">
            <summary>
            Represents a checklist of many items, each item being a step
            in the checklist that must be performed as an action, or an item
            that must be inspected.
            </summary>
        </member>
        <member name="M:LogicLayer.OChecklist.ReorderItem(Anacle.DataFramework.PersistentObject)">
            --------------------------------------------------------------
            <summary>
            Reorder the checklist items by their step number.
            </summary>
            <param name="obj"></param>
            --------------------------------------------------------------
        </member>
        <member name="M:LogicLayer.OChecklist.GetChecklistsByType(System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="P:LogicLayer.OChecklist.IsChecklist">
            <summary>
            [Column] Gets or sets a flag that indicates whether this is a
            checklist group or a physical check with items within.
            <para></para>
            0 - This is a checklist group.
            1 - This is an actual physical checklist.
            </summary>
        </member>
        <member name="P:LogicLayer.OChecklist.Type">
            <summary>
            [Column] Gets or sets the flag that indicates whether this is
            a checklist for work or for survey.
            <para></para>
            0 - This checklist is for work.
            1 - This checklist is for survey.
            </summary>
        </member>
        <member name="P:LogicLayer.OChecklist.Benchmark">
            <summary>
            [Column] Gets or set the minimum score that total score of 
            the checklist should attain. This currently is information and
            does not affect any processing logic.
            </summary>
        </member>
        <member name="P:LogicLayer.OChecklist.Parent">
            <summary>
            [Column] Gets or sets a flag that indicates whether this is a
            </summary>
        </member>
        <member name="P:LogicLayer.OChecklist.Children">
            <summary>
            Gets a list of children OChecklist objects.
            <para></para>
            Note: A checklist group can contain checklist groups
            and physical checklists as children, but a physical checklist
            CANNOT have anything below it.
            </summary>
        </member>
        <member name="P:LogicLayer.OChecklist.ChecklistItems">
            <summary>
            Gets a list of OCheckListItems objects.
            </summary>
        </member>
        <member name="P:LogicLayer.OChecklist.IsDesignChangeable">
            <summary>
            check if checklist changeable
            </summary>
        </member>
        <member name="M:LogicLayer.Global.ReorderItems(System.Collections.IEnumerable,Anacle.DataFramework.PersistentObject,System.String)">
            <summary>
            Global function to reorder items in a list.
            </summary>
            <param name="objects">List of objects</param>
            <param name="objToReorder">Object that has just been updated. This should be null, or it should be one of the objects in the list.</param>
            <param name="propertyName"></param>
        </member>
        <member name="T:LogicLayer.PersistentObjectComparer">
            <summary>
            Class to sort objects based on an integer field
            </summary>
        </member>
        <member name="T:LogicLayer.TACGDataRevenue">
            <summary>
            </summary>
        </member>
        <member name="T:LogicLayer.OACGDataRevenue">
            <summary>
            </summary>
        </member>
        <member name="M:LogicLayer.OACGDataRevenue.CreateRevenue(LogicLayer.OCode)">
            <summary>
            [Column] Create ACGDataRevenue with ACGDataRevenueItem
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataRevenue.RevenueTypeID">
            <summary>
            [Column] Gets or sets the RevenueTypeID.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataRevenue.ACGDataID">
            <summary>
            [Column] Gets or sets the ACGDataID.
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataRevenue.ACGData">
            <summary>
            [Column] Gets or sets the ACGData
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataRevenue.RevenueType">
            <summary>
            [Column] Gets or sets the RevenueType
            </summary>
        </member>
        <member name="P:LogicLayer.OACGDataRevenue.ACGDataRevenueItem">
            <summary>
            [Column] Gets or sets the ACGDataRevenueItem.
            </summary>
        </member>
        <member name="T:LogicLayer.EquipmentDesignation">
            <summary>
            15th Dec 2010 - CM
            Added for Capitaland-IT
            </summary>
        </member>
        <member name="T:LogicLayer.TCampaign">
            <summary>
            Created by David
            </summary>
        </member>
        <member name="T:LogicLayer.OCampaign">
            <summary>
            Represents a variation log on the budget.
            </summary> 
        </member>
        <member name="T:LogicLayer.OCRVVendorService">
            <summary>
            Contains all the declarations to instantiate the Schema classes.
            </summary>
        </member>
    </members>
</doc>
